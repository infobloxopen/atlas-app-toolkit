// Code generated by go-bindata.
// sources:
// templates/.gitignore.gotmpl
// templates/Makefile.gotmpl
// templates/README.md.gotmpl
// templates/cmd/config/config.go.gotmpl
// templates/cmd/gateway/handler.go.gotmpl
// templates/cmd/gateway/main.go.gotmpl
// templates/cmd/gateway/swagger.go.gotmpl
// templates/cmd/server/main.go.gotmpl
// templates/docker/Dockerfile.application.gotmpl
// templates/docker/Dockerfile.gateway.gotmpl
// templates/pb/service.proto.gotmpl
// templates/svc/zserver.go.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGitignoreGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xca\xcc\xe3\x02\x04\x00\x00\xff\xff\x0c\xbf\xc6\xec\x04\x00\x00\x00")

func templatesGitignoreGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGitignoreGotmpl,
		"templates/.gitignore.gotmpl",
	)
}

func templatesGitignoreGotmpl() (*asset, error) {
	bytes, err := templatesGitignoreGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.gitignore.gotmpl", size: 4, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xdf\x8f\x9b\x38\x10\x7e\xc6\x7f\xc5\x28\x8a\xd4\xb8\x77\x06\xdd\xdb\x89\x53\xd4\xd2\x2c\xcd\xe6\xba\x0b\x2b\xc2\xb6\x5a\xa9\x12\x22\x60\x58\x54\x82\x39\x30\xd9\xae\xb2\xfb\xbf\x9f\x0c\x36\x3f\x92\xdd\x9e\xaa\xea\xf2\x10\xb0\x3d\xfe\xe6\xf3\x37\x9e\x19\x6e\x3c\xf7\x6f\x7b\xe5\x07\x9e\xeb\xfa\xa0\x69\x9a\x66\x2e\xe1\x78\x84\x2c\x01\xdd\x63\x8c\xc3\xf3\xf3\xf1\xd8\xbf\x1a\xe2\xdd\x09\xf7\xb4\x9b\xa6\x79\x2d\xdf\xc6\x93\x45\x0c\xcf\xcf\xe8\xc3\xed\xe6\xea\x22\xb8\xb1\xfc\x4b\x50\xb0\xbb\xac\x40\x17\xee\xea\x93\xed\x7d\xdc\x5c\xd9\xdd\x5a\xbb\x30\x5f\xac\x6e\xbd\x8b\x8d\x87\x8d\x98\x45\xdf\x68\x85\xd0\xed\xd6\xf6\x1c\xeb\xda\x86\xd1\xaf\x35\x14\x0b\x18\xad\x37\x7e\xb0\x72\xaf\xaf\x37\x1d\xe5\x0e\xa3\xbe\xa7\x79\x0e\x69\xc6\x21\xa6\x75\x54\x65\x3b\x0a\x84\xc4\x59\xc5\x1f\x97\xa4\x29\xea\xa6\x2c\x59\xc5\x69\x0c\x84\x84\xf9\x43\xf8\x58\xc3\xd3\x13\xd0\xe8\x9e\x41\x59\x51\x12\xb1\xfd\x3e\xe3\x18\x6d\xae\xad\xb5\x1d\x7c\xb6\xbd\xed\xc6\x75\x04\xf4\x3b\xe5\x55\xd0\xc1\x24\xa6\x07\x32\x5f\x0c\xfe\x31\x42\x5b\xdb\xfb\x6c\x7b\xc1\x87\x8d\x63\x79\x77\xa0\xd8\x0c\xe7\xc7\x46\x4d\xab\x03\xad\x94\xa1\x3c\xb7\xb4\x1b\xeb\x8f\x8d\x68\x1f\x9f\x58\xb7\x84\x4e\xe2\x42\xd3\xac\xe6\xd5\xa3\x8a\xcd\x30\x34\x7a\xfd\x47\x31\x31\xe7\x8b\xc9\xa9\xb0\x82\x1e\x62\x01\x1d\x97\x93\xe0\x60\xe3\xa2\x0d\x47\x92\xe5\x54\x97\xac\x24\x85\x2f\x19\xbf\x5f\x87\x9c\x3e\x84\xc2\x2d\x5a\x5b\xbe\xfd\xc5\xba\xfb\x91\x06\x69\x67\xdd\x9b\xfe\x97\x0a\xa7\xf6\xbf\xae\x03\x91\x90\xe7\x7a\x28\x1f\x3f\x25\x88\x22\x38\x5c\x79\xdf\xde\xfa\xc1\xad\xb3\xf1\x83\x2b\x77\x3d\x5c\x5a\x4e\x6b\x1e\x34\x45\xc6\xf5\x9c\xa5\x48\x26\x86\x7f\x77\x63\xc3\xbb\x25\xcc\x62\x9a\x84\x4d\xce\x67\x28\x4b\xe8\x3f\xb0\x50\xa2\x89\x75\xfc\xfb\xb0\x8c\x91\xb6\x76\x65\x3a\x8d\x7f\x82\xa7\x91\x32\xa4\x6d\xbd\x95\x10\x2f\x70\x9d\xe0\xd2\xdd\xfa\xc3\xaa\x4a\x8c\x38\xab\x0a\x21\xc4\x7c\x11\xee\xea\x32\xe4\xf7\x30\x5f\xe4\x61\xcd\x1f\x58\x15\xc3\x7c\x71\x6d\x7d\xb2\xdb\x83\x5e\x6d\xb6\x3e\xc6\x18\x0f\x90\x1b\x27\x58\xb9\x8e\x6f\x6d\x1c\xdb\xeb\x10\x25\x15\x6c\xd4\x55\x64\x9c\x44\xaf\x25\xba\xb2\x56\x97\xf6\x19\x51\x52\x7e\x4b\xe3\xac\x82\xf9\xe2\x25\x68\x6c\x9c\xdc\x18\x46\xa2\x30\xba\xa7\x48\x43\x5a\x17\x88\xc0\xbb\x75\x1c\xdb\x1b\x43\x76\x05\x03\xaa\xa6\x00\x42\xaa\xfd\x6b\x96\xbf\x2d\x81\x1c\x46\x7e\xa5\x4a\xd8\x7c\x85\x4a\x8f\xd3\x12\xea\x81\x84\xc7\xac\x48\xd8\x2e\x67\xdf\x8d\x5d\x93\xe5\x31\x67\x2c\x37\x0f\x7f\xf6\xf6\x6b\xdb\xb1\x3d\xcb\x77\xbd\x33\xfb\x88\x33\x23\xa5\x45\xb7\xe1\x0f\xa4\x4d\x91\x61\x1c\xb0\xc9\x19\x30\x90\x87\xd7\x14\x1b\x6c\x25\x9a\x50\x7f\xc2\xe0\x47\xb8\xfd\x44\xbf\x05\x23\x5a\xc4\x59\x82\xd0\xda\xed\x10\x83\x8f\x57\xd6\x7a\x2b\xab\xa0\x8a\x2b\x06\x92\x01\x39\x08\xa3\xf6\xca\x4b\x1b\x61\x44\x0e\x40\x22\x26\x0a\x85\x5a\xbc\xb1\x56\x9f\xac\xb5\xbd\x1d\x5f\x45\x19\x67\xc1\x21\x65\x90\x67\x35\x07\xdd\xd0\x75\x1d\x9e\x20\xad\x68\x29\x50\x66\xba\x71\xa0\x45\xcc\x2a\x63\x26\xea\x95\xe5\xad\x2e\x83\xb5\x2b\x2e\xe8\x76\x5c\x5c\x04\x44\x92\x15\x31\xe8\x40\x0a\xc6\x81\xb4\x17\xfb\xcd\x5b\xb5\xf9\xed\x1b\x20\xfc\xb1\xa4\x90\x00\x69\x6f\xff\xec\xad\x9e\xb2\x19\x42\xfa\xcd\xa5\xeb\xdc\x99\x20\xf3\x0b\xc9\xa7\xd9\x66\x2b\x74\xc5\xee\xc5\x5a\x07\x32\xef\x87\xb4\xef\xb1\xc2\x3c\x47\x61\x9e\x9b\xd0\x39\x87\xb2\x62\x9c\xed\x9a\xe4\x57\x30\x93\x3d\x47\xc9\x9e\x9b\x48\x7b\x3f\x5f\x4c\x75\xc0\x40\xe8\x77\x1a\x41\xca\x92\x3d\x07\x52\x8b\x7b\x72\x7c\x86\xaf\x7f\x0d\xbb\x85\x63\x24\xfe\x3a\x20\x81\x31\x56\xbe\xe5\xd5\xc6\x75\x88\x23\x1e\x4d\xa8\xd8\xe1\x01\x51\xb6\x81\xee\xa1\x86\xa4\x4d\x05\x35\x50\x3d\x7c\xba\xa5\xb3\x41\xe3\x81\x79\x46\xa8\xc3\x69\x09\x8c\xae\x1f\x06\xc2\x44\x06\x8c\xfb\x2c\x1e\x26\xda\x6a\x71\xe6\x4e\xb2\x98\x8c\x4e\xb8\x68\xef\x65\xf5\xe8\xdc\x92\x64\xc0\x1c\x0a\x3f\x06\xc2\x87\xf9\xb6\x71\x60\xd0\x5f\xe9\x83\x8a\x83\xea\x0d\xaa\xe3\xa8\x09\x29\x94\x1a\x49\x8e\xff\x87\x0a\x13\x87\x68\x32\xfa\x49\xd9\xa7\xbd\x1d\x8f\x66\x5e\x71\x29\x4f\x35\x1d\x9a\x2f\xaa\x7d\xde\x78\xa5\xdc\x93\xae\x2f\xf5\x96\xa9\x71\x3c\x92\xd3\xee\xdf\x53\x28\x9b\xfa\x1e\x89\xbf\x91\x3b\x31\x3c\x0d\xe0\xcb\xd1\x3b\xdd\x32\x25\x31\x66\xa0\xde\x7a\xbf\x32\xd3\x91\x7a\xe9\x34\x1e\xea\x2a\x7c\x45\x1a\x21\x29\x0b\x58\xc3\x97\x65\xde\xa4\x59\x51\x2f\xd3\xaa\x8c\x4c\x5d\x2c\xbd\xc0\x87\x08\x42\x84\x08\x1b\xf5\xe1\xd2\x6e\xce\x59\xca\x59\xcd\x63\x5a\x55\x4b\x5e\x35\xb4\x07\x10\x94\xe4\xa6\x43\x98\x67\x71\xc8\x69\xbb\x61\x96\x87\x45\xba\x4c\x99\xa9\xcf\x3a\x16\xf5\x43\x98\xa6\xb4\x6a\x17\x4d\xfd\xec\xe3\xab\xdc\xb5\x5f\xa0\x59\x44\xf5\xf6\x34\x43\x80\xbb\xb2\x86\xba\x87\x89\xb4\xd1\x25\x8a\x69\x09\xb4\xa8\x9b\x8a\x02\xe9\xd6\x09\x2b\xf2\xc7\xd3\xbd\xa4\x29\x05\x2f\x34\x19\xbd\x86\x84\xfe\x0d\x00\x00\xff\xff\xec\x77\x6d\x17\x9b\x0c\x00\x00")

func templatesMakefileGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileGotmpl,
		"templates/Makefile.gotmpl",
	)
}

func templatesMakefileGotmpl() (*asset, error) {
	bytes, err := templatesMakefileGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.gotmpl", size: 3227, mode: os.FileMode(420), modTime: time.Unix(1523916539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesReadmeMdGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x54\x4d\x6f\xdc\x36\x10\xbd\xf3\x57\x0c\xe0\x4b\x0d\x34\xda\x38\x06\xfa\x91\x9b\x8b\xb8\x41\x0f\x69\x83\x38\x48\x0e\x46\x11\x8f\xa4\x27\x89\x05\xc5\x61\x39\xa3\xdd\x08\x41\xfe\x7b\x41\x4a\xde\x3a\x39\xed\x42\xf3\xf1\xde\xcc\x7b\xc3\x0b\xfa\xf2\x85\x9a\x3f\x79\x06\x7d\xfd\xea\xdc\xa7\xf7\x93\x57\x1a\x11\x91\xd9\xd0\xd3\xbb\xdb\x9b\x57\x6f\x6e\x9b\xb9\xa7\xc1\x07\x50\x10\x51\x84\x95\x06\x09\x41\x4e\x4a\x4c\xf7\x49\xd2\x12\x38\x93\x61\x4e\x81\x0d\x7f\xff\x30\x99\x25\x7d\x79\x38\x8c\x5e\xad\x19\xbd\x4d\x4b\xdb\x74\x32\x1f\xde\x2e\x39\x05\xfc\x26\x62\xd3\xe1\xea\xf9\xaf\xd7\x57\x57\x6d\xfb\xfc\xfa\xa7\xab\xe1\xfa\x45\xff\xcb\xcf\xfc\xe2\xb2\xf9\xe4\xdc\x5f\x11\x94\x38\xf3\x98\x39\x4d\x24\x03\xa5\x2c\xff\xa0\x33\xea\xa1\x5d\xf6\xc9\xbc\x44\x1a\x05\x4a\x13\x32\x1a\xe7\x2e\x2e\xe8\x35\xcc\x7c\x1c\xe9\xce\x38\x1b\x7a\xe7\xde\x4f\x50\x90\x8f\x6a\x79\xe9\x4a\x85\xd2\xc9\x87\x40\x23\x8c\x56\x59\x88\xa9\x93\xb4\x96\xee\x36\xe1\x8c\xb0\x24\xe2\xd8\x53\x5e\x62\x2c\xdd\x24\x96\xdc\x4c\x41\x3a\x0e\x34\x73\x37\xf9\x08\x1a\x24\x53\x8f\x23\x82\xa4\x19\xd1\x6a\x85\x41\x2b\x7e\x5a\x72\x12\x85\x36\x74\x07\x50\x8f\x14\x64\xad\x49\xa5\x28\x8a\x41\x4b\xd3\x49\x4e\x64\xb2\x87\xbf\x21\x20\x91\x98\x82\x3f\x82\x74\x55\xc3\x5c\xa7\xbb\xa0\xb7\x19\x19\xff\x2e\x5e\xbd\x41\x9d\xfb\x38\xb1\x91\x4d\x3e\x8e\x5a\x87\x89\x40\x5f\x1a\x96\x71\x39\x84\xda\x51\x65\xb0\x13\x67\x54\x7a\x3b\xe0\x93\x78\xe9\xfc\xf0\xf0\xe0\x5e\x17\x2c\x7c\xe6\x39\x05\x68\xfd\x52\x01\xff\xd8\x32\x7d\x1c\x9d\xbb\x21\x35\xa4\x67\xed\xfa\xac\xfc\x92\x22\xfb\x32\xc6\x70\x2e\x23\xab\x7c\x10\x42\x65\x33\xf1\x11\x05\xad\xac\x9a\xbf\xd9\x14\xe2\xd1\x67\x89\xf5\xff\xbe\xe3\xc6\xb9\x3b\x5e\xe9\xb4\x4d\x84\x0a\xb5\x29\xd5\xe2\x29\xc5\x12\xdb\xf1\x36\x96\x37\x45\x27\x24\xb0\xed\x69\x4b\x34\x1f\x68\xf0\xd1\xeb\x84\x7e\x4b\xba\x8d\x3d\x9d\xbc\x4d\xc4\xf1\xb1\xba\x10\x1f\x77\xb7\xa8\xcc\xa0\x9e\x8d\x49\x16\x7b\xf4\xc2\xb6\x78\x92\x4c\x8b\x96\x24\xbf\x89\x57\x64\x31\x0b\x45\xd4\x59\x36\xd3\xbd\x3a\xcb\xeb\xdc\x4d\xdf\x13\xf7\xbd\x2f\x56\xe3\xb0\x4b\xcd\x6d\xe9\xfb\xbd\xda\x5e\x89\x53\x0a\xbe\xe3\x92\xdc\xd0\x1b\x5e\x5b\x50\xf0\x6a\x1b\xa1\x4e\xe6\x59\x22\x25\x6f\x03\x87\xa0\x54\xed\xd6\x2e\xe3\x58\x29\x5b\xb9\xca\xd1\x43\x37\x0e\xef\x76\xab\x16\xe6\xc5\x84\xea\xdc\xed\xe7\x14\xd8\x9f\x5d\x96\x97\x58\xa3\xbc\x98\xcc\xf5\xa2\x6b\x5e\x1d\xaa\x92\x39\x3b\xed\xbc\xec\xff\xb7\xf5\xe8\x08\xfa\x80\xac\x5e\x62\x35\xc4\x47\xd0\xa2\xa0\xfb\x3b\xcc\x1f\x90\xb7\x6b\x7f\x79\x38\x28\xe6\x23\x72\x23\x79\x3c\x5c\xd6\xee\xc7\x73\x4d\x43\xbf\x57\x34\x3c\x7e\x53\xe2\x23\xfb\xc0\x6d\xc0\x8f\xa4\xd8\xf4\xbd\x37\x1e\xeb\x7d\x54\x5a\x19\x49\xd4\x9b\xe4\xf5\xe9\x7b\x72\x7e\x4a\xca\x61\x1e\xf6\xb3\x39\x94\xc2\xcb\x86\xdc\x7f\x01\x00\x00\xff\xff\x07\x15\x93\x01\xcb\x04\x00\x00")

func templatesReadmeMdGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMdGotmpl,
		"templates/README.md.gotmpl",
	)
}

func templatesReadmeMdGotmpl() (*asset, error) {
	bytes, err := templatesReadmeMdGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md.gotmpl", size: 1227, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdConfigConfigGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x48\xce\xcf\x4b\xcb\x4c\xe7\xe2\x4a\xce\xcf\x2b\x2e\x51\xd0\xe0\x52\x50\x08\x76\x0d\x0a\x73\x0d\x8a\x77\x74\x71\x09\x72\x0d\x0e\x56\xb0\x55\x50\x32\xd0\x03\x43\x2b\x4b\x03\x4b\x03\x25\x2e\x05\x85\xea\x6a\x85\xcc\x34\x05\xbd\xf0\xcc\x92\x0c\xf7\xc4\x92\xd4\xf2\xc4\x4a\x85\xda\x5a\x77\xc7\x10\xd7\x70\xc7\x48\x6c\xfa\x2c\x0c\x2c\xc0\xfa\x60\x4a\x42\x83\x7c\x40\xd2\xfa\xd5\xd5\x0a\x7a\x7e\x89\xb9\xa9\x0a\x35\x0a\x20\xa1\xda\x5a\xfd\x32\x43\x7d\x25\x90\xf1\xa9\x79\x29\x0a\xb5\xb5\x5c\x9a\x5c\x80\x00\x00\x00\xff\xff\x6f\xdc\xa5\x59\xa7\x00\x00\x00")

func templatesCmdConfigConfigGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdConfigConfigGoGotmpl,
		"templates/cmd/config/config.go.gotmpl",
	)
}

func templatesCmdConfigConfigGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdConfigConfigGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/config/config.go.gotmpl", size: 167, mode: os.FileMode(420), modTime: time.Unix(1523485304, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayHandlerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6e\xdc\x30\x0c\x40\x67\xf3\x2b\xd8\x9b\x6c\xc0\x95\xf7\x00\x37\x14\x69\x8b\x74\xe8\x25\x48\x03\x74\x28\x3a\x28\x32\x23\x0b\xb5\x29\x83\xa2\x73\x3e\x5c\xfd\xef\x85\x7c\xbe\x76\x29\x32\x49\x24\xc8\x47\x3e\x8e\xd6\xfd\xb2\x9e\x70\xb0\x81\x01\xc2\x30\x46\x51\x2c\xa1\xd8\xb9\xc8\x4a\xb3\xee\xa0\xd8\x31\x69\xd3\xa9\x8e\xf9\xef\x83\x76\xd3\xb3\x71\x71\x68\xbc\x8c\xee\x3d\xb9\x98\x4e\x49\x69\x0b\xbd\x55\x3a\xda\x53\x23\x13\x6b\x18\x68\xed\x88\xd1\xf7\x64\x7c\xec\x2d\x7b\x13\xc5\xaf\x95\x3b\xa8\x00\x9a\x06\x0f\x74\x3c\x9f\xd1\x1c\xec\x40\xf8\x1b\xbf\x91\xbc\x06\x47\xcb\x72\x67\xb9\xed\x49\x50\x48\x27\xe1\x84\x96\xf1\xee\xe9\xe9\x01\xbb\x2d\xaf\x9d\x55\x4c\x24\xaf\x94\x50\x3b\x42\xff\xf8\x70\x8b\xdb\x70\x78\x99\xd8\xfd\x1f\x8c\x7f\xc9\xa5\xd3\x19\x37\x47\x73\x7b\x79\x6b\xcc\x9b\x7d\x68\x5b\xc1\xa4\x12\xd8\xd7\x18\x47\x4d\x68\x8c\xd9\x7c\x4c\xe6\xd0\xd7\x69\xbe\x1f\x35\x44\xae\xb0\xcc\x77\x31\x1b\xb3\x46\x12\x89\x52\xe1\x19\x8a\x61\x9a\xf1\x66\x8f\xd7\xbe\x03\x1d\xaf\xad\x65\x66\x1a\x63\x2a\x28\xda\x60\xfb\xfb\x3c\xe1\x66\x8f\x3f\x7e\xe6\xe1\xe6\xe3\x25\x15\x22\x9f\xd7\xf8\x7b\xd0\xee\x0b\x27\x72\x93\x50\x59\x2d\x50\x90\x48\x2e\x1f\x9f\xcd\x23\xf9\x90\x94\xe4\x2d\xcd\xcf\x12\x87\x4f\xdc\x8e\x31\xb0\x66\xe5\x1a\x87\x69\xfe\xe7\x59\xe3\x75\x85\x0a\x8a\xf0\x92\xf7\xc7\x77\x7b\xe4\xd0\x67\x87\xe2\x72\xfd\x1c\xae\x6a\x50\x2c\x70\xcd\xad\x18\x0e\x3d\x2c\xf0\x27\x00\x00\xff\xff\x3f\xd4\x1f\xb5\x43\x02\x00\x00")

func templatesCmdGatewayHandlerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayHandlerGoGotmpl,
		"templates/cmd/gateway/handler.go.gotmpl",
	)
}

func templatesCmdGatewayHandlerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayHandlerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/handler.go.gotmpl", size: 579, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xcb\x6e\xc3\x36\x10\x3c\x8b\x5f\xb1\xe5\xa1\x90\x00\x5b\x42\xae\x29\x72\x70\x1b\x27\x39\x24\x81\x61\xe7\x81\xa2\x28\x02\x46\x5a\xd1\x6c\x28\x52\x5d\x52\x7e\x20\xf5\xbf\x17\xa4\xe4\x57\x82\x9c\x28\xae\x96\xc3\x99\xd9\x61\x2b\xca\x0f\x21\x11\x1a\xa1\x0c\x63\xaa\x69\x2d\x79\x48\x59\xc2\x4b\x6b\x3c\x6e\x3c\x67\x09\xaf\xb5\x90\x61\xd5\x36\x2e\x06\x7d\xb1\xf4\xbe\x0d\xdf\x52\xf9\x65\xf7\x9e\x97\xb6\x29\x24\xb5\xe5\x18\x4b\xeb\xb6\xce\xe3\xb0\x95\xc2\xe3\x5a\x6c\x0b\xea\x8c\x57\x0d\x7e\x39\xa1\x4c\x6d\xdf\xb5\xdd\xd8\x16\x4d\x21\xbc\x16\x6e\x2c\xda\x76\xec\xad\xd5\x1f\xca\x17\x72\xcd\x59\xc6\xd8\x4a\x50\x20\xb4\x40\x5a\x21\x4d\xaa\x8a\x00\x9c\x27\x65\x24\x4b\x6e\x7b\xf8\x58\xdc\xd7\x16\x6b\x21\x25\xd2\xb5\x3a\xf6\x65\x8c\xd5\x9d\x29\xa3\xc6\x34\x83\x4f\x96\x14\x05\x94\x84\xc2\x23\xdc\x3d\x3d\xcd\x60\x29\x4c\xa5\x91\xa0\xb6\x04\x03\x65\x96\x20\xd1\xdd\x50\xbf\xbc\x82\x41\x41\xfe\xaa\xfc\x72\x46\xd6\xdb\x29\x91\xdd\x37\xa4\x72\x9d\xc7\xe2\x03\x3a\x27\x24\x9e\xfe\xcb\x58\xe2\x22\xf5\x61\x3f\x02\xa4\x88\xf8\x88\xeb\xcf\x4f\xc8\x1f\x45\x83\xf0\x1f\x04\x79\xaa\x44\xd8\xed\xf6\x98\xc3\x00\xf2\xdf\x45\xf9\x21\xc9\x76\xa6\x4a\xb3\x11\x1c\x6d\x88\x40\xc7\x4b\x8a\x22\xca\x6d\x41\x68\x0d\xef\x9d\x07\x4f\x42\x69\x65\x24\xf0\x82\x83\x35\xa0\x4c\x69\x9b\xb0\x27\xfc\xb7\x43\xe7\xdd\x17\x62\x70\x05\x61\xaa\xf9\x22\xa0\xcc\x08\x6b\xb5\x49\x59\x92\x94\xd6\xd4\x4a\xe6\xb7\x93\xa7\xe9\xeb\xe4\xcf\xb7\xe7\xf9\xfd\x5f\x97\x1a\x4d\xfa\xbd\x9e\x8d\x2f\xfe\x1e\xb1\xe4\x8b\x5c\x96\x64\x2c\x51\x75\x54\xfd\xcb\x15\x18\xa5\xc3\x00\x12\x6d\x65\x7e\x23\xbc\xd0\xda\xa4\x48\x41\xc0\x2e\x6a\x68\x44\xdb\xcf\x04\x4d\xd5\x5a\x65\xbc\x03\x6f\xf7\x03\x72\x2c\x69\xba\x4d\x30\x2f\x32\x7d\xc4\x75\xb4\xe3\xa1\xdb\xa4\x59\xfc\x95\xf7\xb7\xa6\xbc\x38\xb1\xf6\x79\x7e\x0f\xbb\x5d\xb1\xba\x28\xf8\x08\xce\xc8\x9d\x1d\xba\xe9\x4c\x99\xf2\xc2\xf5\xf9\x09\xbd\x43\x94\xce\x3d\x0e\xe7\x0f\x7c\x82\xaf\x7e\x89\xfb\xd0\x80\xa8\x2a\x42\xe7\x58\x12\xf9\xdd\x2b\xe7\xd1\x4c\x4c\x15\x59\xa6\x27\x69\x1d\x41\xd3\x6d\x32\xb6\x1b\x82\xa9\x8c\xf2\x87\x60\x56\x58\x8b\x4e\xfb\x03\xe6\x4a\xe8\x0e\xdd\x6f\x60\x5b\xaf\xac\x11\x5a\x6f\xa1\xf7\xbe\x23\xac\x60\xa5\x04\x94\xb6\x69\x84\xa9\xc6\x5a\x19\x84\xf0\x58\x1d\x4b\xc2\x12\x47\x69\xe4\x8b\xa0\xf4\xd7\xd3\xdc\xf0\xde\x04\x3e\x1a\x80\xf2\xc5\x74\xfe\x32\x9d\xbf\x4d\xae\xaf\xe7\xd3\xc5\x62\x04\x7c\xd0\x01\xb6\xee\xe5\xcd\x67\x7f\x0c\xce\xf1\xec\x3b\xf6\x99\x30\x3e\xf0\x3e\xa2\xef\x23\xf2\x33\xfc\xa0\xf4\xe7\x1b\x8e\x8f\x3a\xb0\xef\x37\xe3\x4a\x05\x09\xdc\x2d\x05\x61\xf8\xa8\x14\x61\xe9\x2d\x6d\xf7\xb8\x43\x63\xfe\x8f\xb3\x06\x6a\xa5\xf1\x00\x3d\x13\xe4\x30\x0d\x03\xf8\x3f\x00\x00\xff\xff\x39\x94\xbc\x0f\x00\x05\x00\x00")

func templatesCmdGatewayMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayMainGoGotmpl,
		"templates/cmd/gateway/main.go.gotmpl",
	)
}

func templatesCmdGatewayMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/main.go.gotmpl", size: 1280, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewaySwaggerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4a\xc3\x40\x10\x86\xcf\xd9\xa7\x18\x16\x84\x54\xcb\xe6\x2e\xf4\x26\x52\xc4\x43\x68\x2b\x9e\x97\x3a\xd9\x8c\xa6\x93\xed\xcc\xd4\x08\xe2\xbb\xcb\xa6\xf1\xe2\x6d\x98\x7f\xbf\x9d\xef\xcf\xf1\xf8\x11\x13\xc2\x29\x12\x3b\x47\xa7\x3c\x8a\x41\xed\x2a\x3f\x8c\xc9\xbb\xca\x33\x5a\xd3\x9b\xe5\x32\xe7\x68\x7d\xd3\xd1\x80\x65\x28\x0b\x35\x21\x4e\xea\xdd\xca\xb9\xa6\x81\xfd\x14\x53\x42\xd9\x46\x7e\x1b\x50\x40\xd0\x2e\xc2\x0a\x91\x61\x7b\x38\xb4\xd0\x2f\x7b\xeb\xa3\x81\xa2\x7c\xa2\x82\xf5\x08\x7a\xc5\x40\x33\x1e\x5d\x77\xe1\xe3\xbf\x8f\x6a\x99\xa0\x28\x84\x1d\x6a\x1e\x59\xf1\x55\xc8\x50\xd6\x20\x78\x86\xdb\x25\x39\x5f\x50\x6d\x05\xdf\xae\xca\x70\xbf\x81\xc5\x2c\x1c\x84\x4e\xad\x60\x47\x5f\xb5\xe0\x39\xbc\xec\x9e\x43\x1b\xad\x5f\x83\x6f\x96\xb3\x8d\x5f\x15\x66\x03\x7f\xc5\xc2\xd3\x48\x5c\x2f\x0a\x0f\x24\x6b\xc8\xf3\x8b\xbb\x0d\xf8\xb0\x40\xe1\x5d\x47\xf6\xae\x1a\xc6\x14\x5a\x21\xb6\xae\xf6\xa5\x11\x71\x82\x1b\xf5\x57\x64\x36\xdb\x97\x9e\x8f\x34\x60\x2d\xd3\x6c\x3c\x67\x3f\xee\x37\x00\x00\xff\xff\xcd\xd6\xe8\xba\x78\x01\x00\x00")

func templatesCmdGatewaySwaggerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewaySwaggerGoGotmpl,
		"templates/cmd/gateway/swagger.go.gotmpl",
	)
}

func templatesCmdGatewaySwaggerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewaySwaggerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/swagger.go.gotmpl", size: 376, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdServerMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x6b\xe3\x3c\x10\x3d\x4b\xbf\x62\x3e\x1f\x3e\x6c\x70\xe5\x7b\x4b\x0f\xdd\x36\x0b\x0b\x4b\x29\x09\xdb\x6b\x51\xe5\xb1\x22\x56\x96\xcc\x48\x49\x08\xdd\xfc\xf7\x45\xb2\xda\x98\xb2\x0b\x9b\x8b\x05\x9a\x99\xf7\x46\xef\xbd\x64\x92\xea\xa7\xd4\x08\xa3\x34\x8e\x73\x33\x4e\x9e\x22\xd4\x9c\x55\x83\x95\xba\xe2\xac\x72\x18\xd3\xa1\x4d\xdc\xee\x5e\x85\xf2\x63\xa7\x69\x52\x57\xa8\x7c\x38\x86\x88\x63\xa7\xfd\x55\xbe\x19\x4d\xdf\x5b\x3c\x48\xc2\x4b\xfb\x3b\xeb\xb5\x36\x4e\xa7\x93\x76\xe1\xe2\xf1\xbd\xb4\xa6\x97\xd1\xd3\xa7\xc9\x60\x68\x37\x05\x74\x4b\x5c\xef\xb5\x45\xa1\xbd\x95\x4e\x0b\x4f\x3a\xc3\x57\xbc\xe1\x7c\x2f\x29\x3d\xfc\xae\xef\x09\x43\x80\x10\xc9\x38\x9d\x0a\xc3\xce\xa9\xac\x4f\xdd\xc0\x1b\x67\x69\x59\x24\xb8\xbe\x85\x19\x56\x3c\xe2\xa1\x6e\x38\xeb\x3a\x50\x84\x32\x22\x38\x3c\x40\x54\x13\x58\x13\x22\x3a\xa4\x81\x33\xeb\x5a\x40\xca\x53\x0e\xa3\xf8\x9e\x2b\x75\x15\xd5\x54\xb5\x50\x28\x1b\xce\xcc\x90\xbb\xfe\xbb\x05\x67\x6c\x22\x2b\x6c\xe2\xab\x8c\xd2\x5a\x57\x23\x51\xc3\xd9\xe9\x33\x9b\x5e\x3f\xdd\x43\x40\xda\x23\xc1\xc1\xc4\x2d\x9c\xd5\x01\xb5\x4d\xd6\xb2\x52\xbd\xbe\x85\xf4\xe2\xb4\xf4\x26\xdf\xd4\x9c\xb1\x7c\xf3\xc3\x49\x3a\x7e\x73\x11\x49\xe1\x14\x7d\x2e\xe4\xca\xcb\x19\x4c\xdc\x27\xb0\xdc\x79\x9e\x66\x69\x99\xe2\x81\xf1\x6e\xc1\x9d\x8b\x19\xe2\xc3\x22\xb1\x18\x5e\x92\x35\xed\x3b\x52\x09\xc3\x1f\x61\x8a\xe2\x7f\xc1\x38\xfb\xb1\x72\x91\x8e\xf5\xac\x5d\x33\x43\xe7\x6f\xfa\xcc\x56\x11\xea\xe4\x01\x65\xd5\x8c\x42\x30\xe3\x64\x71\x44\x17\xe7\x47\x64\x15\xe3\x16\xb3\x5a\x45\x5a\xce\xc2\x87\x8b\x61\x9f\x35\xfc\x22\x83\x51\x45\x8a\x8b\xfc\x9b\x5e\xc5\xba\xac\xf0\xf6\x06\xe2\x51\x8e\x08\xbf\x60\x53\x96\x39\x9d\x0a\xe6\x4c\xdc\xc2\x22\x1c\x89\x3c\xdf\x8a\xdc\x53\x5b\xd7\xdc\xfc\x23\xeb\xa9\x84\xd9\x38\x13\xe7\x30\x77\x1d\xf4\x38\xc8\x9d\x8d\xef\xf1\x91\x73\x18\x6f\xc0\x4f\x49\x08\x69\xed\x11\x02\x46\xd8\x1b\x09\xca\x8f\xa3\x74\xfd\x95\x35\x0e\x21\xfd\x41\x04\xce\xd2\x21\x36\xf9\xc7\xf2\x2c\xa9\xfe\xbf\x84\xb9\x85\xaa\x20\x55\x2d\x28\xef\x06\xa3\xc5\x66\xb5\x7e\x5e\xad\x5f\xee\x1e\x1e\xd6\xab\xcd\xa6\x85\x2a\xeb\xbb\x88\xee\xfb\x44\x53\x60\x9f\x24\x05\xac\x1b\x7e\xe2\xbf\x03\x00\x00\xff\xff\xd3\xa1\x88\x0c\xa7\x04\x00\x00")

func templatesCmdServerMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdServerMainGoGotmpl,
		"templates/cmd/server/main.go.gotmpl",
	)
}

func templatesCmdServerMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdServerMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/server/main.go.gotmpl", size: 1191, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileApplicationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcc\x29\xc8\xcc\x4b\xb5\x32\xd6\x33\xe5\xe2\x0a\xf7\x0f\xf2\x76\xf1\x0c\x52\xd0\x2f\x2d\x2e\xd2\xcf\xc9\x4f\x4e\xcc\xe1\xe2\x72\xf6\x0f\x88\x54\x48\xca\xcc\xd3\x2f\x4e\x2d\x2a\x4b\x2d\x42\x62\x72\x71\xb9\xfa\x85\x04\x45\x06\xf8\x7b\xfa\x85\x28\x44\x2b\x21\x24\x94\x62\xb9\x00\x01\x00\x00\xff\xff\x6b\xe1\xc2\x91\x5b\x00\x00\x00")

func templatesDockerDockerfileApplicationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileApplicationGotmpl,
		"templates/docker/Dockerfile.application.gotmpl",
	)
}

func templatesDockerDockerfileApplicationGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileApplicationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.application.gotmpl", size: 91, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileGatewayGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcc\x29\xc8\xcc\x4b\xb5\x32\xd6\x33\xe5\xe2\x0a\xf7\x0f\xf2\x76\xf1\x0c\x52\xd0\x2f\x2d\x2e\xd2\xcf\xc9\x4f\x4e\xcc\xe1\xe2\x72\xf6\x0f\x88\x54\x48\xca\xcc\xd3\x4f\x4f\x2c\x49\x2d\x4f\xac\x44\x66\x73\x71\xb9\xfa\x85\x04\x45\x06\xf8\x7b\xfa\x85\x28\x44\x2b\x21\xc9\x28\xc5\x72\x01\x02\x00\x00\xff\xff\x64\x58\x5f\x58\x5e\x00\x00\x00")

func templatesDockerDockerfileGatewayGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileGatewayGotmpl,
		"templates/docker/Dockerfile.gateway.gotmpl",
	)
}

func templatesDockerDockerfileGatewayGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileGatewayGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.gateway.gotmpl", size: 94, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPbServiceProtoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x41\x6f\xe3\x46\x0f\xbd\xeb\x57\xf0\xf3\x69\xf3\x21\x96\xd0\xf6\x16\x23\x87\xa2\x9b\x6d\x17\x28\xba\x45\x12\xa0\xc7\x82\x1a\x51\xd2\x60\x47\xc3\xe9\x90\xb2\x63\xa4\xfe\xef\xc5\xcc\x48\xb6\x8b\xa4\x3d\xf4\x62\x8c\x67\xc8\x47\xf2\x91\x7c\x92\xa3\x57\x7c\x81\x7b\xd8\x84\xc8\xca\xdf\x6d\x76\x55\x15\xd0\x7c\xc5\x81\x40\x28\xee\xad\xa1\x5d\x55\xd9\x29\x70\x54\xd8\x0c\xcc\x83\xa3\x06\x83\x6d\xd0\x7b\x56\x54\xcb\x5e\xea\xec\xba\xd9\x5d\xcc\xac\x8e\x73\x5b\x1b\x9e\x1a\x77\xec\xb5\xc9\xef\x66\x3b\x90\xdf\xee\xd1\xd9\x0e\x95\x9a\x37\x87\x37\x28\x57\x5e\x72\xc0\x61\xa0\xd8\x70\xc8\x01\xdf\x0d\x5e\x95\x47\x18\xf8\xf7\xb5\x80\x7b\xd8\xbc\xbe\x82\xed\xa1\x7e\x64\x56\x38\x9d\x5e\x5f\xcf\xc7\x26\x9d\x7f\xc1\x89\xca\x35\x39\x59\x4e\xd7\x97\xbe\x4b\x96\xa1\xdd\x85\x36\x45\x68\x1a\x78\x30\x23\xdf\xe6\xdf\x47\xfa\x63\x26\xd1\x5b\x40\xdf\x2d\x17\x12\xd8\x0b\xc1\x84\x5f\x09\xe6\x00\x08\x1b\x51\x8c\x4a\x71\x03\xf4\x82\x53\x70\x04\x3a\xa2\x26\x1c\x51\xf4\x9d\x80\xf5\x10\x1c\x1a\x82\x9e\x23\xe8\x48\x80\x21\x38\x6b\x72\x69\x90\x2b\x6b\xe7\x1e\x3a\xea\xad\xb7\xa5\x5c\xf8\xac\x80\xce\xf1\x41\xb2\xfd\xf7\xea\x50\x12\xe0\x0f\x3f\x7f\x06\x65\x18\xc8\x53\x44\x25\x40\x9f\xd2\xdf\x2a\x6f\x53\x15\x6b\xf8\x35\x8c\xa4\x14\x39\x21\x4f\xec\x45\x63\x0e\x58\xc3\xf3\x48\xb9\x94\x04\xb8\xba\xc8\xc8\xb3\xeb\xa0\x25\x88\x94\x73\xed\xe0\x60\x75\x4c\x01\xae\x92\xdd\x4a\x20\x63\x7b\x6b\x2e\x59\x8b\x19\x69\xc2\x3a\xd3\xf6\x13\x45\x02\x8c\x04\xc2\x13\xc1\x48\x2e\xf4\xb3\x83\x48\xc2\x73\x34\x24\x29\x73\xb4\x1d\x1c\x79\x4e\x94\x1c\x79\x8e\x17\x9c\x4c\xf3\x5d\x42\x19\x55\x83\xdc\x35\xcd\xd5\x7c\x59\xdf\x73\xeb\xf8\x85\x03\xf9\x06\x13\x19\x5b\xc3\x5e\xd1\xa8\x6c\x31\x84\xa6\x75\xdc\x36\x13\x8a\x52\x2c\x63\xd8\xac\xcf\x65\x70\xae\x61\x3b\xda\x93\xe3\x40\x51\xea\x32\xe8\x39\x42\x19\x43\x76\xdb\x76\xee\x7b\x8a\xd2\x74\x6c\xa4\x79\xe3\x7c\x95\xd3\x10\x83\xd9\x92\x61\x39\x8a\xd2\xf2\x77\x40\xa5\x03\x1e\xff\x6b\x38\xd1\xa3\xa3\xc2\x24\x86\x70\x3c\x93\xd3\x5b\x3f\xfc\x2f\xdf\x3f\x7f\xf9\xf8\xe5\x0e\x3e\x71\x1a\x0d\xb0\xa9\xa7\xb3\xc9\x13\x93\xb8\x6d\x67\xeb\xba\x42\x2b\x1f\xfc\xfb\x2d\x2a\x00\x4f\x3a\x1b\x9d\x23\x5d\x8c\x27\x12\xc1\xa1\xf4\x48\x66\xab\xe5\xe5\xaa\xf5\x35\x3c\xa0\x19\x61\x4d\x1c\x12\x58\x49\x7e\xf5\x05\x2b\x80\x20\x13\x3a\x07\x8e\x07\x6b\x30\xf5\xde\x70\xec\xd2\x0c\xa6\x16\xc6\x29\x43\xdd\x42\xee\x8e\xf5\xd6\x0f\x80\x19\x49\x28\x5a\x92\x64\xe7\x71\xa2\xa4\x1f\x33\x41\x40\x1b\xa5\xae\x56\xf8\x34\xb2\xf0\x5a\x01\x88\xc6\xe4\xb9\xde\xdf\xc3\x37\xbb\xea\x54\xfd\xcd\x6e\x59\xdb\x6c\x1e\x29\x10\x2a\x95\xf5\x05\x32\x23\xcb\x3f\xf8\x2c\x9b\xfd\xaf\x4e\xe7\xf0\x6a\xa7\x14\xfb\xdb\x8c\x73\x66\xf6\x63\x5a\x62\xca\xdb\x77\x56\x99\x3f\xe1\xa9\x68\x2c\x9c\x4e\xab\xdc\x66\x3d\xb1\x2a\x30\x91\x8e\xdc\x49\x0d\x9f\x88\x1c\xf4\x91\x28\x81\x29\x83\x19\xd1\x0f\x05\x29\x71\x92\xb8\x79\x1f\x31\x75\x9e\x54\x29\x6e\x2f\x8d\xf3\x38\x59\x3f\x24\x24\xc3\x7e\x4f\x7e\x51\x95\x47\x9a\x68\x6a\x29\x16\x6d\x5b\x1a\x66\xb3\x00\x5c\x4b\xd7\xaa\x06\x94\x3c\x67\x74\xee\x98\x9b\x34\x90\x42\xa4\x89\xf7\xd4\xd5\xd5\x5a\xc7\xfb\x39\x65\x0a\x83\x29\x61\x3e\x5c\x75\xe4\x06\x22\xe9\x1c\xbd\xac\xb7\x85\xf3\x9b\xec\x01\xb0\x08\xf9\x6f\x56\xc7\x1f\xcb\x2e\x25\x69\x5e\xc9\xfd\x35\xf2\xde\x76\x49\x7a\x43\xb0\x7e\x90\x54\xf7\x81\xc8\xc3\xe3\xc3\xd3\x73\x12\xc2\xc0\xd6\xab\x64\x6e\xd7\xfc\x56\x7e\x33\xfc\xf2\xf1\xf8\xb0\x6c\x22\x06\x5b\xa7\x3d\xbd\x81\xfb\x25\x3e\x40\x60\xd1\x3b\xd8\x34\xa9\xe5\x9b\xe5\xae\xe5\xee\x78\x07\x9b\xff\x97\xff\xa7\xdd\xf9\xa3\x51\x01\x9c\xaa\x53\xf5\x57\x00\x00\x00\xff\xff\x73\x1e\xb4\xde\x5f\x07\x00\x00")

func templatesPbServiceProtoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPbServiceProtoGotmpl,
		"templates/pb/service.proto.gotmpl",
	)
}

func templatesPbServiceProtoGotmpl() (*asset, error) {
	bytes, err := templatesPbServiceProtoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pb/service.proto.gotmpl", size: 1887, mode: os.FileMode(420), modTime: time.Unix(1523916272, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSvcZserverGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\xcf\x6b\xdb\x4e\x10\xc5\xcf\xda\xbf\xe2\x7d\x05\xdf\x20\x15\xa3\xdc\x03\xb9\x34\x2d\xa5\x87\x26\x90\xf4\x56\x4a\x59\xaf\x46\xd6\x12\xed\x8f\xcc\x8e\xec\x18\x55\xff\x7b\x59\xc9\x89\x43\x68\x4f\x8b\x77\xde\x7e\xde\x9b\xf1\x28\x6a\xf3\xa8\x77\x84\xb4\x37\x4a\x59\x17\x03\x0b\x2a\x55\x94\x26\x78\xa1\x67\x29\x55\x51\x76\x6e\x39\xc4\x3a\x2a\x55\xad\x54\x37\x7a\x83\x5b\x3a\x7c\xd4\xc9\x9a\x07\xe2\x3d\x71\x55\xa3\x8a\xdb\x66\x9a\xd0\xdc\x6a\x47\xf8\x8d\x7c\x6f\x0d\x61\x9e\x57\xc5\x06\xc4\x1c\xb8\xc6\xa4\x0a\x26\x19\xd9\xe3\x82\x4c\x1f\xd6\xea\x34\x6f\xe0\xed\xa0\x66\xa5\x2e\x2f\xf1\xfd\xee\xd3\xdd\x15\x6e\x82\x23\x8c\x11\x07\x2b\x3d\x8e\x61\x64\x84\x83\x87\x75\x71\x20\x47\x5e\xb4\xd8\xe0\x11\x3a\x48\x4f\xf8\xab\x71\x46\xa5\xf5\x57\x83\xcf\xa6\x0f\xd0\xbe\xc5\xd9\x14\x4e\x3f\x2e\x0e\x69\x81\xfe\x03\x5d\x26\xd1\x2c\xc4\x25\x32\x8f\x9e\xf5\xaa\xf5\xaf\xe8\xc8\x41\x42\x83\xaf\x02\x9b\xd0\x05\x46\x4b\x2e\xf8\x24\xbc\x62\xe2\xc8\x31\x24\x4a\x08\x7e\x38\x2e\x09\x52\x1f\xc6\xa1\x5d\x68\x7b\xf2\x32\xea\x61\x38\x62\x4b\x60\x72\x61\x4f\x6d\xa3\xe4\x18\xe9\x6d\xce\x24\x3c\x1a\x99\xde\x0e\xe7\x9e\xe2\xa0\x0d\xad\x6d\x2d\x13\xca\x59\x75\x8c\x83\x35\xab\xef\x29\x1e\x5a\xea\xac\xb7\xf9\x2a\x41\x7a\x2d\xe8\xf5\x9e\xb0\x25\xf2\x99\xb6\x54\xa9\x85\xf5\xc9\xb6\xf4\xae\xa7\xf5\x9f\xae\xce\x49\xea\xc5\xaf\x32\xf2\x8c\xd3\x7e\x34\x37\xeb\xb9\x01\xd3\x13\x3e\xc4\x6d\x93\x15\xf7\xf4\x34\x52\x92\x1a\xd5\xf9\x26\xc5\xe0\x13\xbd\x5d\x83\xcc\x4d\xb8\xba\xc6\x8f\x9f\x2f\xb2\x69\x56\x45\x1e\xe1\xaf\x0d\x28\x57\x58\xfb\x5d\x1e\xcc\x53\xf3\x85\x24\x0b\x52\xb5\x3c\x2d\xf8\xc4\xcb\xa2\xce\x49\xf3\x10\xd9\x7a\xe9\xaa\x32\x8b\xac\xdf\xe1\xff\x84\x8e\x83\x5b\x3a\x22\xfe\xaf\xdc\x80\x9a\x6f\x94\x92\xde\x51\xad\x8a\x93\xf7\x75\x9e\x18\xf9\x76\x69\x31\x6d\x70\xf1\x12\xe3\x05\x3f\xd7\xaa\x98\xcf\x0b\xfb\xae\x99\xe9\xf4\x2c\x7f\x19\xcd\x6d\x38\x54\x75\xf3\x20\x6c\xfd\xae\xaa\x5f\xf7\xf9\x4f\x00\x00\x00\xff\xff\x6a\xcb\x86\x80\x60\x03\x00\x00")

func templatesSvcZserverGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSvcZserverGoGotmpl,
		"templates/svc/zserver.go.gotmpl",
	)
}

func templatesSvcZserverGoGotmpl() (*asset, error) {
	bytes, err := templatesSvcZserverGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/svc/zserver.go.gotmpl", size: 864, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.gitignore.gotmpl": templatesGitignoreGotmpl,
	"templates/Makefile.gotmpl": templatesMakefileGotmpl,
	"templates/README.md.gotmpl": templatesReadmeMdGotmpl,
	"templates/cmd/config/config.go.gotmpl": templatesCmdConfigConfigGoGotmpl,
	"templates/cmd/gateway/handler.go.gotmpl": templatesCmdGatewayHandlerGoGotmpl,
	"templates/cmd/gateway/main.go.gotmpl": templatesCmdGatewayMainGoGotmpl,
	"templates/cmd/gateway/swagger.go.gotmpl": templatesCmdGatewaySwaggerGoGotmpl,
	"templates/cmd/server/main.go.gotmpl": templatesCmdServerMainGoGotmpl,
	"templates/docker/Dockerfile.application.gotmpl": templatesDockerDockerfileApplicationGotmpl,
	"templates/docker/Dockerfile.gateway.gotmpl": templatesDockerDockerfileGatewayGotmpl,
	"templates/pb/service.proto.gotmpl": templatesPbServiceProtoGotmpl,
	"templates/svc/zserver.go.gotmpl": templatesSvcZserverGoGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".gitignore.gotmpl": &bintree{templatesGitignoreGotmpl, map[string]*bintree{}},
		"Makefile.gotmpl": &bintree{templatesMakefileGotmpl, map[string]*bintree{}},
		"README.md.gotmpl": &bintree{templatesReadmeMdGotmpl, map[string]*bintree{}},
		"cmd": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"config.go.gotmpl": &bintree{templatesCmdConfigConfigGoGotmpl, map[string]*bintree{}},
			}},
			"gateway": &bintree{nil, map[string]*bintree{
				"handler.go.gotmpl": &bintree{templatesCmdGatewayHandlerGoGotmpl, map[string]*bintree{}},
				"main.go.gotmpl": &bintree{templatesCmdGatewayMainGoGotmpl, map[string]*bintree{}},
				"swagger.go.gotmpl": &bintree{templatesCmdGatewaySwaggerGoGotmpl, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"main.go.gotmpl": &bintree{templatesCmdServerMainGoGotmpl, map[string]*bintree{}},
			}},
		}},
		"docker": &bintree{nil, map[string]*bintree{
			"Dockerfile.application.gotmpl": &bintree{templatesDockerDockerfileApplicationGotmpl, map[string]*bintree{}},
			"Dockerfile.gateway.gotmpl": &bintree{templatesDockerDockerfileGatewayGotmpl, map[string]*bintree{}},
		}},
		"pb": &bintree{nil, map[string]*bintree{
			"service.proto.gotmpl": &bintree{templatesPbServiceProtoGotmpl, map[string]*bintree{}},
		}},
		"svc": &bintree{nil, map[string]*bintree{
			"zserver.go.gotmpl": &bintree{templatesSvcZserverGoGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

