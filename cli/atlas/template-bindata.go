// Code generated by go-bindata.
// sources:
// templates/.gitignore.gotmpl
// templates/Makefile.gotmpl
// templates/README.md.gotmpl
// templates/cmd/config/config.go.gotmpl
// templates/cmd/gateway/handler.go.gotmpl
// templates/cmd/gateway/main.go.gotmpl
// templates/cmd/gateway/swagger.go.gotmpl
// templates/cmd/server/main.go.gotmpl
// templates/docker/Dockerfile.application.gotmpl
// templates/docker/Dockerfile.gateway.gotmpl
// templates/pb/service.proto.gotmpl
// templates/svc/zserver.go.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGitignoreGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xca\xcc\xe3\x02\x04\x00\x00\xff\xff\x0c\xbf\xc6\xec\x04\x00\x00\x00")

func templatesGitignoreGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGitignoreGotmpl,
		"templates/.gitignore.gotmpl",
	)
}

func templatesGitignoreGotmpl() (*asset, error) {
	bytes, err := templatesGitignoreGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.gitignore.gotmpl", size: 4, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xdf\x6f\xa3\x38\x10\x7e\xc6\x7f\xc5\xa8\xca\x43\xac\x3b\x83\xee\xed\x84\x14\xed\xb2\x29\x9b\x72\xdb\x42\x45\xe8\xae\x2a\x9d\x84\x08\x38\x14\x2d\xc1\x1c\x98\xf4\xaa\xb6\xff\xfb\xc9\xd8\xfc\x4c\xb2\xa7\xd5\xe9\xf2\x90\xf8\xc7\xcc\x37\x9f\xbf\xf1\x8c\x73\xef\x7b\x7f\xd8\xeb\x20\xf4\x3d\x2f\x00\x4d\xd3\x34\x73\x05\xaf\xaf\x90\xed\x41\xf7\x19\xe3\xf0\xfe\xfe\xfa\xda\x0f\x0d\x31\x76\xa3\x03\x95\xcb\x34\xaf\xd5\x68\xbc\x58\x24\xf0\xfe\x8e\x3e\x3d\x38\xb7\xd7\xe1\xbd\x15\xdc\x40\x07\xbb\xcb\x0a\x74\xed\xad\xbf\xd8\xfe\x67\xe7\xd6\x96\x7b\xed\xc6\x62\xb9\x7e\xf0\xaf\x1d\x1f\x1b\x09\x8b\xbf\xd3\x0a\xa1\x87\xad\xed\xbb\xd6\x9d\xad\x69\xca\x77\xb1\x14\x4b\x18\x6d\x9c\x20\x5c\x7b\x77\x77\x8e\x24\x2b\xb7\xea\x27\x9a\xe7\x90\x66\x1c\x12\x5a\xc7\x55\xb6\xa3\x40\x48\x92\x55\xfc\x65\x45\x9a\xa2\x6e\xca\x92\x55\x9c\x26\x40\x48\x94\x3f\x47\x2f\x35\xbc\xbd\x01\x8d\x9f\x18\x94\x15\x25\x31\x3b\x1c\x32\x8e\x91\x73\x67\x6d\xec\xf0\xab\xed\x6f\x1d\xcf\x15\xd0\x1f\xba\xa8\x82\x08\x26\x09\x3d\x92\xc5\x72\x88\x8f\x11\xda\xda\xfe\x57\xdb\x0f\x3f\x39\xae\xe5\x3f\x42\xc7\x66\x38\x39\x36\x6a\x5a\x1d\x69\xd5\x19\xaa\x13\x2b\xbb\xb1\xf2\xd8\x88\x0f\xc9\xcc\xba\x25\x34\xcb\x08\x4d\xb3\x9a\x57\x2f\x5d\x56\x86\xa9\xd1\x2b\x3f\xca\x86\xb9\x58\x4e\x4e\x85\x3b\xe8\x21\x0b\x20\xb9\xcc\xd2\x82\x8d\xeb\x36\x11\xfb\x2c\xa7\xba\x62\xa5\x28\x7c\xcb\xf8\xd3\x26\xe2\xf4\x39\x12\x61\xd1\xc6\x0a\xec\x6f\xd6\xe3\x8f\x34\x48\xa5\x75\x6f\xfa\x6f\x2a\xcc\xed\xff\xbb\x0e\x44\x41\x9e\xea\xd1\xc5\xf8\x29\x41\x3a\x82\xc3\x65\x0f\xec\x6d\x10\x3e\xb8\x4e\x10\xde\x7a\x1b\x90\x1f\x73\x05\x9c\xd6\x3c\x6c\x8a\x8c\xeb\x39\x4b\x91\x2a\x89\xe0\xf1\xde\x86\x0f\x2b\xb8\x4a\xe8\x3e\x6a\x72\x7e\x85\xb2\x3d\xfd\x0b\x96\x9d\x68\x62\x1f\xff\x3a\x6c\x63\xa4\x6d\x3c\x59\x47\xe3\x8f\xa0\x69\xa4\x0c\x69\x5b\x7f\x2d\xb4\x0b\x3d\x37\xbc\xf1\xb6\xc1\xb0\xdb\xd5\x45\x92\x55\x85\xd0\x61\xb1\x8c\x76\x75\x19\xf1\x27\x58\x2c\xf3\xa8\xe6\xcf\xac\x4a\x60\xb1\xbc\xb3\xbe\xd8\xed\x39\x6f\x9d\x6d\x80\x31\xc6\x03\xa4\xe3\x86\x6b\xcf\x0d\x2c\xc7\xb5\x7d\x89\x28\x99\x60\xa3\xae\x62\x63\x96\x3b\x41\x73\x6d\xad\x6f\xec\x13\x9a\xa4\xfc\x9e\x26\x59\x05\x8b\xe5\x39\x60\x6c\xcc\xae\x0b\x23\x71\x14\x3f\x51\xa4\x21\x4d\x66\x21\xf4\x1f\x5c\xd7\xf6\xc7\x90\xb2\x4f\x40\xd5\x14\x40\x48\x75\xb8\x64\xf9\xcb\x0a\xc8\x71\x14\x57\x69\x84\xcd\x0b\x54\x7a\x9c\x96\x50\x0f\x24\x22\x66\xc5\x9e\xed\x72\xf6\xb7\xb1\x6b\xb2\x3c\xe1\x8c\xe5\xe6\xf1\xf7\xde\x7e\x63\xbb\xb6\x6f\x05\x9e\x7f\x62\x1f\x73\x66\xa4\xb4\x90\x0e\xbf\x21\x6d\x8a\x0c\xe3\x74\x4d\xce\x80\x81\x3c\x5f\x52\x6c\xb0\x55\x68\x42\xfc\x09\x83\x1f\xe1\xf6\x0b\xbd\x0b\x46\xb4\x48\xb2\x3d\x42\x1b\x4f\x22\x86\x9f\x6f\xad\xcd\x56\xb5\x40\x95\x56\x0c\x24\x03\x72\x14\x36\xed\x75\x57\x26\xc2\x86\x1c\x81\xc4\x4c\x34\x89\x8d\x17\xde\x5b\xeb\x2f\xd6\xc6\xde\xce\xba\xb3\x4a\xb2\x20\x90\x32\xc8\xb3\x9a\x83\x6e\xe8\xba\x0e\x6f\x90\x56\xb4\x14\x18\x47\x5a\x24\xac\xc2\x08\xe9\xf7\x37\x9e\xfb\x68\x42\x94\xe7\x28\xca\x73\x53\xed\x40\x59\x31\xce\x76\xcd\x1e\x64\x4b\x3a\xdb\x91\x40\x55\xe7\x50\x9c\x3d\xdc\xfe\xc0\xd1\xfe\xc0\x4d\xa4\x7d\x9c\xb2\xd9\x1f\x78\x7b\xce\x9e\xfb\x88\x83\xa8\x61\x24\xbe\xa4\xff\xdc\x55\xec\x48\xdf\x41\x14\x3c\x5a\x38\x83\xa8\xfa\xa9\xfc\xe9\xa6\xa4\xbd\x56\xdd\xa4\x7b\x06\xa7\x2e\xd2\x06\x8d\x27\xa7\x67\x91\x38\x2d\x81\x51\x2a\x31\x10\x26\x6e\xd3\xf8\xc1\xc2\xc3\x42\x5b\x79\x27\xe1\x14\x8b\xc9\x6c\xc6\x45\xfb\xa8\x2a\x51\x86\x25\xfb\x01\x73\xe8\xa0\x18\x08\x1f\xd6\xdb\x0e\x8c\x41\xbf\xf0\xa0\x74\x1c\xba\x26\xdb\xb5\xee\x6e\x41\x09\xd5\xcd\x14\xc7\xff\x43\x85\x49\x40\x34\x99\xfd\xa4\xec\xd3\x47\x12\x8f\x56\x2e\x84\x54\xa7\x9a\x4e\xcd\xb3\x6a\x9f\xbe\x60\x4a\xee\xc9\xf3\xa9\xf4\x56\x15\xf1\xfa\x4a\xe6\xcf\x68\x4f\xa1\x6c\xea\x27\x24\xbe\x46\xe1\xc4\x74\x9e\xc0\xf3\xd9\x9b\xbb\x4c\x49\x8c\x19\x74\xa3\x3e\xae\xaa\x6d\xd4\x0d\xa4\xc6\x43\x8f\x82\x3f\x91\x46\x48\xca\x42\xd6\xf0\x55\x99\x37\x69\x56\xd4\xab\xb4\x2a\x63\x53\x17\x5b\x67\xf8\x10\x41\x88\x10\x61\xd3\xfd\x03\x68\x9d\x73\x96\x72\x56\xf3\x84\x56\xd5\x8a\x57\x0d\xed\x01\x04\x25\xe5\x74\x8c\xf2\x2c\x89\x38\x6d\x1d\xae\xf2\xa8\x48\x57\x29\x33\xf5\x2b\xc9\xa2\x7e\x8e\xd2\x94\x56\xed\xa6\xa9\x9f\xfc\x8b\x29\x77\xed\x5f\xb9\x2c\xa6\x7a\x7b\x9a\x21\xc1\xb2\x91\x21\xf9\x33\xbb\x45\x09\x2d\x81\x16\x75\x53\x51\x20\xd2\x80\xb0\x22\x7f\x99\x3b\x93\xa6\x14\xc4\xd0\x64\x76\x11\x0a\xfd\x13\x00\x00\xff\xff\x62\x29\x13\xac\xe0\x0b\x00\x00")

func templatesMakefileGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileGotmpl,
		"templates/Makefile.gotmpl",
	)
}

func templatesMakefileGotmpl() (*asset, error) {
	bytes, err := templatesMakefileGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.gotmpl", size: 3040, mode: os.FileMode(420), modTime: time.Unix(1524162039, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesReadmeMdGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x54\x4d\x6f\xdc\x36\x10\xbd\xf3\x57\x0c\xe0\x4b\x0d\x34\xda\x38\x06\xfa\x91\x9b\x8b\xb8\x41\x0f\x69\x83\x38\x48\x0e\x46\x11\x8f\xa4\x27\x89\x05\xc5\x61\x39\xa3\xdd\x08\x41\xfe\x7b\x41\x4a\xde\x3a\x39\xed\x42\xf3\xf1\xde\xcc\x7b\xc3\x0b\xfa\xf2\x85\x9a\x3f\x79\x06\x7d\xfd\xea\xdc\xa7\xf7\x93\x57\x1a\x11\x91\xd9\xd0\xd3\xbb\xdb\x9b\x57\x6f\x6e\x9b\xb9\xa7\xc1\x07\x50\x10\x51\x84\x95\x06\x09\x41\x4e\x4a\x4c\xf7\x49\xd2\x12\x38\x93\x61\x4e\x81\x0d\x7f\xff\x30\x99\x25\x7d\x79\x38\x8c\x5e\xad\x19\xbd\x4d\x4b\xdb\x74\x32\x1f\xde\x2e\x39\x05\xfc\x26\x62\xd3\xe1\xea\xf9\xaf\xd7\x57\x57\x6d\xfb\xfc\xfa\xa7\xab\xe1\xfa\x45\xff\xcb\xcf\xfc\xe2\xb2\xf9\xe4\xdc\x5f\x11\x94\x38\xf3\x98\x39\x4d\x24\x03\xa5\x2c\xff\xa0\x33\xea\xa1\x5d\xf6\xc9\xbc\x44\x1a\x05\x4a\x13\x32\x1a\xe7\x2e\x2e\xe8\x35\xcc\x7c\x1c\xe9\xce\x38\x1b\x7a\xe7\xde\x4f\x50\x90\x8f\x6a\x79\xe9\x4a\x85\xd2\xc9\x87\x40\x23\x8c\x56\x59\x88\xa9\x93\xb4\x96\xee\x36\xe1\x8c\xb0\x24\xe2\xd8\x53\x5e\x62\x2c\xdd\x24\x96\xdc\x4c\x41\x3a\x0e\x34\x73\x37\xf9\x08\x1a\x24\x53\x8f\x23\x82\xa4\x19\xd1\x6a\x85\x41\x2b\x7e\x5a\x72\x12\x85\x36\x74\x07\x50\x8f\x14\x64\xad\x49\xa5\x28\x8a\x41\x4b\xd3\x49\x4e\x64\xb2\x87\xbf\x21\x20\x91\x98\x82\x3f\x82\x74\x55\xc3\x5c\xa7\xbb\xa0\xb7\x19\x19\xff\x2e\x5e\xbd\x41\x9d\xfb\x38\xb1\x91\x4d\x3e\x8e\x5a\x87\x89\x40\x5f\x1a\x96\x71\x39\x84\xda\x51\x65\xb0\x13\x67\x54\x7a\x3b\xe0\x93\x78\xe9\xfc\xf0\xf0\xe0\x5e\x17\x2c\x7c\xe6\x39\x05\x68\xfd\x52\x01\xff\xd8\x32\x7d\x1c\x9d\xbb\x21\x35\xa4\x67\xed\xfa\xac\xfc\x92\x22\xfb\x32\xc6\x70\x2e\x23\xab\x7c\x10\x42\x65\x33\xf1\x11\x05\xad\xac\x9a\xbf\xd9\x14\xe2\xd1\x67\x89\xf5\xff\xbe\xe3\xc6\xb9\x3b\x5e\xe9\xb4\x4d\x84\x0a\xb5\x29\xd5\xe2\x29\xc5\x12\xdb\xf1\x36\x96\x37\x45\x27\x24\xb0\xed\x69\x4b\x34\x1f\x68\xf0\xd1\xeb\x84\x7e\x4b\xba\x8d\x3d\x9d\xbc\x4d\xc4\xf1\xb1\xba\x10\x1f\x77\xb7\xa8\xcc\xa0\x9e\x8d\x49\x16\x7b\xf4\xc2\xb6\x78\x92\x4c\x8b\x96\x24\xbf\x89\x57\x64\x31\x0b\x45\xd4\x59\x36\xd3\xbd\x3a\xcb\xeb\xdc\x4d\xdf\x13\xf7\xbd\x2f\x56\xe3\xb0\x4b\xcd\x6d\xe9\xfb\xbd\xda\x5e\x89\x53\x0a\xbe\xe3\x92\xdc\xd0\x1b\x5e\x5b\x50\xf0\x6a\x1b\xa1\x4e\xe6\x59\x22\x25\x6f\x03\x87\xa0\x54\xed\xd6\x2e\xe3\x58\x29\x5b\xb9\xca\xd1\x43\x37\x0e\xef\x76\xab\x16\xe6\xc5\x84\xea\xdc\xed\xe7\x14\xd8\x9f\x5d\x96\x97\x58\xa3\xbc\x98\xcc\xf5\xa2\x6b\x5e\x1d\xaa\x92\x39\x3b\xed\xbc\xec\xff\xb7\xf5\xe8\x08\xfa\x80\xac\x5e\x62\x35\xc4\x47\xd0\xa2\xa0\xfb\x3b\xcc\x1f\x90\xb7\x6b\x7f\x79\x38\x28\xe6\x23\x72\x23\x79\x3c\x5c\xd6\xee\xc7\x73\x4d\x43\xbf\x57\x34\x3c\x7e\x53\xe2\x23\xfb\xc0\x6d\xc0\x8f\xa4\xd8\xf4\xbd\x37\x1e\xeb\x7d\x54\x5a\x19\x49\xd4\x9b\xe4\xf5\xe9\x7b\x72\x7e\x4a\xca\x61\x1e\xf6\xb3\x39\x94\xc2\xcb\x86\xdc\x7f\x01\x00\x00\xff\xff\x07\x15\x93\x01\xcb\x04\x00\x00")

func templatesReadmeMdGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMdGotmpl,
		"templates/README.md.gotmpl",
	)
}

func templatesReadmeMdGotmpl() (*asset, error) {
	bytes, err := templatesReadmeMdGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md.gotmpl", size: 1227, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdConfigConfigGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x48\xce\xcf\x4b\xcb\x4c\xe7\xe2\x4a\xce\xcf\x2b\x2e\x51\xd0\xe0\x52\x50\x08\x76\x0d\x0a\x73\x0d\x8a\x77\x74\x71\x09\x72\x0d\x0e\x56\xb0\x55\x50\x32\xd0\x03\x43\x2b\x4b\x03\x4b\x03\x25\x2e\x05\x85\xea\x6a\x85\xcc\x34\x05\xbd\xf0\xcc\x92\x0c\xf7\xc4\x92\xd4\xf2\xc4\x4a\x85\xda\x5a\x77\xc7\x10\xd7\x70\xc7\x48\x6c\xfa\x2c\x0c\x2c\xc0\xfa\x60\x4a\x42\x83\x7c\x40\xd2\xfa\xd5\xd5\x0a\x7a\x7e\x89\xb9\xa9\x0a\x35\x0a\x20\xa1\xda\x5a\xfd\x32\x43\x7d\x25\x90\xf1\xa9\x79\x29\x0a\xb5\xb5\x5c\x9a\x5c\x80\x00\x00\x00\xff\xff\x6f\xdc\xa5\x59\xa7\x00\x00\x00")

func templatesCmdConfigConfigGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdConfigConfigGoGotmpl,
		"templates/cmd/config/config.go.gotmpl",
	)
}

func templatesCmdConfigConfigGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdConfigConfigGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/config/config.go.gotmpl", size: 167, mode: os.FileMode(420), modTime: time.Unix(1523485304, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayHandlerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6e\xdc\x30\x0c\x40\x67\xf3\x2b\xd8\x9b\x6c\xc0\x95\xf7\x00\x37\x14\x69\x8b\x74\xe8\x25\x48\x03\x74\x28\x3a\x28\x32\x23\x0b\xb5\x29\x83\xa2\x73\x3e\x5c\xfd\xef\x85\x7c\xbe\x76\x29\x32\x49\x24\xc8\x47\x3e\x8e\xd6\xfd\xb2\x9e\x70\xb0\x81\x01\xc2\x30\x46\x51\x2c\xa1\xd8\xb9\xc8\x4a\xb3\xee\xa0\xd8\x31\x69\xd3\xa9\x8e\xf9\xef\x83\x76\xd3\xb3\x71\x71\x68\xbc\x8c\xee\x3d\xb9\x98\x4e\x49\x69\x0b\xbd\x55\x3a\xda\x53\x23\x13\x6b\x18\x68\xed\x88\xd1\xf7\x64\x7c\xec\x2d\x7b\x13\xc5\xaf\x95\x3b\xa8\x00\x9a\x06\x0f\x74\x3c\x9f\xd1\x1c\xec\x40\xf8\x1b\xbf\x91\xbc\x06\x47\xcb\x72\x67\xb9\xed\x49\x50\x48\x27\xe1\x84\x96\xf1\xee\xe9\xe9\x01\xbb\x2d\xaf\x9d\x55\x4c\x24\xaf\x94\x50\x3b\x42\xff\xf8\x70\x8b\xdb\x70\x78\x99\xd8\xfd\x1f\x8c\x7f\xc9\xa5\xd3\x19\x37\x47\x73\x7b\x79\x6b\xcc\x9b\x7d\x68\x5b\xc1\xa4\x12\xd8\xd7\x18\x47\x4d\x68\x8c\xd9\x7c\x4c\xe6\xd0\xd7\x69\xbe\x1f\x35\x44\xae\xb0\xcc\x77\x31\x1b\xb3\x46\x12\x89\x52\xe1\x19\x8a\x61\x9a\xf1\x66\x8f\xd7\xbe\x03\x1d\xaf\xad\x65\x66\x1a\x63\x2a\x28\xda\x60\xfb\xfb\x3c\xe1\x66\x8f\x3f\x7e\xe6\xe1\xe6\xe3\x25\x15\x22\x9f\xd7\xf8\x7b\xd0\xee\x0b\x27\x72\x93\x50\x59\x2d\x50\x90\x48\x2e\x1f\x9f\xcd\x23\xf9\x90\x94\xe4\x2d\xcd\xcf\x12\x87\x4f\xdc\x8e\x31\xb0\x66\xe5\x1a\x87\x69\xfe\xe7\x59\xe3\x75\x85\x0a\x8a\xf0\x92\xf7\xc7\x77\x7b\xe4\xd0\x67\x87\xe2\x72\xfd\x1c\xae\x6a\x50\x2c\x70\xcd\xad\x18\x0e\x3d\x2c\xf0\x27\x00\x00\xff\xff\x3f\xd4\x1f\xb5\x43\x02\x00\x00")

func templatesCmdGatewayHandlerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayHandlerGoGotmpl,
		"templates/cmd/gateway/handler.go.gotmpl",
	)
}

func templatesCmdGatewayHandlerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayHandlerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/handler.go.gotmpl", size: 579, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xcb\x6e\xc3\x36\x10\x3c\x8b\x5f\xb1\xe5\xa1\x90\x00\x5b\x42\xae\x29\x72\x70\x1b\x27\x39\x24\x81\x61\xe7\x81\xa2\x28\x02\x46\x5a\xd1\x6c\x28\x52\x5d\x52\x7e\x20\xf5\xbf\x17\xa4\xe4\x57\x82\x9c\x28\xae\x96\xc3\x99\xd9\x61\x2b\xca\x0f\x21\x11\x1a\xa1\x0c\x63\xaa\x69\x2d\x79\x48\x59\xc2\x4b\x6b\x3c\x6e\x3c\x67\x09\xaf\xb5\x90\x61\xd5\x36\x2e\x06\x7d\xb1\xf4\xbe\x0d\xdf\x52\xf9\x65\xf7\x9e\x97\xb6\x29\x24\xb5\xe5\x18\x4b\xeb\xb6\xce\xe3\xb0\x95\xc2\xe3\x5a\x6c\x0b\xea\x8c\x57\x0d\x7e\x39\xa1\x4c\x6d\xdf\xb5\xdd\xd8\x16\x4d\x21\xbc\x16\x6e\x2c\xda\x76\xec\xad\xd5\x1f\xca\x17\x72\xcd\x59\xc6\xd8\x4a\x50\x20\xb4\x40\x5a\x21\x4d\xaa\x8a\x00\x9c\x27\x65\x24\x4b\x6e\x7b\xf8\x58\xdc\xd7\x16\x6b\x21\x25\xd2\xb5\x3a\xf6\x65\x8c\xd5\x9d\x29\xa3\xc6\x34\x83\x4f\x96\x14\x05\x94\x84\xc2\x23\xdc\x3d\x3d\xcd\x60\x29\x4c\xa5\x91\xa0\xb6\x04\x03\x65\x96\x20\xd1\xdd\x50\xbf\xbc\x82\x41\x41\xfe\xaa\xfc\x72\x46\xd6\xdb\x29\x91\xdd\x37\xa4\x72\x9d\xc7\xe2\x03\x3a\x27\x24\x9e\xfe\xcb\x58\xe2\x22\xf5\x61\x3f\x02\xa4\x88\xf8\x88\xeb\xcf\x4f\xc8\x1f\x45\x83\xf0\x1f\x04\x79\xaa\x44\xd8\xed\xf6\x98\xc3\x00\xf2\xdf\x45\xf9\x21\xc9\x76\xa6\x4a\xb3\x11\x1c\x6d\x88\x40\xc7\x4b\x8a\x22\xca\x6d\x41\x68\x0d\xef\x9d\x07\x4f\x42\x69\x65\x24\xf0\x82\x83\x35\xa0\x4c\x69\x9b\xb0\x27\xfc\xb7\x43\xe7\xdd\x17\x62\x70\x05\x61\xaa\xf9\x22\xa0\xcc\x08\x6b\xb5\x49\x59\x92\x94\xd6\xd4\x4a\xe6\xb7\x93\xa7\xe9\xeb\xe4\xcf\xb7\xe7\xf9\xfd\x5f\x97\x1a\x4d\xfa\xbd\x9e\x8d\x2f\xfe\x1e\xb1\xe4\x8b\x5c\x96\x64\x2c\x51\x75\x54\xfd\xcb\x15\x18\xa5\xc3\x00\x12\x6d\x65\x7e\x23\xbc\xd0\xda\xa4\x48\x41\xc0\x2e\x6a\x68\x44\xdb\xcf\x04\x4d\xd5\x5a\x65\xbc\x03\x6f\xf7\x03\x72\x2c\x69\xba\x4d\x30\x2f\x32\x7d\xc4\x75\xb4\xe3\xa1\xdb\xa4\x59\xfc\x95\xf7\xb7\xa6\xbc\x38\xb1\xf6\x79\x7e\x0f\xbb\x5d\xb1\xba\x28\xf8\x08\xce\xc8\x9d\x1d\xba\xe9\x4c\x99\xf2\xc2\xf5\xf9\x09\xbd\x43\x94\xce\x3d\x0e\xe7\x0f\x7c\x82\xaf\x7e\x89\xfb\xd0\x80\xa8\x2a\x42\xe7\x58\x12\xf9\xdd\x2b\xe7\xd1\x4c\x4c\x15\x59\xa6\x27\x69\x1d\x41\xd3\x6d\x32\xb6\x1b\x82\xa9\x8c\xf2\x87\x60\x56\x58\x8b\x4e\xfb\x03\xe6\x4a\xe8\x0e\xdd\x6f\x60\x5b\xaf\xac\x11\x5a\x6f\xa1\xf7\xbe\x23\xac\x60\xa5\x04\x94\xb6\x69\x84\xa9\xc6\x5a\x19\x84\xf0\x58\x1d\x4b\xc2\x12\x47\x69\xe4\x8b\xa0\xf4\xd7\xd3\xdc\xf0\xde\x04\x3e\x1a\x80\xf2\xc5\x74\xfe\x32\x9d\xbf\x4d\xae\xaf\xe7\xd3\xc5\x62\x04\x7c\xd0\x01\xb6\xee\xe5\xcd\x67\x7f\x0c\xce\xf1\xec\x3b\xf6\x99\x30\x3e\xf0\x3e\xa2\xef\x23\xf2\x33\xfc\xa0\xf4\xe7\x1b\x8e\x8f\x3a\xb0\xef\x37\xe3\x4a\x05\x09\xdc\x2d\x05\x61\xf8\xa8\x14\x61\xe9\x2d\x6d\xf7\xb8\x43\x63\xfe\x8f\xb3\x06\x6a\xa5\xf1\x00\x3d\x13\xe4\x30\x0d\x03\xf8\x3f\x00\x00\xff\xff\x39\x94\xbc\x0f\x00\x05\x00\x00")

func templatesCmdGatewayMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayMainGoGotmpl,
		"templates/cmd/gateway/main.go.gotmpl",
	)
}

func templatesCmdGatewayMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/main.go.gotmpl", size: 1280, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewaySwaggerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4a\xc3\x40\x10\x86\xcf\xd9\xa7\x18\x16\x84\x54\xcb\xe6\x2e\xf4\x26\x52\xc4\x43\x68\x2b\x9e\x97\x3a\xd9\x8c\xa6\x93\xed\xcc\xd4\x08\xe2\xbb\xcb\xa6\xf1\xe2\x6d\x98\x7f\xbf\x9d\xef\xcf\xf1\xf8\x11\x13\xc2\x29\x12\x3b\x47\xa7\x3c\x8a\x41\xed\x2a\x3f\x8c\xc9\xbb\xca\x33\x5a\xd3\x9b\xe5\x32\xe7\x68\x7d\xd3\xd1\x80\x65\x28\x0b\x35\x21\x4e\xea\xdd\xca\xb9\xa6\x81\xfd\x14\x53\x42\xd9\x46\x7e\x1b\x50\x40\xd0\x2e\xc2\x0a\x91\x61\x7b\x38\xb4\xd0\x2f\x7b\xeb\xa3\x81\xa2\x7c\xa2\x82\xf5\x08\x7a\xc5\x40\x33\x1e\x5d\x77\xe1\xe3\xbf\x8f\x6a\x99\xa0\x28\x84\x1d\x6a\x1e\x59\xf1\x55\xc8\x50\xd6\x20\x78\x86\xdb\x25\x39\x5f\x50\x6d\x05\xdf\xae\xca\x70\xbf\x81\xc5\x2c\x1c\x84\x4e\xad\x60\x47\x5f\xb5\xe0\x39\xbc\xec\x9e\x43\x1b\xad\x5f\x83\x6f\x96\xb3\x8d\x5f\x15\x66\x03\x7f\xc5\xc2\xd3\x48\x5c\x2f\x0a\x0f\x24\x6b\xc8\xf3\x8b\xbb\x0d\xf8\xb0\x40\xe1\x5d\x47\xf6\xae\x1a\xc6\x14\x5a\x21\xb6\xae\xf6\xa5\x11\x71\x82\x1b\xf5\x57\x64\x36\xdb\x97\x9e\x8f\x34\x60\x2d\xd3\x6c\x3c\x67\x3f\xee\x37\x00\x00\xff\xff\xcd\xd6\xe8\xba\x78\x01\x00\x00")

func templatesCmdGatewaySwaggerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewaySwaggerGoGotmpl,
		"templates/cmd/gateway/swagger.go.gotmpl",
	)
}

func templatesCmdGatewaySwaggerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewaySwaggerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/swagger.go.gotmpl", size: 376, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdServerMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x6b\xe3\x3c\x10\x3d\x4b\xbf\x62\x3e\x1f\x3e\x6c\x70\xe5\x7b\x4b\x0f\xdd\x36\x0b\x0b\x4b\x29\x09\xdb\x6b\x51\xe5\xb1\x22\x56\x96\xcc\x48\x49\x08\xdd\xfc\xf7\x45\xb2\xda\x98\xb2\x0b\x9b\x8b\x05\x9a\x99\xf7\x46\xef\xbd\x64\x92\xea\xa7\xd4\x08\xa3\x34\x8e\x73\x33\x4e\x9e\x22\xd4\x9c\x55\x83\x95\xba\xe2\xac\x72\x18\xd3\xa1\x4d\xdc\xee\x5e\x85\xf2\x63\xa7\x69\x52\x57\xa8\x7c\x38\x86\x88\x63\xa7\xfd\x55\xbe\x19\x4d\xdf\x5b\x3c\x48\xc2\x4b\xfb\x3b\xeb\xb5\x36\x4e\xa7\x93\x76\xe1\xe2\xf1\xbd\xb4\xa6\x97\xd1\xd3\xa7\xc9\x60\x68\x37\x05\x74\x4b\x5c\xef\xb5\x45\xa1\xbd\x95\x4e\x0b\x4f\x3a\xc3\x57\xbc\xe1\x7c\x2f\x29\x3d\xfc\xae\xef\x09\x43\x80\x10\xc9\x38\x9d\x0a\xc3\xce\xa9\xac\x4f\xdd\xc0\x1b\x67\x69\x59\x24\xb8\xbe\x85\x19\x56\x3c\xe2\xa1\x6e\x38\xeb\x3a\x50\x84\x32\x22\x38\x3c\x40\x54\x13\x58\x13\x22\x3a\xa4\x81\x33\xeb\x5a\x40\xca\x53\x0e\xa3\xf8\x9e\x2b\x75\x15\xd5\x54\xb5\x50\x28\x1b\xce\xcc\x90\xbb\xfe\xbb\x05\x67\x6c\x22\x2b\x6c\xe2\xab\x8c\xd2\x5a\x57\x23\x51\xc3\xd9\xe9\x33\x9b\x5e\x3f\xdd\x43\x40\xda\x23\xc1\xc1\xc4\x2d\x9c\xd5\x01\xb5\x4d\xd6\xb2\x52\xbd\xbe\x85\xf4\xe2\xb4\xf4\x26\xdf\xd4\x9c\xb1\x7c\xf3\xc3\x49\x3a\x7e\x73\x11\x49\xe1\x14\x7d\x2e\xe4\xca\xcb\x19\x4c\xdc\x27\xb0\xdc\x79\x9e\x66\x69\x99\xe2\x81\xf1\x6e\xc1\x9d\x8b\x19\xe2\xc3\x22\xb1\x18\x5e\x92\x35\xed\x3b\x52\x09\xc3\x1f\x61\x8a\xe2\x7f\xc1\x38\xfb\xb1\x72\x91\x8e\xf5\xac\x5d\x33\x43\xe7\x6f\xfa\xcc\x56\x11\xea\xe4\x01\x65\xd5\x8c\x42\x30\xe3\x64\x71\x44\x17\xe7\x47\x64\x15\xe3\x16\xb3\x5a\x45\x5a\xce\xc2\x87\x8b\x61\x9f\x35\xfc\x22\x83\x51\x45\x8a\x8b\xfc\x9b\x5e\xc5\xba\xac\xf0\xf6\x06\xe2\x51\x8e\x08\xbf\x60\x53\x96\x39\x9d\x0a\xe6\x4c\xdc\xc2\x22\x1c\x89\x3c\xdf\x8a\xdc\x53\x5b\xd7\xdc\xfc\x23\xeb\xa9\x84\xd9\x38\x13\xe7\x30\x77\x1d\xf4\x38\xc8\x9d\x8d\xef\xf1\x91\x73\x18\x6f\xc0\x4f\x49\x08\x69\xed\x11\x02\x46\xd8\x1b\x09\xca\x8f\xa3\x74\xfd\x95\x35\x0e\x21\xfd\x41\x04\xce\xd2\x21\x36\xf9\xc7\xf2\x2c\xa9\xfe\xbf\x84\xb9\x85\xaa\x20\x55\x2d\x28\xef\x06\xa3\xc5\x66\xb5\x7e\x5e\xad\x5f\xee\x1e\x1e\xd6\xab\xcd\xa6\x85\x2a\xeb\xbb\x88\xee\xfb\x44\x53\x60\x9f\x24\x05\xac\x1b\x7e\xe2\xbf\x03\x00\x00\xff\xff\xd3\xa1\x88\x0c\xa7\x04\x00\x00")

func templatesCmdServerMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdServerMainGoGotmpl,
		"templates/cmd/server/main.go.gotmpl",
	)
}

func templatesCmdServerMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdServerMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/server/main.go.gotmpl", size: 1191, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileApplicationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcc\x29\xc8\xcc\x4b\xb5\x32\xd6\x33\xe5\xe2\x0a\xf7\x0f\xf2\x76\xf1\x0c\x52\xd0\x2f\x2d\x2e\xd2\xcf\xc9\x4f\x4e\xcc\xe1\xe2\x72\xf6\x0f\x88\x54\x48\xca\xcc\xd3\x2f\x4e\x2d\x2a\x4b\x2d\x42\x62\x72\x71\xb9\xfa\x85\x04\x45\x06\xf8\x7b\xfa\x85\x28\x44\x2b\x21\x24\x94\x62\xb9\x00\x01\x00\x00\xff\xff\x6b\xe1\xc2\x91\x5b\x00\x00\x00")

func templatesDockerDockerfileApplicationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileApplicationGotmpl,
		"templates/docker/Dockerfile.application.gotmpl",
	)
}

func templatesDockerDockerfileApplicationGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileApplicationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.application.gotmpl", size: 91, mode: os.FileMode(420), modTime: time.Unix(1524161587, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileGatewayGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcc\x29\xc8\xcc\x4b\xb5\x32\xd6\x33\xe5\xe2\x0a\xf7\x0f\xf2\x76\xf1\x0c\x52\xd0\x2f\x2d\x2e\xd2\xcf\xc9\x4f\x4e\xcc\xe1\xe2\x72\xf6\x0f\x88\x54\x48\xca\xcc\xd3\x4f\x4f\x2c\x49\x2d\x4f\xac\x44\x66\x73\x71\xb9\xfa\x85\x04\x45\x06\xf8\x7b\xfa\x85\x28\x44\x2b\x21\xc9\x28\xc5\x72\x01\x02\x00\x00\xff\xff\x64\x58\x5f\x58\x5e\x00\x00\x00")

func templatesDockerDockerfileGatewayGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileGatewayGotmpl,
		"templates/docker/Dockerfile.gateway.gotmpl",
	)
}

func templatesDockerDockerfileGatewayGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileGatewayGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.gateway.gotmpl", size: 94, mode: os.FileMode(420), modTime: time.Unix(1524161587, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPbServiceProtoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4f\x6f\xe3\x36\x10\xc5\xef\xfa\x14\x53\x9f\x36\x40\x2c\xa1\xe8\x2d\x46\x0e\x45\x36\xdd\x06\x28\xba\x81\xb3\xe8\x1e\x8b\xb1\x34\x92\x88\x50\x1c\x96\x33\xb2\x63\xb8\xfe\xee\x05\x49\xc9\x11\x92\xa0\x05\x7a\x93\xf8\xe7\xcd\xe3\xe3\x8f\x23\x47\xa7\xf8\x02\xb7\xb0\xf2\x81\x95\x7f\x5a\x6d\x8a\xc2\x63\xfd\x8c\x1d\x81\x50\xd8\x9b\x9a\x36\x45\x61\x06\xcf\x41\x61\xd5\x31\x77\x96\xaa\xb4\x74\x37\xb6\x15\x0d\x5e\x8f\x65\xfa\x5d\x6d\xde\xae\x42\x6f\x2a\x74\x8e\x15\xd5\xb0\x93\xf7\xcb\x8c\xf6\xe3\xae\xac\x79\xa8\xec\xb1\xd5\xac\x5a\xaf\x3b\x72\xeb\x3d\x5a\xd3\xa0\x52\xf5\xee\xe3\x9d\xca\x62\x97\x1c\xb0\xeb\x28\x54\xec\x53\xc1\x0f\x8b\x17\x79\x12\x3a\xfe\x73\x3e\xe6\x2d\xac\x4e\x27\x30\x2d\x94\x5b\x66\x85\xf3\xf9\x74\xba\x7c\x56\xf1\xfb\x77\x1c\x28\x0f\x93\x95\xe9\x6b\x39\xe8\x9a\xb8\xd2\xef\x36\x7e\x17\x2b\x54\x15\x7c\xeb\x09\x2e\x8b\xfe\x86\xa7\x1c\x24\x9c\xcf\x73\xa6\xd7\xf0\x85\xf4\x0f\x0a\x12\xbd\x6c\x1f\xef\xae\x01\x5d\x03\xf3\xc0\x40\x22\xd8\x51\x54\x1a\xf0\x99\x60\xf4\x80\x20\x66\xf0\x96\x60\x25\x8a\x41\x29\xac\x80\x5e\x30\x8e\x94\xf0\xa0\x80\xd6\xf2\x41\x40\x7b\x82\x9f\xd5\xa2\xc0\xdd\x6f\x0f\xa0\x0c\x1d\x39\x0a\xa8\x04\xe8\xa2\x1a\xb9\x66\xad\xbc\x8e\x8e\xa7\xdd\xd0\x72\x48\xdb\x24\x16\xe2\x16\x1a\x1a\xd8\x89\x86\x94\x5b\x09\xbf\x10\x59\x68\x03\x51\x54\xab\x7b\x74\x1d\x41\x54\x5a\xd8\x57\x86\x1d\xa9\x52\x58\xcb\x68\x14\x7a\x3e\xc0\x91\xc7\x00\xfb\x3c\x6f\x5c\x07\x72\x14\xa5\xe1\x1a\x38\x40\x47\x0a\xc1\x34\xb1\x94\x51\x20\xa7\x26\x90\x3d\x96\x29\xb6\x5f\x29\x10\x60\x20\x10\x1e\x08\x7a\xb2\xbe\x1d\x2d\x04\x12\x1e\x43\x4d\x12\x2b\xa1\x69\xa2\x3a\x18\x97\x8b\xcc\x28\xc2\x5f\x23\x89\xde\x44\x95\x5e\xd5\xcb\x4d\x55\x2d\xf8\x32\xae\xe5\x9d\xe5\x17\xf6\xe4\x2a\x8c\x01\xad\x6b\x76\x8a\xb5\xca\x1a\xbd\xaf\x76\x96\x77\xd5\x80\xa2\x14\x32\x86\xd5\x3c\x9d\xc1\x59\xca\x36\xb4\x27\xcb\x9e\x82\x94\x19\xf4\x54\x21\x63\xc8\x76\xbd\x1b\xdb\x96\x82\x54\x0d\xd7\x52\xbd\xdb\xbc\xf0\xd4\x05\x5f\xaf\xa9\xe6\x9c\x4d\xfe\xed\x50\xe9\x80\xc7\xff\x5b\x4e\xf4\x68\x29\x27\x89\xde\x1f\x2f\xe1\xb4\xc6\x75\x3f\x64\x30\xbf\x7e\xfe\x7a\x03\xdf\x83\x89\x48\xbc\x86\x27\x75\x4f\x03\x5e\x58\xf8\x57\x74\xcb\x44\x77\x62\x33\x63\x2a\x89\xdd\xed\xe3\x9d\xc0\xc1\x58\x0b\x35\x0f\x9e\x85\x32\x8c\x8f\x0f\xaf\x84\x4d\xfb\x17\x46\x9e\x74\xac\x75\x0c\x94\xef\x92\x0f\xee\xd5\xd2\x2c\x5e\xc2\x3d\xd6\x3d\xcc\x07\x86\x7c\xe0\x79\x1a\x8c\x00\x26\x33\x32\xa0\xb5\x60\xb9\x33\x35\x46\x66\x6a\x0e\x19\x32\xd7\x72\x18\x12\xcd\xd7\x90\x6e\xd5\x24\x24\x31\xfa\x31\x24\x71\x8d\xc3\x81\x62\xcf\x19\x09\x3c\x9a\x20\x65\x31\xcb\x4f\x8c\x6f\x49\x3c\x3b\x21\x38\x15\x00\xa2\x21\x0a\x4c\x78\xc3\x2d\xfc\xb8\x29\xce\x8b\x43\x7d\xa6\xd6\x38\xfa\xef\x20\x53\x6c\x46\x05\x06\xd2\x9e\x1b\x59\x3c\xb6\x28\xf6\xfa\xde\xa2\x52\xb4\x18\xad\x7e\xac\xf8\xe6\x09\xa6\x34\x1d\x0e\xc6\x75\x51\xa9\x66\xb7\x8f\x0f\x2d\xf6\xc1\x62\x2e\xfe\xb1\x50\x3c\x5f\xf0\xf5\xf2\x79\x7f\x9a\xb0\x9b\x6f\xa6\xbc\x8f\x4d\xff\x0a\x02\xe9\x18\x9c\xc0\xa7\x37\x19\x5d\x25\x11\x80\xa9\xa7\x7e\x37\xda\x7f\xc9\x58\xc7\x2e\x39\x87\xf4\x18\x78\x6f\x1a\x82\x01\xbd\x37\xae\x93\xe8\xff\x40\xe4\x60\x7b\xff\xf4\x2d\xf6\x29\xcf\xc6\x69\x46\x6b\xb6\x3c\xe7\x94\xe4\xa7\x3e\x3e\xbb\x43\x6f\xca\xf8\x64\xae\xe0\x76\xaa\x0f\xb1\xd5\xdc\xc0\xaa\x9a\x2e\x6a\x95\x46\xcf\x9b\x4b\xc7\x2e\x00\xce\xc5\xb9\xf8\x27\x00\x00\xff\xff\xf6\x76\x87\x7c\x02\x07\x00\x00")

func templatesPbServiceProtoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPbServiceProtoGotmpl,
		"templates/pb/service.proto.gotmpl",
	)
}

func templatesPbServiceProtoGotmpl() (*asset, error) {
	bytes, err := templatesPbServiceProtoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pb/service.proto.gotmpl", size: 1794, mode: os.FileMode(420), modTime: time.Unix(1524162042, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSvcZserverGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x4f\x6f\xdb\x46\x10\xc5\xcf\xe1\xa7\x78\xe0\xa1\x90\x02\x99\x4a\xaf\xb9\x29\x96\x6c\x18\x75\x2d\xc3\xb1\x53\xf4\xb8\x24\x87\xe2\x22\xe4\x2e\xbb\x3b\x94\x4c\xa8\xee\x67\x2f\x66\x49\xea\x4f\xed\xba\x40\x11\x1f\x4c\x91\x9a\xf9\xcd\xcc\x9b\xc7\x55\xa3\xb2\xef\x6a\x43\xf0\xdb\x2c\x8a\x74\xdd\x58\xc7\x98\x44\x1f\xe2\xcc\x1a\xa6\x67\x8e\xa3\x0f\x71\x51\x87\x0b\xeb\x9a\xe2\x68\x1a\x45\xf3\x39\xfe\xfa\x91\x7f\xef\x02\xb1\xc0\x97\x87\x9b\xd5\x15\x96\xab\x6f\xab\xdb\xf5\xfd\xaf\xab\xbb\x47\x5c\x3f\xdd\x2c\x57\xff\x9e\x13\xcd\xe7\xc2\x7c\x5c\x2f\xd7\x9f\xb1\x7a\x66\x32\x39\xb8\x24\xec\xf7\x48\xee\x54\x4d\xf8\x13\x5f\xc9\x6d\x75\x46\x78\x79\x81\x1f\x3e\xa6\x1d\x72\x2a\xb4\xd1\x66\x03\x43\x3b\x3c\xdc\x5f\x7a\x28\x93\x0b\x4a\x99\x1c\x35\x79\x2f\x4a\x71\xd7\x90\x87\x36\x01\xd9\xa4\xf3\x21\x3f\x69\x9c\x65\x8b\x42\x57\x94\xe0\xb1\x24\x4f\x07\xc2\x98\xea\x05\x95\xd9\xba\xb1\x9e\x42\xf6\xe2\xfe\x06\x85\x75\xe8\x6c\xeb\xc6\x3e\x12\x2c\x0a\x26\x87\xda\xe6\xba\xe8\xa4\x99\x50\x27\xc0\x7d\x56\x52\xad\xa4\xb6\x90\xfe\x59\x7b\x86\x4c\x55\x15\xe2\x5a\x7d\x1f\x12\xd2\xb6\x88\xc1\x16\x8e\x36\x64\xc8\x29\xa6\x23\x2c\x6d\x8b\xd0\xac\x4f\x84\x75\xd4\xeb\xd2\x91\xc4\x29\x03\x5d\x37\x15\xd5\x64\x58\xb1\xb6\x06\xb6\xf8\x0f\x11\xc9\x09\x45\x1b\x26\x57\xa8\x2c\xa8\xa0\xfd\xf1\x1e\xda\x63\x6c\x23\x17\xb5\xcf\x5a\x11\x59\x74\x45\x2e\xe8\x45\xcf\xda\xb3\xef\x69\x5e\xe7\xf4\x4a\xea\x34\xd9\x9c\x48\x8d\xb8\x2f\x1f\xc3\xb3\x6b\x33\x86\xaa\x1c\xa9\xbc\x13\xfa\x56\xe7\x24\x4b\x08\xb0\x57\x03\xbd\x37\xcc\x49\xe7\x43\xdd\x19\xd2\x96\x61\x4d\xd5\x05\xbd\x64\x73\xd2\xd8\x35\xf1\x37\x72\x5e\x90\x45\x6b\x32\x61\x27\xf8\xdd\xb6\xd8\xe9\xaa\x82\x21\xca\x65\x07\x87\xe2\x50\xa6\x3b\x1a\xac\xb3\x6d\x80\xa9\x3c\x44\x05\x27\x1c\x44\xe9\xf7\x9d\x9c\xf9\xf9\xa9\xc9\xc7\x3d\xbe\x51\x18\xbb\x92\x8c\xd0\xc9\x61\xdb\x7f\xe7\x65\xd0\x53\x87\x09\x2b\xa5\xcc\xd6\x04\xb5\x55\xba\x52\xa9\xe8\x78\x45\x54\xa1\x70\x44\xd2\x46\x56\x2a\xb3\x39\x2b\xc0\x16\x29\x31\x93\xbb\xf0\xad\x66\x94\x76\x17\x98\xc2\x1a\xea\x88\x55\x7d\xe7\x99\xea\x19\xac\xc3\x86\x18\x4e\xe7\x52\x5c\x33\xc8\xb0\x76\x54\x75\xc9\x29\xb3\xa4\xaa\xf1\x08\x76\x6d\x1b\x28\x61\xf9\x20\x13\x62\xcf\xca\xb1\x6c\x94\x9e\x55\x78\xc2\xa5\x92\xbd\x56\x76\x27\xdb\x04\x99\xfc\x82\xed\x05\x05\xb3\x84\x88\x04\x37\x2c\x16\x33\x96\x05\xe4\xe8\x8f\x56\x3b\xca\xcf\xc5\x5b\x97\xe8\x48\x95\x33\xe4\x54\x51\x50\x51\x4c\xd9\x8a\xc5\x82\x70\xb2\x0d\x63\x51\x59\xb3\x21\xd7\xaf\x4e\xf3\xe1\x05\x79\xe7\x0c\xc3\xd5\xe2\x61\xf5\xdb\xea\xf6\x16\x8b\xbb\x25\xae\xd7\xeb\x25\x6e\x9f\x2e\x7f\x79\x27\xe5\xc7\x1f\xa3\x42\x5c\x52\xa1\xda\x8a\xff\xc7\xbb\x7b\xb4\x7b\x24\x27\xdc\xf8\xb4\x7f\xa3\xf6\x2f\x81\x7e\xb2\x3b\x47\xdc\x3a\xe3\x03\x36\x6b\x9d\x13\x63\x0f\x46\x18\xab\x8d\x76\x13\x6f\x62\xd2\xf3\xa6\x27\x8c\xc9\xf0\x1b\x93\x5c\xf6\xd7\x19\x3e\x52\xdd\x70\x97\xac\xe4\xff\x14\x93\x8f\x4d\x9a\x0c\xb1\x0f\xe4\x1b\x6b\x3c\xcd\x40\xce\x59\x37\xc5\x3e\xfa\xd0\xb7\x80\x9f\x5e\x47\xed\x87\xfb\xcf\x88\x3f\x25\x9f\x92\x9f\xe3\x97\x19\x8c\xae\xa2\x7e\x8a\x3b\xda\x7d\x51\x5e\x67\x5f\xfb\x09\xc7\x49\xe4\xc4\x33\x9e\x95\xc9\x68\x9c\x20\x1f\xd4\x7c\xa5\x50\x18\xe9\x9c\x33\x99\x62\xd2\xa4\xc9\x9b\x12\xf7\x11\x6f\xf5\xde\x93\xf7\x87\xfe\xfe\x0e\x00\x00\xff\xff\x1d\x1f\x08\xb4\x8f\x07\x00\x00")

func templatesSvcZserverGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSvcZserverGoGotmpl,
		"templates/svc/zserver.go.gotmpl",
	)
}

func templatesSvcZserverGoGotmpl() (*asset, error) {
	bytes, err := templatesSvcZserverGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/svc/zserver.go.gotmpl", size: 1935, mode: os.FileMode(420), modTime: time.Unix(1524162104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.gitignore.gotmpl":                    templatesGitignoreGotmpl,
	"templates/Makefile.gotmpl":                      templatesMakefileGotmpl,
	"templates/README.md.gotmpl":                     templatesReadmeMdGotmpl,
	"templates/cmd/config/config.go.gotmpl":          templatesCmdConfigConfigGoGotmpl,
	"templates/cmd/gateway/handler.go.gotmpl":        templatesCmdGatewayHandlerGoGotmpl,
	"templates/cmd/gateway/main.go.gotmpl":           templatesCmdGatewayMainGoGotmpl,
	"templates/cmd/gateway/swagger.go.gotmpl":        templatesCmdGatewaySwaggerGoGotmpl,
	"templates/cmd/server/main.go.gotmpl":            templatesCmdServerMainGoGotmpl,
	"templates/docker/Dockerfile.application.gotmpl": templatesDockerDockerfileApplicationGotmpl,
	"templates/docker/Dockerfile.gateway.gotmpl":     templatesDockerDockerfileGatewayGotmpl,
	"templates/pb/service.proto.gotmpl":              templatesPbServiceProtoGotmpl,
	"templates/svc/zserver.go.gotmpl":                templatesSvcZserverGoGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".gitignore.gotmpl": &bintree{templatesGitignoreGotmpl, map[string]*bintree{}},
		"Makefile.gotmpl":   &bintree{templatesMakefileGotmpl, map[string]*bintree{}},
		"README.md.gotmpl":  &bintree{templatesReadmeMdGotmpl, map[string]*bintree{}},
		"cmd": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"config.go.gotmpl": &bintree{templatesCmdConfigConfigGoGotmpl, map[string]*bintree{}},
			}},
			"gateway": &bintree{nil, map[string]*bintree{
				"handler.go.gotmpl": &bintree{templatesCmdGatewayHandlerGoGotmpl, map[string]*bintree{}},
				"main.go.gotmpl":    &bintree{templatesCmdGatewayMainGoGotmpl, map[string]*bintree{}},
				"swagger.go.gotmpl": &bintree{templatesCmdGatewaySwaggerGoGotmpl, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"main.go.gotmpl": &bintree{templatesCmdServerMainGoGotmpl, map[string]*bintree{}},
			}},
		}},
		"docker": &bintree{nil, map[string]*bintree{
			"Dockerfile.application.gotmpl": &bintree{templatesDockerDockerfileApplicationGotmpl, map[string]*bintree{}},
			"Dockerfile.gateway.gotmpl":     &bintree{templatesDockerDockerfileGatewayGotmpl, map[string]*bintree{}},
		}},
		"pb": &bintree{nil, map[string]*bintree{
			"service.proto.gotmpl": &bintree{templatesPbServiceProtoGotmpl, map[string]*bintree{}},
		}},
		"svc": &bintree{nil, map[string]*bintree{
			"zserver.go.gotmpl": &bintree{templatesSvcZserverGoGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
