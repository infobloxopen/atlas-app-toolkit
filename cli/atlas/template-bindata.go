// Code generated by go-bindata.
// sources:
// templates/.gitignore.gotmpl
// templates/Makefile.gotmpl
// templates/README.md.gotmpl
// templates/cmd/config/config.go.gotmpl
// templates/cmd/gateway/handler.go.gotmpl
// templates/cmd/gateway/main.go.gotmpl
// templates/cmd/gateway/swagger.go.gotmpl
// templates/cmd/server/main.go.gotmpl
// templates/docker/Dockerfile.application.gotmpl
// templates/docker/Dockerfile.gateway.gotmpl
// templates/proto/service.proto.gotmpl
// templates/svc/zserver.go.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGitignoreGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xca\xcc\xe3\x02\x04\x00\x00\xff\xff\x0c\xbf\xc6\xec\x04\x00\x00\x00")

func templatesGitignoreGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGitignoreGotmpl,
		"templates/.gitignore.gotmpl",
	)
}

func templatesGitignoreGotmpl() (*asset, error) {
	bytes, err := templatesGitignoreGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.gitignore.gotmpl", size: 4, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x51\x8f\x9b\x38\x10\x7e\xc6\xbf\x62\x14\x45\x6a\xdc\x3b\x83\xee\xed\xc4\x29\x6a\x69\x96\x66\xb9\xee\xc2\x8a\xb0\xad\x56\xaa\x84\x58\x30\x2c\x2a\xc1\x1c\x98\x6c\x57\xbb\xf9\xef\x27\x83\x1d\x20\xd9\xf4\x54\x55\x97\x87\x80\xed\xf1\x37\x9f\xbf\xf1\xcc\x70\xe3\x7b\x7f\xdb\xab\x20\xf4\x3d\x2f\x00\x4d\xd3\x34\x73\x09\xcf\xcf\xa0\xfb\x8c\x71\xd8\xef\x0d\xf1\xee\x46\x5b\x0a\xfb\x3d\xfa\x70\xeb\x5c\x5d\x84\x37\x56\x70\x09\xca\xf4\x3e\x2f\xd1\x85\xb7\xfa\x64\xfb\x1f\x9d\x2b\xbb\x5f\xeb\x16\xe6\x8b\xd5\xad\x7f\xe1\xf8\xd8\x48\x58\xfc\x8d\xd6\x08\xdd\x6e\x6c\xdf\xb5\xae\x6d\x18\xfd\x3a\x43\xb1\x80\xd1\xda\x09\xc2\x95\x77\x7d\xed\xf4\x34\x7a\x8c\xe6\x81\x16\x05\x64\x39\x87\x84\x36\x71\x9d\xdf\x53\x20\x24\xc9\x6b\xfe\xb4\x24\x6d\xd9\xb4\x55\xc5\x6a\x4e\x13\x20\x24\x2a\x1e\xa3\xa7\x06\x5e\x5e\x80\xc6\x0f\x0c\xaa\x9a\x92\x98\x6d\xb7\x39\xc7\xc8\xb9\xb6\xd6\x76\xf8\xd9\xf6\x37\x8e\xe7\x0a\xe8\x77\xca\xab\xa0\x83\x49\x42\x77\x64\xbe\x18\xfc\x63\x84\x36\xb6\xff\xd9\xf6\xc3\x0f\x8e\x6b\xf9\x77\xa0\xd8\x0c\xe7\xc7\x46\x43\xeb\x1d\xad\x95\xa1\x3c\xb7\xb4\x1b\x6b\x8a\x8d\x78\x9b\x1c\x59\x77\x84\x06\xad\xf3\x14\x74\x9f\x66\x79\xc3\xeb\x27\xd8\xef\x3b\xf5\x87\xa1\x88\x00\x2d\x13\xb9\x20\x43\x61\xce\x17\x93\x53\x61\x05\x3d\xc4\x02\x7a\x2e\x47\xc1\xc1\xc6\x45\x17\x8e\x34\x2f\xa8\x2e\x59\x49\x0a\x5f\x72\xfe\xb0\x8e\x38\x7d\x8c\x84\x5b\xb4\xb6\x02\xfb\x8b\x75\xf7\x23\x0d\xb2\xde\xfa\x60\xfa\x5f\x2a\x1c\xdb\xff\xba\x0e\x44\x42\x9e\xea\xa1\x7c\xfc\x94\x20\x8a\xe0\xc1\x15\x0a\xec\x4d\x10\xde\xba\x4e\x10\x5e\x79\xeb\xe1\xd2\x72\xda\xf0\xb0\x2d\x73\xae\x17\x2c\x43\x32\x31\x82\xbb\x1b\x1b\xde\x2d\x61\x96\xd0\x34\x6a\x0b\x3e\x43\x79\x4a\xff\x81\x85\x12\x4d\xac\xe3\xdf\x87\x65\x8c\xb4\xb5\x27\xd3\x69\xfc\x13\x3c\x8d\x8c\x21\x6d\xe3\xaf\x84\x78\xa1\xe7\x86\x97\xde\x26\x18\x56\x55\x62\x24\x79\x5d\x0a\x21\xe6\x8b\xe8\xbe\xa9\x22\xfe\x00\xf3\x45\x11\x35\xfc\x91\xd5\x09\xcc\x17\xd7\xd6\x27\xbb\x3b\xe8\x95\xb3\x09\x30\xc6\x78\x80\x74\xdc\x70\xe5\xb9\x81\xe5\xb8\xb6\xdf\x23\x4a\x2a\xd8\x68\xea\xd8\x38\x8a\x5e\x47\x74\x65\xad\x2e\xed\x13\xa2\xa4\xfa\x96\x25\x79\x0d\xf3\xc5\x6b\xd0\xd8\x38\xba\x31\x8c\xc4\x51\xfc\x40\x91\x86\xb4\x3e\x10\xa1\x7f\xeb\xba\xb6\x3f\x86\xec\x0b\x06\xd4\x6d\x09\x84\xd4\xdb\x73\x96\xbf\x2d\x81\xec\x46\x7e\xa5\x4a\xd8\x3c\x43\xe5\x80\xd3\x11\x3a\x00\x09\x8f\x79\x99\xb2\xfb\x82\x7d\x37\xee\xdb\xbc\x48\x38\x63\x85\xb9\xfb\xf3\x60\xbf\xb6\x5d\xdb\xb7\x02\xcf\x3f\xb1\x8f\x39\x33\x32\x5a\xf6\x1b\xfe\x40\xda\x14\x19\xc6\x01\x9b\x9c\x01\x03\x79\x3c\xa7\xd8\x60\x2b\xd1\x84\xfa\x13\x06\x3f\xc2\x3d\x4c\x1c\xb6\x60\x44\xcb\x24\x4f\x11\x5a\x7b\x3d\x62\xf8\xf1\xca\x5a\x6f\x64\x15\x54\x71\xc5\x40\x72\x20\x3b\x61\xd4\x5d\x79\x69\x23\x8c\xc8\x0e\x48\xcc\x44\xa1\x50\x8b\x37\xd6\xea\x93\xb5\xb6\x37\xe3\xab\x28\xe3\x2c\x38\x64\x0c\x8a\xbc\xe1\xa0\x1b\xba\xae\xc3\x0b\x64\x35\xad\x04\xca\x4c\x37\x76\xb4\x4c\x58\x6d\xcc\x44\xbd\xb2\xfc\xd5\x65\xb8\xf6\xc4\x05\xdd\x8c\x8b\x8b\x80\x48\xf3\x32\x01\x1d\x48\xc9\x38\x90\xee\x62\xbf\x79\xab\x36\xbf\x7d\x03\x84\x3f\x55\x14\x52\x20\xdd\xed\x9f\xbd\xd5\x33\x36\x43\x48\xbf\xb9\xf4\xdc\x3b\x13\x64\x7e\x21\xf9\x34\xbb\x6c\x85\xbe\xd8\xbd\x5a\xeb\x40\xe6\xfd\x90\xf6\x07\xac\xa8\x28\x50\x54\x14\x26\xf4\xce\xa1\xaa\x19\x67\xf7\x6d\xfa\x2b\x98\xe9\x96\xa3\x74\xcb\x4d\xa4\xbd\x9f\x2f\xa6\x3a\x60\x20\xf4\x3b\x8d\x21\x63\xe9\x96\x03\x69\xc4\x3d\x79\xde\xc3\xd7\xbf\x86\xdd\xc2\x31\x12\x7f\x3d\x90\xc0\x18\x2b\xdf\xf1\xea\xe2\x3a\xc4\x11\x8f\x26\x54\xec\xf0\x80\x28\xdb\x40\xff\x50\x43\xd2\xa5\x82\x1a\xa8\x1e\x3e\xdd\xd2\xdb\xa0\xf1\xc0\x3c\x21\xd4\xe3\x74\x04\x46\xd7\x0f\x03\x61\x22\x03\xc6\x7d\x16\x0f\x13\x5d\xb5\x38\x71\x27\x59\x4c\x46\x47\x5c\xb4\xf7\xb2\x7a\xf4\x6e\x49\x3a\x60\x0e\x85\x1f\x03\xe1\xc3\x7c\xd7\x38\x30\xe8\x67\xfa\xa0\xe2\xa0\x7a\x83\xea\x38\x6a\x42\x0a\xa5\x46\x92\xe3\xff\xa1\xc2\xc4\x21\x9a\x8c\x7e\x52\xf6\x69\x6f\xc7\xa3\x99\x33\x2e\xe5\xa9\xa6\x43\xf3\x55\xb5\x4f\x1b\xaf\x94\x7b\xd2\xf5\xa5\xde\x32\x35\x9e\x9f\xc9\x71\xf7\x3f\x50\xa8\xda\xe6\x01\x89\xbf\x91\x3b\x31\x3c\x0e\xe0\xeb\xd1\x3b\xde\x32\x25\x31\x66\xa0\xde\x0e\x7e\x65\xa6\x23\xf5\xd2\x6b\x3c\xd4\x55\xf8\x8a\x34\x42\x32\x16\xb2\x96\x2f\xab\xa2\xcd\xf2\xb2\x59\x66\x75\x15\x9b\xba\x58\x7a\x85\x0f\x11\x84\x08\x11\x36\xea\xc3\xa5\xdb\x5c\xb0\x8c\xb3\x86\x27\xb4\xae\x97\xbc\x6e\xe9\x01\x40\x50\x92\x9b\x76\x51\x91\x27\x11\xa7\xdd\x86\x59\x11\x95\xd9\x32\x63\xa6\x3e\xeb\x59\x34\x8f\x51\x96\xd1\xba\x5b\x34\xf5\x93\x8f\xaf\xee\x08\xdd\x47\x68\x1e\x53\xbd\x1b\x0d\x31\xee\x2b\x1b\xea\x1f\x26\xd2\x46\xf7\x28\xa1\x15\xd0\xb2\x69\x6b\x0a\xa4\x5f\x27\xac\x2c\x9e\x8e\xf7\x92\xb6\x12\xd4\xd0\x64\x74\x0e\x09\xfd\x1b\x00\x00\xff\xff\x59\x49\x12\x90\x72\x0c\x00\x00")

func templatesMakefileGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileGotmpl,
		"templates/Makefile.gotmpl",
	)
}

func templatesMakefileGotmpl() (*asset, error) {
	bytes, err := templatesMakefileGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.gotmpl", size: 3186, mode: os.FileMode(420), modTime: time.Unix(1522342462, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesReadmeMdGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x54\x4d\x6f\xdc\x36\x10\xbd\xf3\x57\x0c\xe0\x4b\x0d\x34\xda\x38\x06\xfa\x91\x9b\x8b\xb8\x41\x0f\x69\x83\x38\x48\x0e\x46\x11\x8f\xa4\x27\x89\x05\xc5\x61\x39\xa3\xdd\x08\x41\xfe\x7b\x41\x4a\xde\x3a\x39\xed\x42\xf3\xf1\xde\xcc\x7b\xc3\x0b\xfa\xf2\x85\x9a\x3f\x79\x06\x7d\xfd\xea\xdc\xa7\xf7\x93\x57\x1a\x11\x91\xd9\xd0\xd3\xbb\xdb\x9b\x57\x6f\x6e\x9b\xb9\xa7\xc1\x07\x50\x10\x51\x84\x95\x06\x09\x41\x4e\x4a\x4c\xf7\x49\xd2\x12\x38\x93\x61\x4e\x81\x0d\x7f\xff\x30\x99\x25\x7d\x79\x38\x8c\x5e\xad\x19\xbd\x4d\x4b\xdb\x74\x32\x1f\xde\x2e\x39\x05\xfc\x26\x62\xd3\xe1\xea\xf9\xaf\xd7\x57\x57\x6d\xfb\xfc\xfa\xa7\xab\xe1\xfa\x45\xff\xcb\xcf\xfc\xe2\xb2\xf9\xe4\xdc\x5f\x11\x94\x38\xf3\x98\x39\x4d\x24\x03\xa5\x2c\xff\xa0\x33\xea\xa1\x5d\xf6\xc9\xbc\x44\x1a\x05\x4a\x13\x32\x1a\xe7\x2e\x2e\xe8\x35\xcc\x7c\x1c\xe9\xce\x38\x1b\x7a\xe7\xde\x4f\x50\x90\x8f\x6a\x79\xe9\x4a\x85\xd2\xc9\x87\x40\x23\x8c\x56\x59\x88\xa9\x93\xb4\x96\xee\x36\xe1\x8c\xb0\x24\xe2\xd8\x53\x5e\x62\x2c\xdd\x24\x96\xdc\x4c\x41\x3a\x0e\x34\x73\x37\xf9\x08\x1a\x24\x53\x8f\x23\x82\xa4\x19\xd1\x6a\x85\x41\x2b\x7e\x5a\x72\x12\x85\x36\x74\x07\x50\x8f\x14\x64\xad\x49\xa5\x28\x8a\x41\x4b\xd3\x49\x4e\x64\xb2\x87\xbf\x21\x20\x91\x98\x82\x3f\x82\x74\x55\xc3\x5c\xa7\xbb\xa0\xb7\x19\x19\xff\x2e\x5e\xbd\x41\x9d\xfb\x38\xb1\x91\x4d\x3e\x8e\x5a\x87\x89\x40\x5f\x1a\x96\x71\x39\x84\xda\x51\x65\xb0\x13\x67\x54\x7a\x3b\xe0\x93\x78\xe9\xfc\xf0\xf0\xe0\x5e\x17\x2c\x7c\xe6\x39\x05\x68\xfd\x52\x01\xff\xd8\x32\x7d\x1c\x9d\xbb\x21\x35\xa4\x67\xed\xfa\xac\xfc\x92\x22\xfb\x32\xc6\x70\x2e\x23\xab\x7c\x10\x42\x65\x33\xf1\x11\x05\xad\xac\x9a\xbf\xd9\x14\xe2\xd1\x67\x89\xf5\xff\xbe\xe3\xc6\xb9\x3b\x5e\xe9\xb4\x4d\x84\x0a\xb5\x29\xd5\xe2\x29\xc5\x12\xdb\xf1\x36\x96\x37\x45\x27\x24\xb0\xed\x69\x4b\x34\x1f\x68\xf0\xd1\xeb\x84\x7e\x4b\xba\x8d\x3d\x9d\xbc\x4d\xc4\xf1\xb1\xba\x10\x1f\x77\xb7\xa8\xcc\xa0\x9e\x8d\x49\x16\x7b\xf4\xc2\xb6\x78\x92\x4c\x8b\x96\x24\xbf\x89\x57\x64\x31\x0b\x45\xd4\x59\x36\xd3\xbd\x3a\xcb\xeb\xdc\x4d\xdf\x13\xf7\xbd\x2f\x56\xe3\xb0\x4b\xcd\x6d\xe9\xfb\xbd\xda\x5e\x89\x53\x0a\xbe\xe3\x92\xdc\xd0\x1b\x5e\x5b\x50\xf0\x6a\x1b\xa1\x4e\xe6\x59\x22\x25\x6f\x03\x87\xa0\x54\xed\xd6\x2e\xe3\x58\x29\x5b\xb9\xca\xd1\x43\x37\x0e\xef\x76\xab\x16\xe6\xc5\x84\xea\xdc\xed\xe7\x14\xd8\x9f\x5d\x96\x97\x58\xa3\xbc\x98\xcc\xf5\xa2\x6b\x5e\x1d\xaa\x92\x39\x3b\xed\xbc\xec\xff\xb7\xf5\xe8\x08\xfa\x80\xac\x5e\x62\x35\xc4\x47\xd0\xa2\xa0\xfb\x3b\xcc\x1f\x90\xb7\x6b\x7f\x79\x38\x28\xe6\x23\x72\x23\x79\x3c\x5c\xd6\xee\xc7\x73\x4d\x43\xbf\x57\x34\x3c\x7e\x53\xe2\x23\xfb\xc0\x6d\xc0\x8f\xa4\xd8\xf4\xbd\x37\x1e\xeb\x7d\x54\x5a\x19\x49\xd4\x9b\xe4\xf5\xe9\x7b\x72\x7e\x4a\xca\x61\x1e\xf6\xb3\x39\x94\xc2\xcb\x86\xdc\x7f\x01\x00\x00\xff\xff\x07\x15\x93\x01\xcb\x04\x00\x00")

func templatesReadmeMdGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMdGotmpl,
		"templates/README.md.gotmpl",
	)
}

func templatesReadmeMdGotmpl() (*asset, error) {
	bytes, err := templatesReadmeMdGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md.gotmpl", size: 1227, mode: os.FileMode(420), modTime: time.Unix(1522344113, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdConfigConfigGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\x48\xce\xcf\x4b\xcb\x4c\xe7\xe2\x4a\xce\xcf\x2b\x2e\x51\xd0\xe0\x52\x50\x08\x76\x0d\x0a\x73\x0d\x8a\x77\x74\x71\x09\x72\x0d\x0e\x56\xb0\x55\x50\x32\xd0\x03\x43\x2b\x4b\x03\x4b\x03\x25\x2e\x05\x85\xea\x6a\x85\xcc\x34\x05\xbd\xf0\xcc\x92\x0c\xf7\xc4\x92\xd4\xf2\xc4\x4a\x85\xda\x5a\x77\xc7\x10\xd7\x70\xc7\x48\x6c\xfa\x2c\x0c\x2c\xc0\xfa\x60\x4a\x42\x83\x7c\x40\xd2\xfa\xd5\xd5\x0a\x7a\x7e\x89\xb9\xa9\x0a\x35\x0a\x20\xa1\xda\x5a\xfd\x32\x43\x7d\x25\x90\xf1\xa9\x79\x29\x0a\xb5\xb5\x5c\x9a\x5c\x80\x00\x00\x00\xff\xff\x6f\xdc\xa5\x59\xa7\x00\x00\x00")

func templatesCmdConfigConfigGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdConfigConfigGoGotmpl,
		"templates/cmd/config/config.go.gotmpl",
	)
}

func templatesCmdConfigConfigGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdConfigConfigGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/config/config.go.gotmpl", size: 167, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayHandlerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6e\xa3\x40\x10\x86\x6b\xf6\x29\xfe\xeb\x40\x42\xeb\xde\x92\x2b\xdf\x9d\x7c\xc5\xd9\x96\xcf\xd2\x15\x51\x8a\x0d\x8c\x61\x15\x18\xd0\x30\xd8\x44\x84\x77\x8f\xd6\x98\x54\x51\xaa\xd5\xfc\xda\xf9\x66\xbe\x69\x5d\xf6\xea\x0a\x42\xed\x3c\x1b\xb3\x5a\x61\x4f\xb7\x71\x84\xdd\xbb\x9a\xf0\x8e\x7f\x24\x57\x9f\xd1\x34\xed\x1c\xe7\x15\x09\x84\xb4\x17\xee\xe0\x18\xbb\xf3\xf9\x88\xf2\x91\x6b\xe9\x14\x1d\xc9\x95\x3a\x68\x49\x28\x4e\xc7\x2d\x0a\xa7\x74\x73\x6f\xe6\xd2\x73\xf6\x35\x18\x9f\xe4\x38\xd3\x01\x59\xc3\x4a\x83\xda\xed\xfc\xa6\x70\x79\x2e\xe8\x54\x3c\x17\x29\x9a\x56\x3b\x58\x6b\xa5\x67\xf5\x35\xd9\xc0\xa0\xbf\xfd\x70\x68\xd5\x37\x9c\x20\x2e\x55\x5b\xfb\xe0\xa5\x20\x91\x46\x12\x8c\x26\xaa\xfb\x01\xeb\x0d\x96\xbe\x3d\xdd\x96\xd6\x38\x30\xad\xb5\x89\x89\x72\xef\xaa\x43\x98\xb0\xde\xe0\xe9\xb9\x90\x36\xb3\x3f\xe7\xc8\x37\x3c\xde\xeb\xff\x5e\xcb\x3f\xdc\x51\xd6\x0b\xc5\xc9\x64\x22\x12\x09\xdf\xdb\x17\x7b\xa2\xc2\x77\x4a\xf2\x9d\xe2\x6f\x69\xea\x5f\x9c\xb7\x8d\x67\x0d\xba\x29\xea\x7e\x98\x1d\x53\x2c\xe3\x13\x13\xf9\x4b\xd8\x1d\x3f\x36\x60\x5f\x85\xfd\xa3\xf9\xea\xa1\xbc\x6b\x99\x68\x32\x4b\x76\x47\xb0\xaf\xcc\x64\x3e\x02\x00\x00\xff\xff\xf4\xfc\xbe\xcb\xcc\x01\x00\x00")

func templatesCmdGatewayHandlerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayHandlerGoGotmpl,
		"templates/cmd/gateway/handler.go.gotmpl",
	)
}

func templatesCmdGatewayHandlerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayHandlerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/handler.go.gotmpl", size: 460, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xcd\x6e\xdb\x3c\x10\x3c\x8b\x4f\xb1\x9f\x0e\x1f\x24\xc0\x91\x90\x6b\x8a\x1c\xdc\xc6\x49\x0e\x49\x60\xd8\xf9\x41\x51\x14\xc1\x56\x5a\xc9\x6c\x28\xd2\x5d\x52\xb6\x83\xd4\xef\x5e\x90\x92\xfc\x93\x20\x27\x9b\xcb\xe5\xec\xcc\xec\x68\x89\xc5\x0b\xd6\x04\x0d\x4a\x2d\xc4\x0a\x19\x12\x11\xcd\x89\x57\xc4\xe3\xb2\x64\x00\xeb\x58\xea\x5a\x44\x57\xe8\x68\x8d\xaf\xa1\x38\xd4\xe6\x6b\xac\x6b\xe2\x0b\xb9\xef\x4b\x85\xa8\x5a\x5d\x04\xbc\x24\x85\x37\x11\xe5\x39\x14\x4c\xe8\x08\xae\xef\xef\xa7\xb0\x40\x5d\x2a\x62\xa8\x0c\x43\xdd\x61\x8a\x88\x98\xaf\xfb\xfa\xd9\x39\x70\xab\x9d\x6c\x28\x7b\x92\x6e\x31\x65\xe3\xcc\x84\xd9\x0c\x0d\x49\xbd\xce\x42\xf1\x96\xac\xc5\x9a\x0e\xef\x52\x11\xd9\x40\xbd\x3f\x8f\x80\x38\x20\xde\xd1\xfa\xed\x0d\xb2\x3b\x6c\x08\xfe\x82\x97\x27\x0b\x82\xed\x76\xc0\x2c\x8c\x76\xb4\x71\xd9\x57\x2c\x5e\x6a\x36\xad\x2e\x93\x74\x04\x7b\x1b\x02\xd0\x7e\x48\x9e\x07\xb9\x4b\x40\xa5\xe0\x57\xeb\xc0\x31\x4a\x25\x75\x0d\x71\x1e\x83\xd1\x20\x75\x61\x1a\x7f\x66\xfa\xd3\x92\x75\xf6\x1d\x31\x38\x87\x85\x73\xcb\x6c\xee\x51\xa6\x4c\x95\xdc\x24\x22\x8a\x0a\xa3\x2b\x59\x67\x57\xe3\xfb\xc9\xd3\xf8\xfb\xf3\xc3\xec\xe6\xc7\x99\x22\x9d\x7c\xac\xa7\x27\xa7\x3f\x47\x22\x7a\x27\x57\x44\xa9\x88\x64\x15\x54\xff\x77\x0e\x5a\x2a\xbf\x80\x48\x99\x3a\xbb\x44\x87\x4a\xe9\x84\xd8\x0b\xd8\x06\x0d\x0d\x2e\xbb\x9d\x90\x2e\x97\x46\x6a\x67\xc1\x99\x61\x41\x56\x44\x4d\xbb\xf1\xe6\x05\xa6\x77\xb4\x0e\x76\xdc\xb6\x9b\x24\x0d\x57\x59\x37\x35\x89\xf3\x03\x6b\x1f\x66\x37\xb0\xdd\xe6\xab\xd3\x3c\x1e\xc1\x11\xb9\xa3\x47\x97\xad\x2e\x92\x38\xb7\x5d\x7e\x7c\x6f\x1f\xa5\x63\x8f\xfd\xfb\x1d\x1f\xef\xab\x5b\xd0\x10\x1a\xc0\xb2\x64\xb2\x56\x44\x81\xdf\x8d\xb4\x8e\xf4\x58\x97\x81\x65\x72\x90\xd6\x11\x34\xed\x26\x15\xdb\x3e\x98\x52\x4b\xb7\x0b\x66\x49\x15\xb6\xca\xed\x30\x57\xa8\x5a\xb2\x5f\xc0\x2c\x9d\x34\x1a\x95\x7a\x85\xce\xfb\x96\xa9\x84\x95\x44\x28\x4c\xd3\xa0\x2e\x4f\x94\xd4\x04\x95\xc2\xda\x8a\xc8\xff\x84\x55\xea\xfa\x11\x39\xf9\xff\x30\x37\x71\x67\x42\x3c\xea\x81\xb2\xf9\x64\xf6\x38\x99\x3d\x8f\x2f\x2e\x66\x93\xf9\x7c\x04\x71\xaf\x03\x4c\xd5\xc9\x9b\x4d\xbf\xf5\xce\xc5\xe9\x47\xec\x23\x61\x71\xcf\x7b\x8f\x3e\x44\xe4\x73\xf8\x5e\xe9\xe7\x13\xf6\x1f\xb5\x67\xdf\x1d\x4e\x4a\xe9\x25\xc4\x76\x81\x4c\xfe\x4f\x29\x99\x0a\x67\xf8\x75\xc0\xed\x1b\xb3\xdf\xd6\x68\xa8\xa4\xa2\x1d\xf4\x14\xd9\x52\xe2\x17\xf0\x2f\x00\x00\xff\xff\x7d\x08\x9d\x84\x6c\x04\x00\x00")

func templatesCmdGatewayMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayMainGoGotmpl,
		"templates/cmd/gateway/main.go.gotmpl",
	)
}

func templatesCmdGatewayMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/main.go.gotmpl", size: 1132, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewaySwaggerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x41\x4b\xf4\x40\x0c\x86\xcf\x3b\xbf\x22\x0c\x7c\xd0\xfd\x2c\xd3\xbb\xd0\x9b\xc8\x22\x1e\xca\x6e\xc5\xf3\x50\xd3\x99\xd1\x6e\x3a\x4d\x52\x2b\x88\xff\x5d\xda\xed\xc9\x6b\xde\x3c\xc9\xf3\x66\xdf\x7d\xf8\x80\x70\xf5\x89\x8c\xa9\x2a\xb8\x2c\x3e\x04\xe4\x93\xa7\xb7\x01\x19\x18\x75\x66\x12\xf0\x04\xa7\xb6\x6d\x20\xee\x73\x8d\x5e\x41\x90\x3f\x51\x40\x23\x82\xdc\x30\x90\x8c\x9d\xe9\x67\xea\xfe\x1c\x2a\x78\x81\xa8\x9a\xdd\x19\x25\x8f\x24\xf8\xca\x49\x91\x4b\x60\x9c\xe0\xff\x9e\x4c\x33\x8a\x1e\xe1\xdb\x1c\x32\xdc\xd7\x20\xca\x89\x82\xb8\x96\xd3\xb5\x61\xec\xd3\x57\xc1\x38\xb9\x97\xf3\xb3\x6b\xbc\xc6\x12\x6c\xb5\xbf\xad\xec\x71\x65\x6a\xe8\xd3\x80\xd9\x6b\x74\x4f\x63\xa2\x62\x57\x78\x48\x5c\x42\xde\x36\xee\x6a\xb0\x6e\x87\xdc\xbb\x8c\x64\xcd\x61\x18\x83\x6b\x38\x91\xf6\x85\x5d\x1b\x25\x0a\xf0\x4f\xec\x0d\xd9\xcc\x2e\x6b\xcf\xc7\x34\x60\xc1\xcb\x66\xbc\x65\x3f\xe6\x37\x00\x00\xff\xff\x9b\x89\x3c\xbd\x3d\x01\x00\x00")

func templatesCmdGatewaySwaggerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewaySwaggerGoGotmpl,
		"templates/cmd/gateway/swagger.go.gotmpl",
	)
}

func templatesCmdGatewaySwaggerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewaySwaggerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/swagger.go.gotmpl", size: 317, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdServerMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5f\x6b\xdb\x3e\x14\x7d\x96\x3e\xc5\xfd\xf9\xe1\x37\xbb\x38\xf6\x7b\x4b\x1f\xba\x36\x83\xc1\x28\x25\x61\x7d\x2d\xaa\x7c\xa3\x88\xc9\x92\xb9\x52\x1c\x42\xe6\xef\x3e\x24\x2b\x4d\x18\x1b\x2c\x2f\x16\xdc\x3f\xe7\x48\xe7\x1c\x0f\x42\xfe\x10\x0a\xa1\x17\xda\x72\xae\xfb\xc1\x51\x80\x92\xb3\xe3\xb1\xbd\x81\xb0\x45\x8f\x30\x17\x3d\x08\x42\xd8\x0a\xea\x16\xd2\x75\xd8\xc1\x3b\x4a\xb1\xf3\x08\xca\x9d\x06\xa4\xb0\x9f\x02\x10\x7a\x67\x46\x8c\xcb\x3d\xdc\xb4\xd3\xc4\x59\xa1\x74\xd8\xee\xde\x1b\xe9\xfa\x56\xd1\x20\x17\x28\x9d\x3f\xf8\x80\x7d\xab\xdc\x22\x55\x7a\xdd\x75\x06\xf7\x82\xb0\xb8\x72\xbe\x35\x4e\x29\x6d\x55\x3c\x69\xe7\xaf\x5e\x1f\x85\xd1\x9d\x08\x8e\x0a\x5e\x71\x3e\x0a\x8a\xcf\x7f\xe8\x3a\x42\xef\xc1\x07\xd2\x56\xc5\xc6\x66\x67\x65\x52\xa9\xac\xe0\xc8\x59\x24\x45\x82\xdb\x7b\x98\x69\x9b\x67\xdc\x97\x15\x67\x6d\x0b\x92\x50\x04\x04\x8b\x7b\x08\x72\x00\xa3\x7d\x40\x8b\xb4\xe1\xcc\xd8\x1a\x90\xd2\x96\xc5\xd0\x7c\x4b\x9d\xb2\x08\x72\x28\x6a\xc8\x94\x15\x67\x7a\x93\xa6\xfe\xbb\x07\xab\x4d\x24\xcb\x6c\xcd\x17\x11\x84\x31\xb6\x44\xa2\x8a\xb3\xe9\x77\x36\xb5\x7a\x79\x04\x8f\x34\x22\xc1\x5e\x87\x2d\x9c\x5f\x09\x72\x1b\x0d\x66\xb9\x7b\x7b\x0f\x51\x86\x78\xe9\x75\xaa\x94\x9c\xb1\x54\xf9\x6e\x05\x1d\xbe\xda\x80\x24\x71\x08\x2e\x35\x52\xe7\xed\x0c\xd6\x3c\x46\xb0\x34\x79\xde\x66\xf1\x32\x59\x4b\xed\xec\x05\x77\x6a\x26\x88\x0f\xa9\x9b\x8b\xe5\x4b\xb2\xaa\x3e\x21\x65\x53\xff\x08\x93\x15\xff\x0b\xc6\xd9\x8f\xa5\x0d\x74\x28\x67\xed\xaa\x19\x3a\x7d\xe3\x67\xb6\x8a\x50\x45\x0f\x28\xa9\xa6\x65\xca\xba\xc1\x1e\x6d\x98\x1f\x91\x54\x0c\x5b\x4c\x6a\x65\x69\x39\xf3\x1f\x2e\xfa\x31\x69\xf8\x59\x78\x2d\xb3\x14\x57\xf9\x37\xbc\x37\xab\x7c\x85\xe3\x11\x9a\x67\xd1\x23\xfc\x84\x75\xbe\xcc\x34\x65\xcc\x99\xb8\x86\x8b\x70\x44\xf2\x54\x6d\xd2\x4c\x69\x6c\x75\xf7\x8f\xac\x53\x0e\xb3\xb6\x3a\xcc\x61\x6e\x5b\xe8\x70\x23\x76\x26\x9c\xe2\x23\xe6\x30\xde\x81\x1b\xa2\x10\xc2\x98\x03\x78\x0c\x30\x6a\x01\xd2\xf5\xbd\xb0\xdd\xc2\x68\x8b\xb0\x31\x42\x79\xce\xe2\xd1\xac\xd3\xcf\xf2\x2a\xa8\xfc\x3f\x87\xb9\x86\x22\x23\x15\x35\x48\x67\x37\x5a\x35\xeb\xe5\xea\x75\xb9\x7a\x7b\x78\x7a\x5a\x2d\xd7\xeb\x1a\x8a\xa4\xef\x45\x74\x4f\x1b\x55\x86\x7d\x11\xe4\xb1\xac\xf8\xc4\x7f\x05\x00\x00\xff\xff\xde\xb9\x17\xae\xad\x04\x00\x00")

func templatesCmdServerMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdServerMainGoGotmpl,
		"templates/cmd/server/main.go.gotmpl",
	)
}

func templatesCmdServerMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdServerMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/server/main.go.gotmpl", size: 1197, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileApplicationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcc\x29\xc8\xcc\x4b\xb5\x32\xd6\x33\xe5\xe2\x0a\xf7\x0f\xf2\x76\xf1\x0c\x52\xd0\x2f\x2d\x2e\xd2\xcf\xc9\x4f\x4e\xcc\xe1\xe2\x72\xf6\x0f\x88\x54\x48\xca\xcc\xd3\x2f\x4e\x2d\x2a\x4b\x2d\x42\x62\x72\x71\xb9\xfa\x85\x04\x45\x06\xf8\x7b\xfa\x85\x28\x44\x2b\x21\x24\x94\x62\xb9\x00\x01\x00\x00\xff\xff\x6b\xe1\xc2\x91\x5b\x00\x00\x00")

func templatesDockerDockerfileApplicationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileApplicationGotmpl,
		"templates/docker/Dockerfile.application.gotmpl",
	)
}

func templatesDockerDockerfileApplicationGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileApplicationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.application.gotmpl", size: 91, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileGatewayGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0b\xf2\xf7\x55\x48\xcc\x29\xc8\xcc\x4b\xb5\x32\xd6\x33\xe5\xe2\x0a\xf7\x0f\xf2\x76\xf1\x0c\x52\xd0\x2f\x2d\x2e\xd2\xcf\xc9\x4f\x4e\xcc\xe1\xe2\x72\xf6\x0f\x88\x54\x48\xca\xcc\xd3\x4f\x4f\x2c\x49\x2d\x4f\xac\x44\x66\x73\x71\xb9\xfa\x85\x04\x45\x06\xf8\x7b\xfa\x85\x28\x44\x2b\x21\xc9\x28\xc5\x72\x01\x02\x00\x00\xff\xff\x64\x58\x5f\x58\x5e\x00\x00\x00")

func templatesDockerDockerfileGatewayGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileGatewayGotmpl,
		"templates/docker/Dockerfile.gateway.gotmpl",
	)
}

func templatesDockerDockerfileGatewayGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileGatewayGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.gateway.gotmpl", size: 94, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesProtoServiceProtoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\xc1\x6e\xe3\x46\x0c\xbd\xeb\x2b\x58\x9f\x36\x45\x2c\xa1\xed\x2d\x46\x0e\x45\x37\xdb\x2e\x50\x74\x8b\x24\x40\x8f\x05\x35\xa2\xa4\xc1\x8e\x86\xd3\x21\x65\x47\x48\xfd\xef\xc5\xcc\x58\x8e\xbb\x49\xf7\xd0\x8b\x21\x8d\xc8\x47\xce\x7b\xe4\xb3\x2c\x5e\xf1\x09\x6e\x61\x13\x22\x2b\xff\xb0\xd9\x55\x55\x40\xf3\x19\x07\x02\xa1\xb8\xb7\x86\x76\x55\x65\xa7\xc0\x51\x61\x33\x30\x0f\x8e\x9a\x1c\xda\xce\x7d\x43\x53\xd0\xa5\xce\xaf\x9b\xdd\x97\x51\x18\x6c\x83\xde\xb3\xa2\x5a\xf6\xf2\x3a\xcc\xea\x38\xb7\xb5\xe1\xa9\x71\x4b\xaf\x05\xd5\x6c\x07\xf2\xdb\x3d\x3a\xdb\xa1\x52\xf3\xea\xe1\x15\xca\x45\x96\x1c\x70\x18\x28\x36\x1c\x72\xc1\xaf\x17\xff\xe2\x26\x6a\x27\x12\xc5\x29\x9c\x23\xab\x02\x03\x03\xff\xb9\x12\x72\x0b\x9b\xe7\x67\xa8\xef\x99\x15\x8e\xc7\x26\x3d\xff\x86\x13\xa5\xe7\xd0\xee\x42\x9b\xb2\x9a\x06\xee\xcc\xc8\xd7\xf9\xf7\x9e\xfe\x9a\x49\xf4\x1a\xd0\x77\xa7\x03\x09\xec\x85\x60\xc2\xcf\x04\x73\x00\x84\x8d\x28\x46\xa5\xb8\x01\x7a\xc2\x29\x38\x02\x1d\x51\x13\x8e\x28\xfa\x4e\xc0\x7a\x08\x0e\x0d\x41\xcf\x11\x74\x24\xc0\x10\x9c\x35\xf9\x62\xb0\x5e\x00\x3a\xea\xad\xb7\xe5\xb2\xf0\x51\x01\x9d\xe3\x83\xe4\xf8\x1f\xd5\xa1\x24\xc0\x9f\x7e\xfd\x08\xca\x30\x90\xa7\x88\x4a\x80\x1e\xc8\x77\x5b\xe5\x2d\xf9\xee\x5c\x7e\x2d\x23\xa9\x45\x4e\xc8\x13\x7b\xd1\x98\x0b\xd6\xf0\x38\x52\xbe\x4a\x02\x5c\x53\x64\xe4\xd9\x75\xd0\x12\x44\xca\xbd\x76\x70\xb0\x3a\xa6\x02\x17\xcd\x6e\x25\x90\xb1\xbd\x35\x2f\x5d\x8b\x19\x69\xc2\x3a\xd3\xf6\x0b\x45\x02\x8c\x04\xc2\x13\xc1\x48\x2e\xf4\xb3\x83\x48\xc2\x73\x34\x24\xa9\x73\xb4\x1d\x2c\x3c\x27\x4a\x16\x9e\xe3\x0b\x4e\xa6\xf9\x26\xa1\x8c\xaa\x41\x6e\x9a\xe6\x62\xba\xac\xef\xb9\x75\xfc\xc4\x81\x7c\x83\x89\x8c\xad\x61\xaf\x68\x54\xb6\x18\x42\xd3\x3a\x6e\x9b\x09\x45\x29\x96\x81\x68\xd6\xcf\x65\x18\x2e\x61\x3b\xda\x93\xe3\x40\x51\xea\x32\x42\xb9\x42\x19\x42\x76\xdb\x76\xee\x7b\x8a\xd2\x74\x6c\xa4\x79\x95\x7c\xd1\xd3\x10\x83\xd9\x92\x61\x59\x44\xe9\xf4\x3a\xa0\xd2\x01\x97\xff\x5b\x4e\x74\x71\x54\x98\xc4\x10\x96\x33\x39\xbd\xf5\xc3\x37\xf9\xfc\xf1\xd3\xfb\x4f\x37\xf0\x81\xd3\x68\x80\x4d\x9a\xce\x26\x4f\x4c\xe2\xb6\x9d\xad\xeb\x0a\xad\x7c\xf0\x6f\x4b\x54\x00\x1e\x74\x36\x3a\x47\x7a\x09\x9e\x48\x04\x87\xa2\x91\xcc\x56\xcb\x97\x0b\xe9\x6b\xb8\x43\x33\xc2\xda\x38\x24\xb0\xd2\xfc\x9a\x0b\x56\x00\x41\x26\x74\x0e\x1c\x0f\xd6\x60\xd2\xde\x70\xec\xd2\x0c\x26\x09\xe3\x94\xa1\xae\x21\xab\x63\xbd\xf5\x03\x60\x46\x12\x8a\x96\x24\xc5\x79\x9c\x28\xb9\xc7\x4c\x10\xd0\x46\xa9\xab\x15\x3e\x8d\x2c\x3c\x57\x00\xa2\x31\x65\xae\xe7\xb7\xf0\xdd\xae\x3a\x56\xff\x8a\x3b\xad\x6d\x0e\x8f\x14\x08\x95\xca\xfa\x02\x99\x91\xe5\x3f\x72\x4e\x9b\xfd\xd5\xa4\x73\xf9\xe4\x37\x70\x0b\xdf\x67\x9c\x33\xb3\xef\xd3\x12\x53\xde\xbe\xb3\xb9\xfc\x0d\x0f\xc5\x87\xe1\x78\x5c\x2d\x39\xfb\x89\x55\x81\x89\x74\xe4\x4e\x6a\xf8\x40\xe4\xa0\x8f\x44\x09\x4c\x19\xcc\x88\x7e\x28\x48\x89\x93\xc4\xcd\xdb\x88\x49\x79\x52\xa5\xb8\x7d\x11\xce\xe3\x64\xfd\x90\x90\x0c\xfb\x3d\xf9\x93\xab\xdc\xd3\x44\x53\x4b\xb1\x78\xdb\x49\x30\x9b\x0d\xe0\xd2\xba\x56\x37\xa0\x94\x39\xa3\x73\x4b\x16\x69\x20\x85\x48\x13\xef\xa9\xab\xab\xf5\x1e\x6f\xf7\x94\x29\x0c\xa6\x94\x79\x77\xa1\xc8\x15\x44\xd2\x39\x7a\x59\x4f\x0b\xe7\x57\x39\x03\x12\x9a\xed\xa1\xfe\xc3\xea\xf8\x73\xd9\xa5\x64\xcd\x2b\xb9\xbf\x47\xde\xdb\x2e\x59\x6f\x08\xd6\x0f\x92\xee\x7d\x20\xf2\x70\x7f\xf7\xf0\x98\x8c\x30\xb0\xf5\x2a\x99\xdb\xb5\xbf\x95\xdf\x0c\x7f\xfa\x43\x78\x77\xda\x44\x0c\xb6\x4e\x7b\x7a\x05\xb7\xa7\xfa\x00\x81\x45\x6f\x60\xd3\x24\xc9\x37\xa7\xb3\x96\xbb\xe5\x06\x36\xdf\x96\xf7\xe3\xee\xf9\x39\x15\x83\xe3\xb1\x02\x38\x56\xc7\xea\x9f\x00\x00\x00\xff\xff\x80\xb9\xb5\x17\x83\x07\x00\x00")

func templatesProtoServiceProtoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesProtoServiceProtoGotmpl,
		"templates/proto/service.proto.gotmpl",
	)
}

func templatesProtoServiceProtoGotmpl() (*asset, error) {
	bytes, err := templatesProtoServiceProtoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/proto/service.proto.gotmpl", size: 1923, mode: os.FileMode(420), modTime: time.Unix(1522342599, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSvcZserverGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xcf\x6b\xdb\x4e\x10\xc5\xcf\xd6\x5f\xf1\xbe\x86\x6f\x90\x8a\xd8\xdc\x03\xb9\x34\x2d\xa5\x87\x3a\x10\xf7\x56\x4a\x59\xaf\x46\xd6\x12\x69\x77\x3d\x3b\xf2\x0f\x54\xfd\xef\x65\x25\x3b\x36\xa1\x3d\x19\xcf\xbc\xfd\xbc\x37\xa3\x09\xda\xbc\xea\x2d\x21\xee\x4d\x96\xd5\xbd\x33\x58\xd1\xe1\xa3\x8e\xd6\xac\x89\xf7\xc4\x79\x81\x3c\x6c\xd4\x30\x40\xad\x74\x47\xf8\x8d\x54\xb7\x86\x30\x8e\xb3\xa2\x04\x31\x7b\x2e\x30\x64\x0b\x26\xe9\xd9\xe1\x8e\x4c\xe3\xe7\xee\x30\x96\x70\xb6\xcd\xc6\x2c\xbb\xbf\xc7\xf7\xe7\x4f\xcf\x0f\x78\xf2\x1d\xa1\x0f\x38\x58\x69\x70\xf2\x3d\xc3\x1f\x1c\x6c\x17\x5a\xea\xc8\x89\x16\xeb\x1d\x7c\x0d\x69\x08\x7f\x35\x4e\xa8\x38\xff\x53\xf8\x6c\x1a\x0f\xed\x2a\x5c\x4d\xd1\xe9\xd7\xc9\x21\x4e\xd0\x7f\xa0\x97\x51\x34\x0b\xf1\x12\x89\x47\x47\x3d\x6b\xdd\x1b\x3a\xb0\x17\xaf\xf0\x55\x60\x23\x6a\xcf\xa8\xa8\xf3\x2e\x0a\xcf\x98\xd0\x73\xf0\x91\x22\xbc\x6b\x4f\x53\x82\xd8\xf8\xbe\xad\x26\xda\x9e\x9c\xf4\xba\x6d\x4f\xd8\x10\x98\x3a\xbf\xa7\x4a\x65\x72\x0a\x74\x9b\x33\x0a\xf7\x46\x86\xdb\xe5\xbc\x50\x68\xb5\xa1\x79\xac\x69\x43\x29\xab\x0e\xa1\xb5\x66\xf6\x3d\xc7\x43\x45\xb5\x75\x36\x95\x22\xa4\xd1\x82\x46\xef\x09\x1b\x22\x97\x68\x53\x97\x2a\x58\x17\x6d\x45\xef\x66\x9a\xbf\x74\x7e\x4d\x52\x4c\x7e\xb9\x91\x23\x8c\x77\x42\x47\x51\x4f\xf3\x6f\x09\xa6\x1d\x3e\x84\x8d\x4a\x8a\x17\xda\xf5\x14\xa5\x40\x7e\xad\xc4\xe0\x5d\xa4\xdb\x33\x48\xdc\x88\x87\x47\xfc\xf8\x79\x91\x0d\x63\xb6\x48\x2b\xfc\x55\x82\x52\x87\xb5\xdb\xa6\xc5\xec\xd4\x17\x92\x24\x88\xf9\xf4\x74\xc1\x67\x5e\x12\xd5\x9d\xa8\x75\x60\xeb\xa4\xce\x97\x49\x64\xdd\x16\xff\x47\xd4\xec\xbb\x69\x22\xe2\xff\x96\x25\x48\x7d\xa3\x18\xf5\x96\x8a\x6c\x71\xf6\x7e\x4c\x1b\x23\x57\x4d\x23\xc6\x12\x77\x97\x18\x17\xfc\x58\x64\x8b\xf1\x7a\xb0\xef\x86\x19\xce\xcf\xc4\x76\xa4\x56\xfe\x90\x17\x6a\x2d\x6c\xdd\x36\x2f\xde\xee\xf9\x4f\x00\x00\x00\xff\xff\x57\xb9\xc6\x80\x3a\x03\x00\x00")

func templatesSvcZserverGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSvcZserverGoGotmpl,
		"templates/svc/zserver.go.gotmpl",
	)
}

func templatesSvcZserverGoGotmpl() (*asset, error) {
	bytes, err := templatesSvcZserverGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/svc/zserver.go.gotmpl", size: 826, mode: os.FileMode(420), modTime: time.Unix(1522341651, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.gitignore.gotmpl":                    templatesGitignoreGotmpl,
	"templates/Makefile.gotmpl":                      templatesMakefileGotmpl,
	"templates/README.md.gotmpl":                     templatesReadmeMdGotmpl,
	"templates/cmd/config/config.go.gotmpl":          templatesCmdConfigConfigGoGotmpl,
	"templates/cmd/gateway/handler.go.gotmpl":        templatesCmdGatewayHandlerGoGotmpl,
	"templates/cmd/gateway/main.go.gotmpl":           templatesCmdGatewayMainGoGotmpl,
	"templates/cmd/gateway/swagger.go.gotmpl":        templatesCmdGatewaySwaggerGoGotmpl,
	"templates/cmd/server/main.go.gotmpl":            templatesCmdServerMainGoGotmpl,
	"templates/docker/Dockerfile.application.gotmpl": templatesDockerDockerfileApplicationGotmpl,
	"templates/docker/Dockerfile.gateway.gotmpl":     templatesDockerDockerfileGatewayGotmpl,
	"templates/proto/service.proto.gotmpl":           templatesProtoServiceProtoGotmpl,
	"templates/svc/zserver.go.gotmpl":                templatesSvcZserverGoGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".gitignore.gotmpl": &bintree{templatesGitignoreGotmpl, map[string]*bintree{}},
		"Makefile.gotmpl":   &bintree{templatesMakefileGotmpl, map[string]*bintree{}},
		"README.md.gotmpl":  &bintree{templatesReadmeMdGotmpl, map[string]*bintree{}},
		"cmd": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"config.go.gotmpl": &bintree{templatesCmdConfigConfigGoGotmpl, map[string]*bintree{}},
			}},
			"gateway": &bintree{nil, map[string]*bintree{
				"handler.go.gotmpl": &bintree{templatesCmdGatewayHandlerGoGotmpl, map[string]*bintree{}},
				"main.go.gotmpl":    &bintree{templatesCmdGatewayMainGoGotmpl, map[string]*bintree{}},
				"swagger.go.gotmpl": &bintree{templatesCmdGatewaySwaggerGoGotmpl, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"main.go.gotmpl": &bintree{templatesCmdServerMainGoGotmpl, map[string]*bintree{}},
			}},
		}},
		"docker": &bintree{nil, map[string]*bintree{
			"Dockerfile.application.gotmpl": &bintree{templatesDockerDockerfileApplicationGotmpl, map[string]*bintree{}},
			"Dockerfile.gateway.gotmpl":     &bintree{templatesDockerDockerfileGatewayGotmpl, map[string]*bintree{}},
		}},
		"proto": &bintree{nil, map[string]*bintree{
			"service.proto.gotmpl": &bintree{templatesProtoServiceProtoGotmpl, map[string]*bintree{}},
		}},
		"svc": &bintree{nil, map[string]*bintree{
			"zserver.go.gotmpl": &bintree{templatesSvcZserverGoGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
