// Code generated by go-bindata.
// sources:
// templates/.gitignore.gotmpl
// templates/Makefile.gotmpl
// templates/README.md.gotmpl
// templates/cmd/config/config.go.gotmpl
// templates/cmd/gateway/handler.go.gotmpl
// templates/cmd/gateway/main.go.gotmpl
// templates/cmd/gateway/swagger.go.gotmpl
// templates/cmd/server/main.go.gotmpl
// templates/docker/Dockerfile.application.gotmpl
// templates/docker/Dockerfile.gateway.gotmpl
// templates/pb/service.proto.gotmpl
// templates/svc/zserver.go.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGitignoreGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xca\xcc\xe3\x02\x04\x00\x00\xff\xff\x0c\xbf\xc6\xec\x04\x00\x00\x00")

func templatesGitignoreGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGitignoreGotmpl,
		"templates/.gitignore.gotmpl",
	)
}

func templatesGitignoreGotmpl() (*asset, error) {
	bytes, err := templatesGitignoreGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.gitignore.gotmpl", size: 4, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x5b\x6f\xa3\x38\x14\x7e\x8e\x7f\xc5\xd1\x6c\x1e\x62\xad\x4c\xb4\xaf\x91\xa2\x5d\x26\x65\x52\x76\x5a\xa8\x08\x9d\x51\xa5\x95\x10\x01\x87\x58\x43\x30\x32\x26\xdd\x2a\xed\x7f\x5f\x19\x9b\x6b\xd3\xbd\x68\xe7\x21\x63\x9f\xeb\x77\xbe\xe3\x73\xe8\x43\xe0\xff\xee\x6c\xc2\x28\xf0\xfd\x10\x66\xb3\xd9\x6c\xb5\x86\xcb\x05\xd8\x01\xac\x80\x73\x09\x6f\x6f\x97\x4b\x77\x5c\xaa\xb3\x17\x9f\xa8\x16\xd3\xbc\x32\xa7\xa1\xb0\x48\xe1\xed\x0d\x7d\x7e\x74\xef\x6e\xa2\x07\x3b\xbc\x85\x36\xec\x9e\x15\xe8\xc6\xdf\x7c\x75\x82\x2f\xee\x9d\xa3\x75\x8d\x62\xbe\xd8\x3c\x06\x37\x6e\x80\x97\x29\x4f\x7e\x50\x81\xd0\x4f\x90\xf0\xe2\xc0\xb2\x5a\xc4\x92\xf1\x02\x0e\x5c\x00\x3b\xc5\x19\x85\x22\x3e\xd1\x0a\x3d\xee\x9c\xc0\xb3\xef\x1d\x18\xfc\x6b\x02\x29\x05\x46\x5b\x37\x8c\x36\xfe\xfd\xbd\xab\x4b\xd2\x39\xaa\x23\xcd\x73\xc8\x98\x84\x94\x56\x89\x60\x7b\x0a\x84\xa4\x4c\xc8\x97\x35\xa9\x8b\xaa\x2e\x4b\x2e\x24\x4d\x81\x90\x38\x7f\x8e\x5f\x2a\x78\x7d\x05\x9a\x1c\x39\x94\x82\x92\x84\x9f\x4e\x4c\x62\xe4\xde\xdb\x5b\x27\xfa\xe6\x04\x3b\xd7\xf7\x54\xe8\x5f\xdb\xac\x0a\x0e\x26\x29\x3d\x93\xf9\xa2\xcf\x8f\xaf\xd7\x52\x51\x71\xa6\x42\x31\x12\x8b\x17\x88\x8b\x54\x57\x87\x76\x4e\xf0\xcd\x09\xa2\xcf\xae\x67\x07\x4f\xd0\x22\xef\xb9\xc4\x4b\xed\xd9\x1a\x1a\x0e\x8d\xdd\xb0\x97\x78\x99\x9c\xd2\x89\x75\x03\x7e\xd2\x63\x9a\xb1\x4a\x8a\x97\xb6\xcf\xfd\x75\xd9\xf5\x72\xd0\xdf\xd5\x7c\x31\x62\x00\xb7\xa1\xfb\xbe\x82\xc6\x32\x69\x34\x5e\xde\x34\xad\x3d\xb0\x9c\x5a\x06\x95\x81\xf0\x9d\xc9\xe3\x36\x96\xf4\x39\x56\x69\xaf\xd2\x95\x19\xf5\x3b\xbe\xb6\x76\xe8\x7c\xb7\x9f\xfe\x8e\x30\xe3\xdb\x99\xfe\x13\x65\x53\xfb\xff\x4f\x1a\x31\x21\xdf\x93\xd7\xe6\xf8\x4f\xec\xb5\x00\xfb\x59\xbb\xca\x99\x3c\x52\x28\x05\x97\x7c\x5f\x1f\x20\xa3\x85\xe4\x3c\x47\xbb\x60\xa3\x2a\x8d\x7c\x2f\xba\xf5\x77\xa1\x1e\x9c\xe1\x78\xa4\x4c\xa8\x09\x83\xf9\x22\xde\x57\x65\x2c\x8f\x30\x5f\xe4\x71\x25\x9f\xb9\x48\x61\xbe\xb8\xb7\xbf\x3a\x0d\xaa\x3b\x77\x17\x62\x8c\x71\x17\xd1\xf5\xa2\x8d\xef\x85\xb6\xeb\x39\x81\x0a\xb8\xcc\xf8\xb2\x12\xc9\x72\x42\xb1\x59\x00\x51\xf0\xe8\x79\x4e\xd0\x8e\xae\x72\xd0\xa3\x0f\xa2\x2e\x80\x10\x71\xfa\xc0\xf0\xe7\x35\x90\x33\xcc\x17\x93\x42\xf0\xaa\x17\x0d\x91\x74\xf9\xb6\x8e\xe7\x04\x76\xe8\x07\x5d\x3e\x56\x1c\xf8\x3e\xe7\x7f\x26\x92\x2f\x0d\x3d\xab\xf3\x2f\x68\x6c\x08\x43\x86\x46\x88\x70\x2f\xe8\x5c\x3e\x18\xf6\x7d\xcd\xf2\x94\x15\x19\xf0\x02\x8e\xbc\x92\x70\x8a\x93\x23\x2b\x28\xda\xfa\xd1\xc6\xde\xdc\x8e\xb6\x58\x93\x8b\x94\x3f\xb2\x94\x89\xe9\x4b\xe6\x24\x89\x93\x63\xe3\xa7\xe5\x5f\xee\xec\xed\xae\xdb\x42\x6d\x38\x0c\x84\x01\x39\x2b\xb3\xd0\xd9\x85\xbd\x95\x32\x23\x67\x20\x09\x57\xe3\xb7\xf5\xa3\x07\x7b\xf3\xd5\xde\x3a\x5a\x39\xda\x92\x1c\x72\x56\x49\xb0\x96\x96\x65\xc1\x2b\x64\x82\x96\xca\xf5\x4c\x8b\x94\x0b\x8c\x90\xf5\x70\xeb\x7b\x4f\x2b\x88\xf3\x1c\xc5\x79\xbe\x32\x9a\xfe\xc5\xe9\x19\x27\xba\xab\x57\x27\xbd\x9d\xea\xde\xa6\x7d\xce\x6d\xf0\xc3\x49\xa2\xc3\x49\xae\xd0\xec\xb7\x8c\xab\x9b\x2e\xb2\x45\x3d\x80\x21\x69\x25\x91\xfa\xd1\x4e\x8d\xbd\xba\x6a\x87\x9e\x05\xfc\x61\x04\x83\xb7\xe9\x15\x1a\x5e\x4c\xf6\xe6\xac\xbd\x07\xdc\x63\x20\x5c\xbd\xc6\xe1\xda\xc6\xbd\xa0\xe9\xdb\xbb\x1c\xe6\x23\x37\xba\xa9\x2c\x66\x02\x74\x26\x72\xe8\xc3\xf4\xdb\x00\x03\x91\xbd\xbc\xd9\x26\x18\xac\x0f\x36\xa9\x49\x8b\x5a\x9e\xff\x75\x39\xe3\xad\x8a\x07\x92\x49\x41\xe3\x0e\xa2\xf1\xf5\x7a\x49\xef\x57\x9e\xa9\x69\xb4\x6f\x4d\x51\xe6\x41\x5c\x2e\x64\xba\x77\x3b\x08\x65\x5d\x1d\x91\xfa\x19\xa4\x53\xd7\x29\x4b\xd7\x29\x9a\xba\x8c\x41\x0c\x11\xb4\xa7\x2e\xaf\x79\xe8\xa8\x3d\xa8\xfc\xf3\x45\xbf\x0b\xe0\x0f\x34\x23\x24\xe3\x11\xaf\xe5\xba\xcc\xeb\x8c\x15\xd5\x3a\x13\x65\xb2\xb2\x94\xea\x0a\x1e\xa2\x00\x11\xa2\x6c\xda\x4f\x46\xe3\x9c\xf3\x4c\xf2\x4a\xa6\x54\x88\xb5\x14\x35\xed\x02\x28\x48\xc6\xe9\x1c\xe7\x2c\x8d\x25\x6d\x1c\x3e\xe5\x71\x91\xad\x33\xbe\xb2\x3e\x69\x14\xd5\x73\x9c\x65\x54\x34\xca\x95\xf5\xee\xb3\x57\xee\x9b\x3f\x14\x58\x42\xad\xa6\x9a\xbe\xc1\x7a\xaa\x91\xfe\xaf\x61\x98\x96\x40\x8b\xaa\x16\x14\x88\x96\x12\x5e\xe4\x2f\x53\x0f\x52\x97\x0a\x0d\x1a\xdd\xc6\xfe\xe8\xaf\x00\x00\x00\xff\xff\x35\x18\x3b\x25\x7a\x0a\x00\x00")

func templatesMakefileGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileGotmpl,
		"templates/Makefile.gotmpl",
	)
}

func templatesMakefileGotmpl() (*asset, error) {
	bytes, err := templatesMakefileGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/Makefile.gotmpl", size: 2682, mode: os.FileMode(420), modTime: time.Unix(1524173308, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesReadmeMdGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x54\x4d\x6f\xdc\x36\x10\xbd\xf3\x57\x0c\xe0\x4b\x0d\x34\xda\x38\x06\xfa\x91\x9b\x8b\xb8\x41\x0f\x69\x83\x38\x48\x0e\x46\x11\x8f\xa4\x27\x89\x05\xc5\x61\x39\xa3\xdd\x08\x41\xfe\x7b\x41\x4a\xde\x3a\x39\xed\x42\xf3\xf1\xde\xcc\x7b\xc3\x0b\xfa\xf2\x85\x9a\x3f\x79\x06\x7d\xfd\xea\xdc\xa7\xf7\x93\x57\x1a\x11\x91\xd9\xd0\xd3\xbb\xdb\x9b\x57\x6f\x6e\x9b\xb9\xa7\xc1\x07\x50\x10\x51\x84\x95\x06\x09\x41\x4e\x4a\x4c\xf7\x49\xd2\x12\x38\x93\x61\x4e\x81\x0d\x7f\xff\x30\x99\x25\x7d\x79\x38\x8c\x5e\xad\x19\xbd\x4d\x4b\xdb\x74\x32\x1f\xde\x2e\x39\x05\xfc\x26\x62\xd3\xe1\xea\xf9\xaf\xd7\x57\x57\x6d\xfb\xfc\xfa\xa7\xab\xe1\xfa\x45\xff\xcb\xcf\xfc\xe2\xb2\xf9\xe4\xdc\x5f\x11\x94\x38\xf3\x98\x39\x4d\x24\x03\xa5\x2c\xff\xa0\x33\xea\xa1\x5d\xf6\xc9\xbc\x44\x1a\x05\x4a\x13\x32\x1a\xe7\x2e\x2e\xe8\x35\xcc\x7c\x1c\xe9\xce\x38\x1b\x7a\xe7\xde\x4f\x50\x90\x8f\x6a\x79\xe9\x4a\x85\xd2\xc9\x87\x40\x23\x8c\x56\x59\x88\xa9\x93\xb4\x96\xee\x36\xe1\x8c\xb0\x24\xe2\xd8\x53\x5e\x62\x2c\xdd\x24\x96\xdc\x4c\x41\x3a\x0e\x34\x73\x37\xf9\x08\x1a\x24\x53\x8f\x23\x82\xa4\x19\xd1\x6a\x85\x41\x2b\x7e\x5a\x72\x12\x85\x36\x74\x07\x50\x8f\x14\x64\xad\x49\xa5\x28\x8a\x41\x4b\xd3\x49\x4e\x64\xb2\x87\xbf\x21\x20\x91\x98\x82\x3f\x82\x74\x55\xc3\x5c\xa7\xbb\xa0\xb7\x19\x19\xff\x2e\x5e\xbd\x41\x9d\xfb\x38\xb1\x91\x4d\x3e\x8e\x5a\x87\x89\x40\x5f\x1a\x96\x71\x39\x84\xda\x51\x65\xb0\x13\x67\x54\x7a\x3b\xe0\x93\x78\xe9\xfc\xf0\xf0\xe0\x5e\x17\x2c\x7c\xe6\x39\x05\x68\xfd\x52\x01\xff\xd8\x32\x7d\x1c\x9d\xbb\x21\x35\xa4\x67\xed\xfa\xac\xfc\x92\x22\xfb\x32\xc6\x70\x2e\x23\xab\x7c\x10\x42\x65\x33\xf1\x11\x05\xad\xac\x9a\xbf\xd9\x14\xe2\xd1\x67\x89\xf5\xff\xbe\xe3\xc6\xb9\x3b\x5e\xe9\xb4\x4d\x84\x0a\xb5\x29\xd5\xe2\x29\xc5\x12\xdb\xf1\x36\x96\x37\x45\x27\x24\xb0\xed\x69\x4b\x34\x1f\x68\xf0\xd1\xeb\x84\x7e\x4b\xba\x8d\x3d\x9d\xbc\x4d\xc4\xf1\xb1\xba\x10\x1f\x77\xb7\xa8\xcc\xa0\x9e\x8d\x49\x16\x7b\xf4\xc2\xb6\x78\x92\x4c\x8b\x96\x24\xbf\x89\x57\x64\x31\x0b\x45\xd4\x59\x36\xd3\xbd\x3a\xcb\xeb\xdc\x4d\xdf\x13\xf7\xbd\x2f\x56\xe3\xb0\x4b\xcd\x6d\xe9\xfb\xbd\xda\x5e\x89\x53\x0a\xbe\xe3\x92\xdc\xd0\x1b\x5e\x5b\x50\xf0\x6a\x1b\xa1\x4e\xe6\x59\x22\x25\x6f\x03\x87\xa0\x54\xed\xd6\x2e\xe3\x58\x29\x5b\xb9\xca\xd1\x43\x37\x0e\xef\x76\xab\x16\xe6\xc5\x84\xea\xdc\xed\xe7\x14\xd8\x9f\x5d\x96\x97\x58\xa3\xbc\x98\xcc\xf5\xa2\x6b\x5e\x1d\xaa\x92\x39\x3b\xed\xbc\xec\xff\xb7\xf5\xe8\x08\xfa\x80\xac\x5e\x62\x35\xc4\x47\xd0\xa2\xa0\xfb\x3b\xcc\x1f\x90\xb7\x6b\x7f\x79\x38\x28\xe6\x23\x72\x23\x79\x3c\x5c\xd6\xee\xc7\x73\x4d\x43\xbf\x57\x34\x3c\x7e\x53\xe2\x23\xfb\xc0\x6d\xc0\x8f\xa4\xd8\xf4\xbd\x37\x1e\xeb\x7d\x54\x5a\x19\x49\xd4\x9b\xe4\xf5\xe9\x7b\x72\x7e\x4a\xca\x61\x1e\xf6\xb3\x39\x94\xc2\xcb\x86\xdc\x7f\x01\x00\x00\xff\xff\x07\x15\x93\x01\xcb\x04\x00\x00")

func templatesReadmeMdGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesReadmeMdGotmpl,
		"templates/README.md.gotmpl",
	)
}

func templatesReadmeMdGotmpl() (*asset, error) {
	bytes, err := templatesReadmeMdGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/README.md.gotmpl", size: 1227, mode: os.FileMode(420), modTime: time.Unix(1523468144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdConfigConfigGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x4b\xc4\x30\x10\x85\xef\xf9\x15\x8f\x9e\x14\xb4\xa9\xb7\x5d\x61\x0f\xe2\xc1\x8b\x88\xac\x88\xe7\xa1\x99\x74\x07\xd7\xa4\x24\xb1\x22\x35\xff\x5d\x1a\x0b\x95\x82\x20\x4b\x6e\x1f\xf3\xde\xfb\x48\x4f\xed\x2b\x75\x8c\xd6\x3b\x2b\x9d\x52\xad\x77\x31\xe1\x4c\x01\x5a\xe3\x89\xc3\xc0\xe1\xc6\x98\xc0\x31\x42\x22\xd2\x81\x61\xd8\xd2\xfb\x31\x81\x66\x6c\x7d\x28\xbc\xdb\x3f\xde\x22\x96\xc4\x05\xc4\xc2\x79\xf8\x81\x43\x10\xc3\x53\x34\xf6\xdc\x8a\x15\x36\x10\x57\xee\xed\x91\xba\xa8\xb0\x1a\xd9\xa1\x6a\xea\xf2\xae\xb7\xcd\xb6\xa9\x14\x30\x8e\x53\x5d\xfd\x22\xe9\x70\x47\x89\x3f\xe8\x13\x97\x39\xff\x18\xce\xe0\xbf\x8a\x73\xfc\x04\xcb\xd5\xd0\x2f\xcd\x4d\xb3\x29\x9a\x8b\xcd\xf3\xfe\x7e\x6d\x32\x21\x76\xa6\xf7\xe2\xd2\x1f\x3a\xf5\xb2\x32\x5d\xef\x50\xe9\x71\x44\xfd\x40\x6f\x8c\xaf\x52\x90\xb3\x1e\xae\xf4\xfc\x25\xec\x0c\x72\x56\xe7\xea\x3b\x00\x00\xff\xff\xfd\x76\x4f\x40\xc2\x01\x00\x00")

func templatesCmdConfigConfigGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdConfigConfigGoGotmpl,
		"templates/cmd/config/config.go.gotmpl",
	)
}

func templatesCmdConfigConfigGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdConfigConfigGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/config/config.go.gotmpl", size: 450, mode: os.FileMode(420), modTime: time.Unix(1524171642, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayHandlerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6e\xdc\x30\x0c\x40\x67\xf3\x2b\xd8\x9b\x6c\xc0\x95\xf7\x00\x37\x14\x69\x8b\x74\xe8\x25\x48\x03\x74\x28\x3a\x28\x32\x23\x0b\xb5\x29\x83\xa2\x73\x3e\x5c\xfd\xef\x85\x7c\xbe\x76\x29\x32\x49\x24\xc8\x47\x3e\x8e\xd6\xfd\xb2\x9e\x70\xb0\x81\x01\xc2\x30\x46\x51\x2c\xa1\xd8\xb9\xc8\x4a\xb3\xee\xa0\xd8\x31\x69\xd3\xa9\x8e\xf9\xef\x83\x76\xd3\xb3\x71\x71\x68\xbc\x8c\xee\x3d\xb9\x98\x4e\x49\x69\x0b\xbd\x55\x3a\xda\x53\x23\x13\x6b\x18\x68\xed\x88\xd1\xf7\x64\x7c\xec\x2d\x7b\x13\xc5\xaf\x95\x3b\xa8\x00\x9a\x06\x0f\x74\x3c\x9f\xd1\x1c\xec\x40\xf8\x1b\xbf\x91\xbc\x06\x47\xcb\x72\x67\xb9\xed\x49\x50\x48\x27\xe1\x84\x96\xf1\xee\xe9\xe9\x01\xbb\x2d\xaf\x9d\x55\x4c\x24\xaf\x94\x50\x3b\x42\xff\xf8\x70\x8b\xdb\x70\x78\x99\xd8\xfd\x1f\x8c\x7f\xc9\xa5\xd3\x19\x37\x47\x73\x7b\x79\x6b\xcc\x9b\x7d\x68\x5b\xc1\xa4\x12\xd8\xd7\x18\x47\x4d\x68\x8c\xd9\x7c\x4c\xe6\xd0\xd7\x69\xbe\x1f\x35\x44\xae\xb0\xcc\x77\x31\x1b\xb3\x46\x12\x89\x52\xe1\x19\x8a\x61\x9a\xf1\x66\x8f\xd7\xbe\x03\x1d\xaf\xad\x65\x66\x1a\x63\x2a\x28\xda\x60\xfb\xfb\x3c\xe1\x66\x8f\x3f\x7e\xe6\xe1\xe6\xe3\x25\x15\x22\x9f\xd7\xf8\x7b\xd0\xee\x0b\x27\x72\x93\x50\x59\x2d\x50\x90\x48\x2e\x1f\x9f\xcd\x23\xf9\x90\x94\xe4\x2d\xcd\xcf\x12\x87\x4f\xdc\x8e\x31\xb0\x66\xe5\x1a\x87\x69\xfe\xe7\x59\xe3\x75\x85\x0a\x8a\xf0\x92\xf7\xc7\x77\x7b\xe4\xd0\x67\x87\xe2\x72\xfd\x1c\xae\x6a\x50\x2c\x70\xcd\xad\x18\x0e\x3d\x2c\xf0\x27\x00\x00\xff\xff\x3f\xd4\x1f\xb5\x43\x02\x00\x00")

func templatesCmdGatewayHandlerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayHandlerGoGotmpl,
		"templates/cmd/gateway/handler.go.gotmpl",
	)
}

func templatesCmdGatewayHandlerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayHandlerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/handler.go.gotmpl", size: 579, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewayMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xb9\x6e\xdc\x30\x10\xad\xc5\xaf\x98\xa8\x08\x24\x40\x2b\x21\xad\x03\x17\xce\xe1\xb8\xb0\x8d\x85\xed\x24\x45\x90\x62\x2c\x8d\xb8\x8c\x29\x52\x19\x52\x7b\xc0\xd9\x7f\x0f\x48\x69\x2f\x3b\xa9\xa8\x39\xf4\xf8\xde\x9b\x61\x8f\xf5\x13\x4a\x82\x0e\x95\x11\x42\x75\xbd\x65\x0f\x99\x48\xd2\xda\x1a\x4f\x6b\x9f\x8a\x24\x6d\x35\xca\x70\x6a\x1b\x0f\x43\xbe\x5a\x78\xdf\x87\x6f\xa9\xfc\x62\x78\x2c\x6b\xdb\x55\x92\xfb\x7a\x46\xb5\x75\x1b\xe7\x69\x0a\x25\x7a\x5a\xe1\xa6\xe2\xc1\x78\xd5\xd1\x8b\x3f\x94\x69\xed\xa3\xb6\x6b\xdb\x93\xa9\xd0\x6b\x74\x33\xec\xfb\x99\xb7\x56\x3f\x29\x5f\xc9\x55\x2a\x72\x21\x96\xc8\x81\xd0\x3d\xf1\x92\xf8\xa2\x69\x18\xc0\x79\x56\x46\x8a\xe4\xcb\x08\x1f\x93\xbb\xdc\xfd\x0a\xa5\x24\xfe\xa4\x0e\x7d\xb9\x10\xed\x60\xea\xa8\x31\xcb\xe1\x59\x24\x55\x05\x35\x13\x7a\x82\xab\x87\x87\x39\x2c\xd0\x34\x9a\x18\x5a\xcb\x30\x51\x16\x09\x31\x5f\x4d\xf9\xb3\x73\x98\x14\x94\xdf\x95\x5f\xcc\xd9\x7a\xfb\x99\xd9\xee\x1a\x32\xb9\x2a\x63\xf2\x86\x9c\x43\x49\xc7\xb5\x5c\x24\x2e\x52\x9f\xe2\x02\x88\x23\xe2\x2d\xad\x9e\x9f\xa1\xbc\xc5\x8e\xe0\x0f\x04\x79\xaa\x26\xd8\x6e\x77\x98\xd3\x00\xca\x0f\x58\x3f\x49\xb6\x83\x69\xb2\xbc\x80\x83\x0d\x11\xe8\x70\x49\x55\x45\xb9\x3d\xa0\xd6\xf0\x38\x78\xf0\x8c\x4a\x2b\x23\x21\xad\x52\xb0\x06\x94\xa9\x6d\x17\x62\xa6\xdf\x03\x39\xef\x5e\x10\x83\x73\x08\x53\x2d\xef\x03\xca\x9c\xa9\x55\xeb\x4c\x24\x49\x6d\x4d\xab\x64\x39\x59\xfd\xf5\xee\xfa\xc7\x99\x26\x93\xbd\x4a\xe7\xb3\x77\x3f\x0b\x91\xbc\x10\x2b\x92\x5c\x24\xaa\x8d\x9a\xdf\x9c\x83\x51\x3a\xd8\x9f\x68\x2b\xcb\x4b\xf4\xa8\xb5\xc9\x88\x03\xfd\x6d\x54\xd0\x61\x3f\x4e\x84\x4c\xd3\x5b\x65\xbc\x03\x6f\x77\xe3\x71\x22\xe9\x86\x75\xb0\x2e\xf2\xbc\xa5\x55\x34\xe3\x66\x58\x67\x79\x2c\x95\xe3\xad\xaf\xb9\x15\x70\xc2\xea\xa4\xfb\x72\x30\x75\x96\x56\x6e\x5c\x9b\x2a\x2d\x60\xda\xa0\x53\x6b\xc3\xff\x7b\x22\xc1\x4e\xbf\xa0\xdd\xae\x00\x36\x0d\x93\x73\x22\x89\xc4\xae\x95\xf3\x64\x2e\x4c\x13\xe9\x65\x47\x4b\x5a\x40\x37\xac\x73\xb1\x9d\xf6\x51\x19\xe5\xf7\xfb\xd8\x50\x8b\x83\xf6\x7b\xcc\x25\xea\x81\xdc\x7b\xb0\xbd\x57\xd6\xa0\xd6\x1b\x18\x75\x0d\x4c\x0d\x2c\x15\x42\x6d\xbb\x0e\x4d\x33\xd3\xca\x10\x84\x37\xea\x44\x12\x8e\x38\x41\x23\xbf\x21\x67\x6f\x8f\xd7\x25\x1d\x4d\x48\x8b\x09\xa8\x3c\x14\xc9\xb9\x02\xd2\x49\x06\xd8\x76\x54\x77\x37\xff\x38\x19\x97\xe6\xaf\xa1\x4f\x74\xa5\x13\xed\x03\xf8\x51\xf9\xdf\xe8\x93\xce\xff\x5f\x70\x78\xc9\x81\xfb\x18\xcc\x1a\x15\x04\xa4\x6e\x81\x4c\xe1\xa3\x51\x4c\xb5\xb7\xbc\xd9\xe1\x4e\x8d\xe5\x2f\x67\x0d\xb4\x4a\xd3\x1e\x7a\x8e\xec\x28\x0b\xf6\xff\x0d\x00\x00\xff\xff\x6e\x34\x43\x62\xf5\x04\x00\x00")

func templatesCmdGatewayMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewayMainGoGotmpl,
		"templates/cmd/gateway/main.go.gotmpl",
	)
}

func templatesCmdGatewayMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewayMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/main.go.gotmpl", size: 1269, mode: os.FileMode(420), modTime: time.Unix(1524171642, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdGatewaySwaggerGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xc1\x4a\xc3\x40\x10\x86\xcf\xd9\xa7\x18\x16\x84\x54\xcb\xe6\x2e\xf4\x26\x52\xc4\x43\x68\x2b\x9e\x97\x3a\xd9\x8c\xa6\x93\xed\xcc\xd4\x08\xe2\xbb\xcb\xa6\xf1\xe2\x6d\x98\x7f\xbf\x9d\xef\xcf\xf1\xf8\x11\x13\xc2\x29\x12\x3b\x47\xa7\x3c\x8a\x41\xed\x2a\x3f\x8c\xc9\xbb\xca\x33\x5a\xd3\x9b\xe5\x32\xe7\x68\x7d\xd3\xd1\x80\x65\x28\x0b\x35\x21\x4e\xea\xdd\xca\xb9\xa6\x81\xfd\x14\x53\x42\xd9\x46\x7e\x1b\x50\x40\xd0\x2e\xc2\x0a\x91\x61\x7b\x38\xb4\xd0\x2f\x7b\xeb\xa3\x81\xa2\x7c\xa2\x82\xf5\x08\x7a\xc5\x40\x33\x1e\x5d\x77\xe1\xe3\xbf\x8f\x6a\x99\xa0\x28\x84\x1d\x6a\x1e\x59\xf1\x55\xc8\x50\xd6\x20\x78\x86\xdb\x25\x39\x5f\x50\x6d\x05\xdf\xae\xca\x70\xbf\x81\xc5\x2c\x1c\x84\x4e\xad\x60\x47\x5f\xb5\xe0\x39\xbc\xec\x9e\x43\x1b\xad\x5f\x83\x6f\x96\xb3\x8d\x5f\x15\x66\x03\x7f\xc5\xc2\xd3\x48\x5c\x2f\x0a\x0f\x24\x6b\xc8\xf3\x8b\xbb\x0d\xf8\xb0\x40\xe1\x5d\x47\xf6\xae\x1a\xc6\x14\x5a\x21\xb6\xae\xf6\xa5\x11\x71\x82\x1b\xf5\x57\x64\x36\xdb\x97\x9e\x8f\x34\x60\x2d\xd3\x6c\x3c\x67\x3f\xee\x37\x00\x00\xff\xff\xcd\xd6\xe8\xba\x78\x01\x00\x00")

func templatesCmdGatewaySwaggerGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdGatewaySwaggerGoGotmpl,
		"templates/cmd/gateway/swagger.go.gotmpl",
	)
}

func templatesCmdGatewaySwaggerGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdGatewaySwaggerGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/gateway/swagger.go.gotmpl", size: 376, mode: os.FileMode(420), modTime: time.Unix(1523908338, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCmdServerMainGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x8a\xdb\x30\x10\x3d\x4b\x5f\x31\xf5\xa1\xd8\xe0\xc8\xf7\x5d\x72\x68\x97\x16\x0a\x65\x59\x36\xb4\xd7\xa2\x95\xc7\x8a\xa8\x2c\x99\x91\x92\x10\xd2\xfc\x7b\x91\xac\x6c\xcc\xd2\xc2\xe6\x62\x81\x66\xe6\xbd\xd1\x7b\x2f\x99\xa4\xfa\x2d\x35\xc2\x28\x8d\xe3\xdc\x8c\x93\xa7\x08\x35\x67\xd5\x60\xa5\xae\x38\xab\x1c\xc6\x74\x68\x13\xb7\xbb\x17\xa1\xfc\xd8\x69\x9a\xd4\x0a\x95\x0f\xc7\x10\x71\xec\xb4\x5f\xe5\x9b\xd1\xf4\xbd\xc5\x83\x24\xbc\xb5\xbf\xb3\x5e\x6b\xe3\x74\x3a\x69\x17\x6e\x1e\xdf\x4b\x6b\x7a\x19\x3d\xbd\x99\x0c\x86\x76\x53\x40\xb7\xc4\xf5\x5e\x5b\x14\xda\x5b\xe9\xb4\xf0\xa4\x33\x7c\xc5\x1b\xce\xf7\x92\xd2\xc3\x3f\xf5\x3d\x61\x08\x10\x22\x19\xa7\x53\x61\xd8\x39\x95\xf5\xa9\x1b\x38\x71\x96\x96\x45\x82\xbb\x35\xcc\xb0\xe2\x11\x0f\x75\xc3\x59\xd7\x81\x22\x94\x11\xc1\xe1\x01\xa2\x9a\xc0\x9a\x10\xd1\x21\x0d\x9c\x59\xd7\x02\x52\x9e\x72\x18\xc5\xf7\x5c\xa9\xab\xa8\xa6\xaa\x85\x42\xd9\x70\x66\x86\xdc\xf5\x61\x0d\xce\xd8\x44\x56\xd8\xc4\x57\x19\xa5\xb5\xae\x46\xa2\x86\xb3\xf3\x5b\x36\xfd\xfc\xf4\x00\x01\x69\x8f\x04\x07\x13\xb7\x70\x55\x07\xd4\x36\x59\xcb\x4a\xf5\x6e\x0d\xe9\xc5\x69\xe9\x4d\xbe\xa9\x39\x63\xf9\xe6\x87\x93\x74\xfc\xe6\x22\x92\xc2\x29\xfa\x5c\xc8\x95\x5f\x57\x30\xf1\x90\xc0\x72\xe7\x75\x9a\xa5\x65\x8a\x07\xc6\xbb\x05\x77\x2e\x66\x88\x57\x8b\xc4\x62\x78\x49\xd6\xb4\x17\xa4\x12\x86\x7f\xc2\x14\xc5\xff\x83\x71\xf5\xe3\x8b\x8b\x74\xac\x67\xed\x9a\x19\x3a\x7f\xd3\x67\xb6\x8a\x50\x27\x0f\x28\xab\x66\x14\x82\x19\x27\x8b\x23\xba\x38\x3f\x22\xab\x18\xb7\x98\xd5\x2a\xd2\x72\x16\x5e\x5d\x0c\xfb\xac\xe1\x67\x19\x8c\x2a\x52\xdc\xe4\xdf\xf4\x22\x9e\xcb\x0a\xa7\x13\x88\x47\x39\x22\xfc\x81\x4d\x59\xe6\x7c\x2e\x98\x33\x71\x0b\x8b\x70\x24\xf2\x7c\x2b\x72\x4f\x6d\x5d\x73\xff\x4e\xd6\x73\x09\xb3\x71\x26\xce\x61\xee\x3a\xe8\x71\x90\x3b\x1b\x2f\xf1\x91\x73\x18\xef\xc1\x4f\x49\x08\x69\xed\x11\x02\x46\xd8\x1b\x09\xca\x8f\xa3\x74\xfd\xca\x1a\x87\x90\xfe\x20\x02\x67\xe9\x10\x9b\xfc\x63\xf9\x29\xa9\xfe\x58\xc2\xdc\x42\x55\x90\xaa\x16\x94\x77\x83\xd1\xf3\xbe\x74\x6d\xc8\xf2\x2e\x92\x7b\x19\x68\x0a\xea\x93\xa4\x80\x75\xc3\xcf\xfc\x6f\x00\x00\x00\xff\xff\x97\x9b\xf8\x10\xa6\x04\x00\x00")

func templatesCmdServerMainGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesCmdServerMainGoGotmpl,
		"templates/cmd/server/main.go.gotmpl",
	)
}

func templatesCmdServerMainGoGotmpl() (*asset, error) {
	bytes, err := templatesCmdServerMainGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cmd/server/main.go.gotmpl", size: 1190, mode: os.FileMode(420), modTime: time.Unix(1524171642, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileApplicationGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcf\x41\x4b\xc3\x30\x18\xc6\xf1\x7b\x3e\xc5\xc3\x76\x6e\xd2\x5d\x27\x3d\xe8\x56\xc7\x50\x9b\x11\x27\x32\x44\x24\xed\x62\x0d\xa4\xc9\x48\x52\x71\x8c\x7e\x77\xa9\xad\x30\x10\xd9\x2d\x09\xe1\x7d\x7f\xff\x29\xca\x56\x9b\x3d\xe2\x87\x42\x50\xfe\x53\x79\x94\xda\x4a\x7f\x24\xb7\x82\x3f\xa0\x76\x46\xda\x7a\x3e\xa3\xb3\x94\xa6\x90\x61\xf8\xad\x3c\x79\xe6\xe2\x6e\xb9\x16\x60\xb5\x63\xc1\x57\xec\x74\x02\x15\xce\x45\x74\xdd\xcf\xb9\x90\x8d\x42\xd7\x91\x05\xdf\xec\x40\x41\x89\x78\x2a\xb0\x58\xf1\xb7\xbc\xb8\xbe\xb9\xcf\x97\x59\x8a\x15\xe7\x8f\x99\xd1\xb6\xfd\x42\xed\x46\x46\xe2\xfa\xf5\x6c\x94\x50\x56\x35\xfb\xf1\x42\xc8\x14\x95\x3b\x1c\xff\x4a\xf1\xee\x5d\xf3\x0b\x43\x88\xb2\x56\x57\xf0\xad\xfd\xaf\x49\x9a\x83\xb6\x6a\x6e\x64\x54\x21\xf6\x4d\xbe\xb5\xf6\x3c\xa9\xd4\x76\x70\x27\x49\x3f\x3a\x4b\x2f\x55\xb2\x73\x33\xc9\x8b\xad\xd8\x6d\xf8\xba\xd8\xe2\x65\x32\xbc\x4e\x5e\xbf\x03\x00\x00\xff\xff\x1d\x6e\xd7\xb3\x68\x01\x00\x00")

func templatesDockerDockerfileApplicationGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileApplicationGotmpl,
		"templates/docker/Dockerfile.application.gotmpl",
	)
}

func templatesDockerDockerfileApplicationGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileApplicationGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.application.gotmpl", size: 360, mode: os.FileMode(420), modTime: time.Unix(1524171720, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerDockerfileGatewayGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xce\x41\x4b\x03\x31\x14\x04\xe0\x7b\x7e\xc5\x50\xcf\x9b\x6c\xaf\x85\x3d\x68\xbb\x96\xa2\x26\x25\x56\xa4\x88\xc8\xdb\x36\xc6\x40\x36\x91\x6c\x16\x2d\x65\xff\xbb\xd4\xb6\xa0\xa7\xde\xde\x1b\x06\xe6\xbb\x42\xd3\x3b\xbf\x45\xfe\x30\xb0\x94\xcd\x17\xed\xd0\xb8\x40\x69\xc7\x6e\xb5\x7a\x80\x8d\x9e\x82\x9d\x8c\xf9\xb8\xe4\x25\xa8\x3b\xd6\x4d\x62\xcf\x4a\xdf\xcd\x16\x1a\xc2\x46\xd1\xa5\x8d\xd8\xef\xc1\x75\x8c\x19\xc3\xf0\x7b\x4b\x6a\x0d\x86\x81\x4d\xd5\x72\x0d\x0e\xce\xf4\x93\xc4\x74\xae\xde\x6a\x79\x7d\x73\x5f\xcf\xaa\x12\x73\xa5\x1e\x2b\xef\x42\xff\x0d\x1b\x4f\x8e\x22\x1e\xe6\xc5\x99\xc2\xc5\xa6\xdd\x9e\x3f\xc6\x2e\x69\xc9\x7f\xba\x60\x26\x9e\xb2\xe9\xf2\x41\x9b\xfa\x10\xfe\x62\x1b\x17\x8e\xa2\xa2\x78\x4f\xb1\xad\xca\x4b\x7e\xf1\x4f\xc3\x6a\xb9\xd2\xeb\xa5\x5a\xc8\x15\x5e\x46\xa7\x78\xf4\xfa\x13\x00\x00\xff\xff\xa0\xad\x45\xbf\x45\x01\x00\x00")

func templatesDockerDockerfileGatewayGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerDockerfileGatewayGotmpl,
		"templates/docker/Dockerfile.gateway.gotmpl",
	)
}

func templatesDockerDockerfileGatewayGotmpl() (*asset, error) {
	bytes, err := templatesDockerDockerfileGatewayGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/docker/Dockerfile.gateway.gotmpl", size: 325, mode: os.FileMode(420), modTime: time.Unix(1524171642, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPbServiceProtoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x4f\x6f\xe3\x36\x10\xc5\xef\xfa\x14\x53\x9f\x36\x40\x2c\xa1\xe8\x2d\x46\x0e\x45\x36\xdd\x06\x28\xba\x81\xb3\xe8\x1e\x8b\xb1\x34\x92\x88\x50\x1c\x96\x33\xb2\x63\xb8\xfe\xee\x05\x49\xc9\x11\x92\xa0\x05\x7a\x93\xf8\xe7\xcd\xe3\xe3\x8f\x23\x47\xa7\xf8\x02\xb7\xb0\xf2\x81\x95\x7f\x5a\x6d\x8a\xc2\x63\xfd\x8c\x1d\x81\x50\xd8\x9b\x9a\x36\x45\x61\x06\xcf\x41\x61\xd5\x31\x77\x96\xaa\xb4\x74\x37\xb6\x15\x0d\x5e\x8f\x65\xfa\x5d\x6d\xde\xae\x42\x6f\x2a\x74\x8e\x15\xd5\xb0\x93\xf7\xcb\x8c\xf6\xe3\xae\xac\x79\xa8\xec\xb1\xd5\xac\x5a\xaf\x3b\x72\xeb\x3d\x5a\xd3\xa0\x52\xf5\xee\xe3\x9d\xca\x62\x97\x1c\xb0\xeb\x28\x54\xec\x53\xc1\x0f\x8b\x17\x79\x12\x3a\xfe\x73\x3e\xe6\x2d\xac\x4e\x27\x30\x2d\x94\x5b\x66\x85\xf3\xf9\x74\xba\x7c\x56\xf1\xfb\x77\x1c\x28\x0f\x93\x95\xe9\x6b\x39\xe8\x9a\xb8\xd2\xef\x36\x7e\x17\x2b\x54\x15\x7c\xeb\x09\x2e\x8b\xfe\x86\xa7\x1c\x24\x9c\xcf\x73\xa6\xd7\xf0\x85\xf4\x0f\x0a\x12\xbd\x6c\x1f\xef\xae\x01\x5d\x03\xf3\xc0\x40\x22\xd8\x51\x54\x1a\xf0\x99\x60\xf4\x80\x20\x66\xf0\x96\x60\x25\x8a\x41\x29\xac\x80\x5e\x30\x8e\x94\xf0\xa0\x80\xd6\xf2\x41\x40\x7b\x82\x9f\xd5\xa2\xc0\xdd\x6f\x0f\xa0\x0c\x1d\x39\x0a\xa8\x04\xe8\xa2\x1a\xb9\x66\xad\xbc\x8e\x8e\xa7\xdd\xd0\x72\x48\xdb\x24\x16\xe2\x16\x1a\x1a\xd8\x89\x86\x94\x5b\x09\xbf\x10\x59\x68\x03\x51\x54\xab\x7b\x74\x1d\x41\x54\x5a\xd8\x57\x86\x1d\xa9\x52\x58\xcb\x68\x14\x7a\x3e\xc0\x91\xc7\x00\xfb\x3c\x6f\x5c\x07\x72\x14\xa5\xe1\x1a\x38\x40\x47\x0a\xc1\x34\xb1\x94\x51\x20\xa7\x26\x90\x3d\x96\x29\xb6\x5f\x29\x10\x60\x20\x10\x1e\x08\x7a\xb2\xbe\x1d\x2d\x04\x12\x1e\x43\x4d\x12\x2b\xa1\x69\xa2\x3a\x18\x97\x8b\xcc\x28\xc2\x5f\x23\x89\xde\x44\x95\x5e\xd5\xcb\x4d\x55\x2d\xf8\x32\xae\xe5\x9d\xe5\x17\xf6\xe4\x2a\x8c\x01\xad\x6b\x76\x8a\xb5\xca\x1a\xbd\xaf\x76\x96\x77\xd5\x80\xa2\x14\x32\x86\xd5\x3c\x9d\xc1\x59\xca\x36\xb4\x27\xcb\x9e\x82\x94\x19\xf4\x54\x21\x63\xc8\x76\xbd\x1b\xdb\x96\x82\x54\x0d\xd7\x52\xbd\xdb\xbc\xf0\xd4\x05\x5f\xaf\xa9\xe6\x9c\x4d\xfe\xed\x50\xe9\x80\xc7\xff\x5b\x4e\xf4\x68\x29\x27\x89\xde\x1f\x2f\xe1\xb4\xc6\x75\x3f\x64\x30\xbf\x7e\xfe\x7a\x03\xdf\x83\x89\x48\xbc\x86\x27\x75\x4f\x03\x5e\x58\xf8\x57\x74\xcb\x44\x77\x62\x33\x63\x2a\x89\xdd\xed\xe3\x9d\xc0\xc1\x58\x0b\x35\x0f\x9e\x85\x32\x8c\x8f\x0f\xaf\x84\x4d\xfb\x17\x46\x9e\x34\x8c\xb5\x8e\x81\xf2\x65\xf2\xc1\xbd\x7a\x9a\xd5\x4b\xb8\xc7\xba\x87\xf9\xc4\x90\x4f\x3c\x4f\x83\x11\xc0\xe4\x46\x06\xb4\x16\x2c\x77\xa6\xc6\x08\x4d\xcd\x21\x53\xe6\x5a\x0e\x43\xc2\xf9\x1a\xd2\xb5\x9a\xc4\x24\x46\x43\x86\x24\xae\x71\x38\x50\x6c\x3a\x23\x81\x47\x13\xa4\x2c\x66\xf9\x09\xf2\x2d\x89\x67\x27\x04\xa7\x02\x40\x34\x44\x81\x89\x6f\xb8\x85\x1f\x37\xc5\x79\x71\xaa\xcf\xd4\x1a\x47\xff\x9d\x64\xca\xcd\xa8\xc0\x40\xda\x73\x23\x8b\xd7\x16\xc5\x5e\x1f\x5c\x54\x8a\x16\xa3\xd5\x8f\x15\xdf\xbc\xc1\x94\xa6\xc3\xc1\xb8\x2e\x2a\xd5\xec\xf6\xf1\xa5\xc5\x46\x58\xcc\xc5\x3f\x16\x8a\xe7\x0b\xbe\x5e\xbe\xef\x4f\x13\x77\xf3\xcd\x94\xf7\xb1\xeb\x5f\x41\x20\x1d\x83\x13\xf8\xf4\x26\xa3\xab\x24\x02\x30\x35\xd5\xef\x46\xfb\x2f\x99\xeb\xd8\x26\xe7\x90\x1e\x03\xef\x4d\x43\x30\xa0\xf7\xc6\x75\x12\xfd\x1f\x88\x1c\x6c\xef\x9f\xbe\xc5\x46\xe5\xd9\x38\xcd\x6c\xcd\x96\xe7\x9c\x92\xfc\xd4\xc8\x67\x77\xe8\x4d\x19\xdf\xcc\x15\xdc\x4e\xf5\x21\xf6\x9a\x1b\x58\x55\xd3\x45\xad\xd2\xe8\x79\x73\x69\xd9\x05\xc0\xb9\x38\x17\xff\x04\x00\x00\xff\xff\x60\x56\x3b\xb4\x03\x07\x00\x00")

func templatesPbServiceProtoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPbServiceProtoGotmpl,
		"templates/pb/service.proto.gotmpl",
	)
}

func templatesPbServiceProtoGotmpl() (*asset, error) {
	bytes, err := templatesPbServiceProtoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/pb/service.proto.gotmpl", size: 1795, mode: os.FileMode(420), modTime: time.Unix(1524171642, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSvcZserverGoGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x4f\x6f\xdb\x46\x10\xc5\xcf\xe1\xa7\x78\xe0\xa1\x90\x02\x99\x4a\xaf\xb9\x29\x96\x6c\x18\x75\x2d\xc3\xb1\x53\xf4\xb8\x24\x87\xe2\x22\xe4\x2e\xbb\x3b\x94\x4c\xa8\xee\x67\x2f\x66\x49\xea\x4f\xed\xba\x40\x11\x1f\x4c\x91\x9a\xf9\xcd\xcc\x9b\xc7\x55\xa3\xb2\xef\x6a\x43\xf0\xdb\x2c\x8a\x74\xdd\x58\xc7\x98\x44\x1f\xe2\xcc\x1a\xa6\x67\x8e\xa3\x0f\x71\x51\x87\x0b\xeb\x9a\xe2\x68\x1a\x45\xf3\x39\xfe\xfa\x91\x7f\xef\x02\xb1\xc0\x97\x87\x9b\xd5\x15\x96\xab\x6f\xab\xdb\xf5\xfd\xaf\xab\xbb\x47\x5c\x3f\xdd\x2c\x57\xff\x9e\x13\xcd\xe7\xc2\x7c\x5c\x2f\xd7\x9f\xb1\x7a\x66\x32\x39\xb8\x24\xec\xf7\x48\xee\x54\x4d\xf8\x13\x5f\xc9\x6d\x75\x46\x78\x79\x81\x1f\x3e\xa6\x1d\x72\x2a\xb4\xd1\x66\x03\x43\x3b\x3c\xdc\x5f\x7a\x28\x93\x0b\x4a\x99\x1c\x35\x79\x2f\x4a\x71\xd7\x90\x87\x36\x01\xd9\xa4\xf3\x21\x3f\x69\x9c\x65\x8b\x42\x57\x94\xe0\xb1\x24\x4f\x07\xc2\x98\xea\x05\x95\xd9\xba\xb1\x9e\x42\xf6\xe2\xfe\x06\x85\x75\xe8\x6c\xeb\xc6\x3e\x12\x2c\x0a\x26\x87\xda\xe6\xba\xe8\xa4\x99\x50\x27\xc0\x7d\x56\x52\xad\xa4\xb6\x90\xfe\x59\x7b\x86\x4c\x55\x15\xe2\x5a\x7d\x1f\x12\xd2\xb6\x88\xc1\x16\x8e\x36\x64\xc8\x29\xa6\x23\x2c\x6d\x8b\xd0\xac\x4f\x84\x75\xd4\xeb\xd2\x91\xc4\x29\x03\x5d\x37\x15\xd5\x64\x58\xb1\xb6\x06\xb6\xf8\x0f\x11\xc9\x09\x45\x1b\x26\x57\xa8\x2c\xa8\xa0\xfd\xf1\x1e\xda\x63\x6c\x23\x17\xb5\xcf\x5a\x11\x59\x74\x45\x2e\xe8\x45\xcf\xda\xb3\xef\x69\x5e\xe7\xf4\x4a\xea\x34\xd9\x9c\x48\x8d\xb8\x2f\x1f\xc3\xb3\x6b\x33\x86\xaa\x1c\xa9\xbc\x13\xfa\x56\xe7\x24\x4b\x08\xb0\x57\x03\xbd\x37\xcc\x49\xe7\x43\xdd\x19\xd2\x96\x61\x4d\xd5\x05\xbd\x64\x73\xd2\xd8\x35\xf1\x37\x72\x5e\x90\x45\x6b\x32\x61\x27\xf8\xdd\xb6\xd8\xe9\xaa\x82\x21\xca\x65\x07\x87\xe2\x50\xa6\x3b\x1a\xac\xb3\x6d\x80\xa9\x3c\x44\x05\x27\x1c\x44\xe9\xf7\x9d\x9c\xf9\xf9\xa9\xc9\xc7\x3d\xbe\x51\x18\xbb\x92\x8c\xd0\xc9\x61\xdb\x7f\xe7\x65\xd0\x53\x87\x09\x2b\xa5\xcc\xd6\x04\xb5\x55\xba\x52\xa9\xe8\x78\x45\x54\xa1\x70\x44\xd2\x46\x56\x2a\xb3\x39\x2b\xc0\x16\x29\x31\x93\xbb\xf0\xad\x66\x94\x76\x17\x98\xc2\x1a\xea\x88\x55\x7d\xe7\x99\xea\x19\xac\xc3\x86\x18\x4e\xe7\x52\x5c\x33\xc8\xb0\x76\x54\x75\xc9\x29\xb3\xa4\xaa\xf1\x08\x76\x6d\x1b\x28\x61\xf9\x20\x13\x62\xcf\xca\xb1\x6c\x94\x9e\x55\x78\xc2\xa5\x92\xbd\x56\x76\x27\xdb\x04\x99\xfc\x82\xed\x05\x05\xb3\x84\x88\x04\x37\x2c\x16\x33\x96\x05\xe4\xe8\x8f\x56\x3b\xca\xcf\xc5\x5b\x97\xe8\x48\x95\x33\xe4\x54\x51\x50\x51\x4c\xd9\x8a\xc5\x82\x70\xb2\x0d\x63\x51\x59\xb3\x21\xd7\xaf\x4e\xf3\xe1\x05\x79\xe7\x0c\xc3\xd5\xe2\x61\xf5\xdb\xea\xf6\x16\x8b\xbb\x25\xae\xd7\xeb\x25\x6e\x9f\x2e\x7f\x79\x27\xe5\xc7\x1f\xa3\x42\x5c\x52\xa1\xda\x8a\xff\xc7\xbb\x7b\xb4\x7b\x24\x27\xdc\xf8\xb4\x7f\xa3\xf6\x2f\x81\x7e\xb2\x3b\x47\xdc\x3a\xe3\x03\x36\x6b\x9d\x13\x63\x0f\x46\x18\xab\x8d\x76\x13\x6f\x62\xd2\xf3\xa6\x27\x8c\xc9\xf0\x1b\x93\x5c\xf6\xd7\x19\x3e\x52\xdd\x70\x97\xac\xe4\xff\x14\x93\x8f\x4d\x9a\x0c\xb1\x0f\xe4\x1b\x6b\x3c\xcd\x40\xce\x59\x37\xc5\x3e\xfa\xd0\xb7\x80\x9f\x5e\x47\xed\x87\xfb\xcf\x88\x3f\x25\x9f\x92\x9f\xe3\x97\x19\x8c\xae\xa2\x7e\x8a\x3b\xda\x7d\x51\x5e\x67\x5f\xfb\x09\xc7\x49\xe4\xc4\x33\x9e\x95\xc9\x68\x9c\x20\x1f\xd4\x7c\xa5\x50\x18\xe9\x9c\x33\x99\x62\xd2\xa4\xc9\x9b\x12\xf7\x11\x6f\xf5\xde\x93\xf7\x87\xfe\xfe\x0e\x00\x00\xff\xff\x1d\x1f\x08\xb4\x8f\x07\x00\x00")

func templatesSvcZserverGoGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesSvcZserverGoGotmpl,
		"templates/svc/zserver.go.gotmpl",
	)
}

func templatesSvcZserverGoGotmpl() (*asset, error) {
	bytes, err := templatesSvcZserverGoGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/svc/zserver.go.gotmpl", size: 1935, mode: os.FileMode(420), modTime: time.Unix(1524171642, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/.gitignore.gotmpl":                    templatesGitignoreGotmpl,
	"templates/Makefile.gotmpl":                      templatesMakefileGotmpl,
	"templates/README.md.gotmpl":                     templatesReadmeMdGotmpl,
	"templates/cmd/config/config.go.gotmpl":          templatesCmdConfigConfigGoGotmpl,
	"templates/cmd/gateway/handler.go.gotmpl":        templatesCmdGatewayHandlerGoGotmpl,
	"templates/cmd/gateway/main.go.gotmpl":           templatesCmdGatewayMainGoGotmpl,
	"templates/cmd/gateway/swagger.go.gotmpl":        templatesCmdGatewaySwaggerGoGotmpl,
	"templates/cmd/server/main.go.gotmpl":            templatesCmdServerMainGoGotmpl,
	"templates/docker/Dockerfile.application.gotmpl": templatesDockerDockerfileApplicationGotmpl,
	"templates/docker/Dockerfile.gateway.gotmpl":     templatesDockerDockerfileGatewayGotmpl,
	"templates/pb/service.proto.gotmpl":              templatesPbServiceProtoGotmpl,
	"templates/svc/zserver.go.gotmpl":                templatesSvcZserverGoGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		".gitignore.gotmpl": &bintree{templatesGitignoreGotmpl, map[string]*bintree{}},
		"Makefile.gotmpl":   &bintree{templatesMakefileGotmpl, map[string]*bintree{}},
		"README.md.gotmpl":  &bintree{templatesReadmeMdGotmpl, map[string]*bintree{}},
		"cmd": &bintree{nil, map[string]*bintree{
			"config": &bintree{nil, map[string]*bintree{
				"config.go.gotmpl": &bintree{templatesCmdConfigConfigGoGotmpl, map[string]*bintree{}},
			}},
			"gateway": &bintree{nil, map[string]*bintree{
				"handler.go.gotmpl": &bintree{templatesCmdGatewayHandlerGoGotmpl, map[string]*bintree{}},
				"main.go.gotmpl":    &bintree{templatesCmdGatewayMainGoGotmpl, map[string]*bintree{}},
				"swagger.go.gotmpl": &bintree{templatesCmdGatewaySwaggerGoGotmpl, map[string]*bintree{}},
			}},
			"server": &bintree{nil, map[string]*bintree{
				"main.go.gotmpl": &bintree{templatesCmdServerMainGoGotmpl, map[string]*bintree{}},
			}},
		}},
		"docker": &bintree{nil, map[string]*bintree{
			"Dockerfile.application.gotmpl": &bintree{templatesDockerDockerfileApplicationGotmpl, map[string]*bintree{}},
			"Dockerfile.gateway.gotmpl":     &bintree{templatesDockerDockerfileGatewayGotmpl, map[string]*bintree{}},
		}},
		"pb": &bintree{nil, map[string]*bintree{
			"service.proto.gotmpl": &bintree{templatesPbServiceProtoGotmpl, map[string]*bintree{}},
		}},
		"svc": &bintree{nil, map[string]*bintree{
			"zserver.go.gotmpl": &bintree{templatesSvcZserverGoGotmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
